"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[5638],{3905:(s,a,n)=>{n.d(a,{Zo:()=>i,kt:()=>u});var e=n(67294);function l(s,a,n){return a in s?Object.defineProperty(s,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):s[a]=n,s}function p(s,a){var n=Object.keys(s);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(s);a&&(e=e.filter((function(a){return Object.getOwnPropertyDescriptor(s,a).enumerable}))),n.push.apply(n,e)}return n}function t(s){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?p(Object(n),!0).forEach((function(a){l(s,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(a){Object.defineProperty(s,a,Object.getOwnPropertyDescriptor(n,a))}))}return s}function c(s,a){if(null==s)return{};var n,e,l=function(s,a){if(null==s)return{};var n,e,l={},p=Object.keys(s);for(e=0;e<p.length;e++)n=p[e],a.indexOf(n)>=0||(l[n]=s[n]);return l}(s,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(s);for(e=0;e<p.length;e++)n=p[e],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(s,n)&&(l[n]=s[n])}return l}var r=e.createContext({}),d=function(s){var a=e.useContext(r),n=a;return s&&(n="function"==typeof s?s(a):t(t({},a),s)),n},i=function(s){var a=d(s.components);return e.createElement(r.Provider,{value:a},s.children)},o={inlineCode:"code",wrapper:function(s){var a=s.children;return e.createElement(e.Fragment,{},a)}},m=e.forwardRef((function(s,a){var n=s.components,l=s.mdxType,p=s.originalType,r=s.parentName,i=c(s,["components","mdxType","originalType","parentName"]),m=d(n),u=l,y=m["".concat(r,".").concat(u)]||m[u]||o[u]||p;return n?e.createElement(y,t(t({ref:a},i),{},{components:n})):e.createElement(y,t({ref:a},i))}));function u(s,a){var n=arguments,l=a&&a.mdxType;if("string"==typeof s||l){var p=n.length,t=new Array(p);t[0]=m;var c={};for(var r in a)hasOwnProperty.call(a,r)&&(c[r]=a[r]);c.originalType=s,c.mdxType="string"==typeof s?s:l,t[1]=c;for(var d=2;d<p;d++)t[d]=n[d];return e.createElement.apply(null,t)}return e.createElement.apply(null,n)}m.displayName="MDXCreateElement"},35296:(s,a,n)=>{n.r(a),n.d(a,{assets:()=>r,contentTitle:()=>t,default:()=>o,frontMatter:()=>p,metadata:()=>c,toc:()=>d});var e=n(83117),l=(n(67294),n(3905));const p={title:"Builder"},t=void 0,c={unversionedId:"python-sdk/builder",id:"python-sdk/builder",title:"Builder",description:"\\n\\n\\nThese classes and methods make it easier to construct MetadataChangeProposals and MetadataChangeEvents.\\n\\n\\nclass datahub.emitter.mcp.MetadataChangeProposalWrapper(entityType='ENTITYTYPEUNSET', changeType='UPSERT', entityUrn=None, entityKeyAspect=None, auditHeader=None, aspectName=None, aspect=None, systemMetadata=None)\\nBases\\n\\nentityType (str)\\nchangeType (Union[str, ChangeTypeClass])\\nentityUrn (Optional[str])\\nentityKeyAspect (Optional[Aspect])\\nauditHeader (Optional[KafkaAuditHeaderClass])\\naspectName (Optional[str])\\naspect (Optional[Aspect])\\nsystemMetadata (Optional[SystemMetadataClass])\\n\\n\\n\\n\\n\\nentityType Union[str, ChangeTypeClass] = 'UPSERT'\\n\\n\\n\\nentityUrn Optional[Aspect] = None\\n\\n\\n\\nauditHeader Optional[str] = None\\n\\n\\n\\naspect Optional[SystemMetadataClass] = None\\n\\n\\n\\nclassmethod constructmany(entityUrn, aspects)\\n\\nParameters\\nList[MetadataChangeProposalWrapper]\\n\\n\\n\\n\\n\\nmakemcp()\\n\\nReturn type\\nbool\\n\\n\\n\\n\\n\\ntoobj(tuples=False, simplifiedstructure=False)\\n\\nParameters\\ndict\\n\\n\\n\\n\\n\\nclassmethod fromobj(obj, tuples=False)\\nAttempt to deserialize into an MCPW, but fall back\\nto a standard MCP if we\\u2019re missing codegen\\u2019d classes for the\\nentity key or aspect.\\n\\nParameters\\nUnion[MetadataChangeProposalWrapper, MetadataChangeProposalClass]\\n\\n\\n\\n\\n\\nclassmethod fromobjrequirewrapper(obj, tuples=False)\\n\\nParameters\\nMetadataChangeProposalWrapper\\n\\n\\n\\n\\n\\nasworkunit()\\n\\nReturn type\\nvalue (bool)\\n\\nReturn type Enum\\nAn enumeration.\\n\\n\\nUSER = 'corpuser'\\n\\n\\n\\nGROUP = 'corpGroup'\\n\\n\\n\\n\\ndatahub.emitter.mcebuilder.getsystime()\\n\\nReturn type\\nplatform (str)\\n\\nReturn type\\n\\nplatform (str)\\nname (str)\\nenv (str)\\n\\n\\nReturn type\\n\\nplatform (str)\\ninstance (str)\\n\\n\\nReturn type\\n\\nplatform (str)\\nname (str)\\nplatforminstance (Optional[str])\\nenv (str)\\n\\n\\nReturn type\\n\\nparenturn (str)\\nfieldpath (str)\\n\\n\\nReturn type\\nschemafieldurn (str)\\n\\nReturn type\\ndataseturn (str)\\n\\nReturn type\\nkey (DatasetKeyClass)\\n\\nReturn type\\nguid (str)\\n\\nReturn type\\nguid (str)\\n\\nReturn type\\nobj (dict)\\n\\nReturn type\\nassertionid (str)\\n\\nReturn type\\nassertionurn (str)\\n\\nReturn type\\nusername (str)\\n\\nReturn type\\ngroupname (str)\\n\\nReturn type\\ntag (str)\\n\\nReturn type\\n\\nowner (str)\\nownertype (OwnerType)\\n\\n\\nReturn type\\nterm (str)\\n\\nReturn type\\n\\norchestrator (str)\\nflowid (str)\\ncluster (str)\\nplatforminstance (Optional[str])\\n\\n\\nReturn type\\n\\nflowurn (str)\\njobid (str)\\n\\n\\nReturn type\\ndataProcessInstanceId (str)\\n\\nReturn type\\n\\norchestrator (str)\\nflowid (str)\\njobid (str)\\ncluster (str)\\nplatforminstance (Optional[str])\\n\\n\\nReturn type\\n\\nplatform (str)\\nname (str)\\nplatforminstance (Optional[str])\\n\\n\\nReturn type\\ndashboardurn (str)\\n\\nReturn type\\n\\nplatform (str)\\nname (str)\\nplatforminstance (Optional[str])\\n\\n\\nReturn type\\ncharturn (str)\\n\\nReturn type\\ndomain (str)\\n\\nReturn type\\n\\nfeaturetablename (str)\\nprimarykeyname (str)\\n\\n\\nReturn type\\n\\nfeaturetablename (str)\\nfeaturename (str)\\n\\n\\nReturn type\\n\\nplatform (str)\\nfeaturetablename (str)\\n\\n\\nReturn type\\n\\nplatform (str)\\nmodelname (str)\\nenv (str)\\n\\n\\nReturn type\\n\\nplatform (str)\\ndeploymentname (str)\\nenv (str)\\n\\n\\nReturn type\\n\\nplatform (str)\\ngroupname (str)\\nenv (str)\\n\\n\\nReturn type\\nownershiptype (Optional[str])\\n\\nReturn type\\nownershiptype (Optional[str])\\n\\nReturn type\\n\\nupstreamurns (List[str])\\ndownstreamurn (str)\\nlineagetype (str)\\n\\n\\nReturn type\\n\\nmce (MetadataChangeEventClass)\\nAspectType (Type[TypeVar(Aspect, bound= Aspect)])\\n\\n\\nReturn type\\n\\nmce (MetadataChangeEventClass)\\nAspectType (Type[TypeVar(Aspect, bound= Aspect)])\\n\\n\\nReturn type\\n\\nmce (MetadataChangeEventClass)\\nAspectType (Type[TypeVar(Aspect, bound= Aspect)])\\n\\n\\nReturn type\\n\\nmce (MetadataChangeEventClass)\\naspecttype (Type[TypeVar(Aspect, bound= Aspect)])\\n\\n\\nReturn type\\n\\nmce (MetadataChangeEventClass)\\ndefault (TypeVar(Aspect, bound= Aspect))\\n\\n\\nReturn type\\ntags (List[str])\\n\\nReturn type\\n\\nownerurns (List[str])\\nsourcetype (Union[str, OwnershipSourceTypeClass, None])\\nownertype (Union[str, OwnershipTypeClass])\\n\\n\\nReturn type\\ntermurns (List[str])\\n\\nReturn type\\n\\nmce (MetadataChangeEventClass)\\naspect (Optional[TypeVar(Aspect, bound= Aspect)])\\naspecttype (Type[TypeVar(Aspect, bound= Aspect)])\\n\\n\\nReturn type BaseModel\\n\\nParameters\\nDict[str, str]\\n\\n\\n\\n\\n\\nguid()\\n\\nReturn type DatahubKey\\n\\nParameters str\\n\\n\\n\\ninstance Optional[str]\\n\\n\\n\\nguiddict()\\n\\nReturn type PlatformKey\\n\\nParameters str\\n\\n\\n\\n\\nclass datahub.emitter.mcp_builder.SchemaKey(data)\\nBases\\n\\ndata (Any)\\nplatform (str)\\ninstance (str | None)\\nbackcompatinstanceforguid (str | None)\\ndatabase (str)\\nschema (str)\\n\\n\\n\\n\\n\\ndbschema PlatformKey\\n\\nParameters str\\n\\n\\n\\n\\nclass datahub.emitter.mcpbuilder.MetastoreKey(**data)\\nBases\\n\\ndata (Any)\\nplatform (str)\\ninstance (str | None)\\nbackcompatinstanceforguid (str | None)\\nmetastore (str)\\n\\n\\n\\n\\n\\nmetastore MetastoreKey\\n\\nParameters str\\n\\n\\n\\n\\nclass datahub.emitter.mcpbuilder.UnitySchemaKey(**data)\\nBases\\n\\ndata (Any)\\nplatform (str)\\ninstance (str | None)\\nbackcompatinstanceforguid (str | None)\\nmetastore (str)\\ncatalog (str)\\nunityschema (str)\\n\\n\\n\\n\\n\\nunityschema ProjectIdKey\\n\\nParameters str\\n\\n\\n\\n\\nclass datahub.emitter.mcpbuilder.FolderKey(data)\\nBases\\n\\ndata (Any)\\nplatform (str)\\ninstance (str | None)\\nbackcompat_instance_for_guid (str | None)\\nfolder_abs_path (str)\\n\\n\\n\\n\\n\\nfolder_abs_path PlatformKey\\n\\nParameters str\\n\\n\\n\\n\\nclass datahub.emitter.mcpbuilder.DatahubKeyJSONEncoder(*, skipkeys=False, ensureascii=True, checkcircular=True, allownan=True, sortkeys=False, indent=None, separators=None, default=None)\\nBases\\ndef default(self, o)\\n        iterable = iter(o)\\n    except TypeError\\n        return list(iterable)\\n    # Let the base class default method raise the TypeError\\n    return JSONEncoder.default(self, o)\\n\\n\\n\\nParameters\\nAny\\n\\n\\n\\n\\n\\n\\ndatahub.emitter.mcpbuilder.adddomaintoentitywu(entityurn, domainurn)\\n\\nParameters\\nIterable[MetadataWorkUnit]\\n\\n\\n\\n\\n\\ndatahub.emitter.mcpbuilder.addownertoentitywu(entitytype, entityurn, ownerurn)\\n\\nParameters\\nIterable[MetadataWorkUnit]\\n\\n\\n\\n\\n\\ndatahub.emitter.mcpbuilder.addtagstoentitywu(entitytype, entityurn, tags)\\n\\nParameters\\nIterable[MetadataWorkUnit]\\n\\n\\n\\n\\n\\ndatahub.emitter.mcpbuilder.wrapaspectasworkunit(entityName, entityUrn, aspectName, aspect)\\n\\nParameters\\nMetadataWorkUnit\\n\\n\\n\\n\\n\\ndatahub.emitter.mcpbuilder.gencontainers(containerkey, name, subtypes, parentcontainerkey=None, extraproperties=None, domainurn=None, description=None, ownerurn=None, externalurl=None, tags=None, qualifiedname=None, created=None, lastmodified=None)\\n\\nParameters\\nIterable[MetadataWorkUnit]\\n\\n\\n\\n\\n\\ndatahub.emitter.mcpbuilder.adddatasettocontainer(containerkey, dataseturn)\\n\\nParameters\\nIterable[MetadataWorkUnit]\\n\\n\\n\\n\\n\\ndatahub.emitter.mcpbuilder.addentitytocontainer(containerkey, entitytype, entityurn)\\n\\nParameters\\nIterable[MetadataWorkUnit]\\n\\n\\n\\n\\n\\ndatahub.emitter.mcpbuilder.mcpsfrommce(mce)\\n\\nParameters\\nIterable[MetadataChangeProposalWrapper]\\n\\n\\n\\n\\n\\ndatahub.emitter.mcpbuilder.createembedmcp(urn, embedurl)\\n\\nParameters\\nMetadataChangeProposalWrapper\\n\\n\\n\\n\\n\"}}>",source:"@site/genDocs/python-sdk/builder.md",sourceDirName:"python-sdk",slug:"/python-sdk/builder",permalink:"/datahub-project-forked/docs/python-sdk/builder",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/genDocs/python-sdk/builder.md",tags:[],version:"current",frontMatter:{title:"Builder"},sidebar:"overviewSidebar",previous:{title:"Java Emitter",permalink:"/datahub-project-forked/docs/metadata-integration/java/as-a-library"},next:{title:"Client",permalink:"/datahub-project-forked/docs/python-sdk/clients"}},r={},d=[],i={toc:d};function o(s){let{components:a,...n}=s;return(0,l.kt)("wrapper",(0,e.Z)({},i,n,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("div",{dangerouslySetInnerHTML:{__html:'<article class="bd-article" role="main">\n<section id="builder">\n\n<p>These classes and methods make it easier to construct MetadataChangeProposals and MetadataChangeEvents.</p>\n<span class="target" id="module-datahub.emitter.mcp"></span><dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp.</span></span><span class="sig-name descname"><span class="pre">MetadataChangeProposalWrapper</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entityType</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'ENTITY_TYPE_UNSET\'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">changeType</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'UPSERT\'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">entityUrn</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">entityKeyAspect</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">auditHeader</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspectName</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">systemMetadata</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">object</span></code></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entityType</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>changeType</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <a class="reference internal" href="models.html#datahub.metadata.schema_classes.ChangeTypeClass" title="datahub.metadata.schema_classes.ChangeTypeClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">ChangeTypeClass</span></code></a>])</p></li>\n<li><p><strong>entityUrn</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>entityKeyAspect</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>])</p></li>\n<li><p><strong>auditHeader</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.KafkaAuditHeaderClass" title="datahub.metadata.schema_classes.KafkaAuditHeaderClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">KafkaAuditHeaderClass</span></code></a>])</p></li>\n<li><p><strong>aspectName</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>aspect</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>])</p></li>\n<li><p><strong>systemMetadata</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.SystemMetadataClass" title="datahub.metadata.schema_classes.SystemMetadataClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">SystemMetadataClass</span></code></a>])</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.entityType">\n<span class="sig-name descname"><span class="pre">entityType</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'ENTITY_TYPE_UNSET\'</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.changeType">\n<span class="sig-name descname"><span class="pre">changeType</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">,</span> <a class="reference internal" href="models.html#datahub.metadata.schema_classes.ChangeTypeClass" title="datahub.metadata.schema_classes.ChangeTypeClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">ChangeTypeClass</span></code></a><span class="pre">]</span></em><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'UPSERT\'</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.entityUrn">\n<span class="sig-name descname"><span class="pre">entityUrn</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">]</span></em><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">None</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.entityKeyAspect">\n<span class="sig-name descname"><span class="pre">entityKeyAspect</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code><span class="pre">]</span></em><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">None</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.auditHeader">\n<span class="sig-name descname"><span class="pre">auditHeader</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><a class="reference internal" href="models.html#datahub.metadata.schema_classes.KafkaAuditHeaderClass" title="datahub.metadata.schema_classes.KafkaAuditHeaderClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">KafkaAuditHeaderClass</span></code></a><span class="pre">]</span></em><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">None</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.aspectName">\n<span class="sig-name descname"><span class="pre">aspectName</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">]</span></em><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">None</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.aspect">\n<span class="sig-name descname"><span class="pre">aspect</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code><span class="pre">]</span></em><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">None</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.systemMetadata">\n<span class="sig-name descname"><span class="pre">systemMetadata</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><a class="reference internal" href="models.html#datahub.metadata.schema_classes.SystemMetadataClass" title="datahub.metadata.schema_classes.SystemMetadataClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">SystemMetadataClass</span></code></a><span class="pre">]</span></em><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">None</span></em></dt>\n<dd></dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.construct_many">\n<em class="property"><span class="pre">classmethod</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">construct_many</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entityUrn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspects</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entityUrn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>aspects</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>]])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<a class="reference internal" href="#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.make_mcp">\n<span class="sig-name descname"><span class="pre">make_mcp</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeProposalClass" title="datahub.metadata.schema_classes.MetadataChangeProposalClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalClass</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.validate">\n<span class="sig-name descname"><span class="pre">validate</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.to_obj">\n<span class="sig-name descname"><span class="pre">to_obj</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tuples</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">simplified_structure</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>tuples</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n<li><p><strong>simplified_structure</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.from_obj">\n<em class="property"><span class="pre">classmethod</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">from_obj</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">obj</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">tuples</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Attempt to deserialize into an MCPW, but fall back\nto a standard MCP if we\u2019re missing codegen\u2019d classes for the\nentity key or aspect.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>obj</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code>)</p></li>\n<li><p><strong>tuples</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<a class="reference internal" href="#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>, <a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeProposalClass" title="datahub.metadata.schema_classes.MetadataChangeProposalClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.from_obj_require_wrapper">\n<em class="property"><span class="pre">classmethod</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">from_obj_require_wrapper</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">obj</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">tuples</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>obj</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code>)</p></li>\n<li><p><strong>tuples</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><a class="reference internal" href="#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.mcp.MetadataChangeProposalWrapper.as_workunit">\n<span class="sig-name descname"><span class="pre">as_workunit</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataWorkUnit</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n</dd></dl>\n<span class="target" id="module-datahub.emitter.mce_builder"></span><p>Convenience functions for creating MCEs</p>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.set_dataset_urn_to_lower">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">set_dataset_urn_to_lower</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">value</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>value</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.OwnerType">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">OwnerType</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">value</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">Enum</span></code></p>\n<p>An enumeration.</p>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.OwnerType.USER">\n<span class="sig-name descname"><span class="pre">USER</span></span><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'corpuser\'</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.OwnerType.GROUP">\n<span class="sig-name descname"><span class="pre">GROUP</span></span><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'corpGroup\'</span></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.get_sys_time">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">get_sys_time</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_data_platform_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_data_platform_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">platform</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>platform</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_dataset_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_dataset_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">platform</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">env</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'PROD\'</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>platform</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>env</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_dataplatform_instance_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_dataplatform_instance_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">platform</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">instance</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>platform</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>instance</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_dataset_urn_with_platform_instance">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_dataset_urn_with_platform_instance</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">platform</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform_instance</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">env</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'PROD\'</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>platform</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>platform_instance</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>env</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_schema_field_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_schema_field_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">parent_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">field_path</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>parent_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>field_path</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.schema_field_urn_to_key">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">schema_field_urn_to_key</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">schema_field_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>schema_field_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.SchemaFieldKeyClass" title="datahub.metadata.schema_classes.SchemaFieldKeyClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">SchemaFieldKeyClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.dataset_urn_to_key">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">dataset_urn_to_key</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">dataset_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>dataset_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.DatasetKeyClass" title="datahub.metadata.schema_classes.DatasetKeyClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">DatasetKeyClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.dataset_key_to_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">dataset_key_to_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">key</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>key</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.DatasetKeyClass" title="datahub.metadata.schema_classes.DatasetKeyClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">DatasetKeyClass</span></code></a>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_container_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_container_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">guid</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>guid</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.container_urn_to_key">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">container_urn_to_key</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">guid</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>guid</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.ContainerKeyClass" title="datahub.metadata.schema_classes.ContainerKeyClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">ContainerKeyClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.datahub_guid">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">datahub_guid</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">obj</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>obj</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_assertion_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_assertion_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">assertion_id</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>assertion_id</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.assertion_urn_to_key">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">assertion_urn_to_key</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">assertion_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>assertion_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.AssertionKeyClass" title="datahub.metadata.schema_classes.AssertionKeyClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">AssertionKeyClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_user_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_user_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">username</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Makes a user urn if the input is not a user urn already</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>username</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_group_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_group_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">groupname</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Makes a group urn if the input is not a group urn already</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>groupname</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_tag_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_tag_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tag</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Makes a tag urn if the input is not a tag urn already</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>tag</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_owner_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_owner_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">owner</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">owner_type</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>owner</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>owner_type</strong> (<a class="reference internal" href="#datahub.emitter.mce_builder.OwnerType" title="datahub.emitter.mce_builder.OwnerType"><code class="xref py py-class docutils literal notranslate"><span class="pre">OwnerType</span></code></a>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_term_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_term_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">term</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Makes a term urn if the input is not a term urn already</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>term</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_data_flow_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_data_flow_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">orchestrator</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">flow_id</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">cluster</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'prod\'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform_instance</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>orchestrator</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>flow_id</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>cluster</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>platform_instance</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_data_job_urn_with_flow">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_data_job_urn_with_flow</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">flow_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">job_id</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>flow_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>job_id</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_data_process_instance_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_data_process_instance_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">dataProcessInstanceId</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>dataProcessInstanceId</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_data_job_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_data_job_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">orchestrator</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">flow_id</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">job_id</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">cluster</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'prod\'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform_instance</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>orchestrator</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>flow_id</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>job_id</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>cluster</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>platform_instance</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_dashboard_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_dashboard_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">platform</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform_instance</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>platform</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>platform_instance</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.dashboard_urn_to_key">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">dashboard_urn_to_key</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">dashboard_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>dashboard_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.DashboardKeyClass" title="datahub.metadata.schema_classes.DashboardKeyClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">DashboardKeyClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_chart_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_chart_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">platform</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform_instance</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>platform</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>platform_instance</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.chart_urn_to_key">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">chart_urn_to_key</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">chart_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>chart_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.ChartKeyClass" title="datahub.metadata.schema_classes.ChartKeyClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">ChartKeyClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_domain_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_domain_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">domain</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>domain</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_ml_primary_key_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_ml_primary_key_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">feature_table_name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">primary_key_name</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>feature_table_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>primary_key_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_ml_feature_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_ml_feature_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">feature_table_name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">feature_name</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>feature_table_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>feature_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_ml_feature_table_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_ml_feature_table_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">platform</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">feature_table_name</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>platform</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>feature_table_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_ml_model_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_ml_model_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">platform</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">model_name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">env</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>platform</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>model_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>env</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_ml_model_deployment_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_ml_model_deployment_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">platform</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">deployment_name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">env</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>platform</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>deployment_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>env</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_ml_model_group_urn">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_ml_model_group_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">platform</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">group_name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">env</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>platform</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>group_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>env</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.is_valid_ownership_type">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">is_valid_ownership_type</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">ownership_type</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>ownership_type</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.validate_ownership_type">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">validate_ownership_type</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">ownership_type</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>ownership_type</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_lineage_mce">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_lineage_mce</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">upstream_urns</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">downstream_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">lineage_type</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'TRANSFORMED\'</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>upstream_urns</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>downstream_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>lineage_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.can_add_aspect">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">can_add_aspect</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mce</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">AspectType</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>mce</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>)</p></li>\n<li><p><strong>AspectType</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.assert_can_add_aspect">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">assert_can_add_aspect</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mce</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">AspectType</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>mce</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>)</p></li>\n<li><p><strong>AspectType</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.get_aspect_if_available">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">get_aspect_if_available</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mce</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">AspectType</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>mce</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>)</p></li>\n<li><p><strong>AspectType</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.remove_aspect_if_available">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">remove_aspect_if_available</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mce</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_type</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>mce</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>)</p></li>\n<li><p><strong>aspect_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.get_or_add_aspect">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">get_or_add_aspect</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mce</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">default</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>mce</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>)</p></li>\n<li><p><strong>default</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>))</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_global_tag_aspect_with_tag_list">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_global_tag_aspect_with_tag_list</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tags</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>tags</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><a class="reference internal" href="models.html#datahub.metadata.schema_classes.GlobalTagsClass" title="datahub.metadata.schema_classes.GlobalTagsClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">GlobalTagsClass</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_ownership_aspect_from_urn_list">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_ownership_aspect_from_urn_list</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">owner_urns</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">source_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">owner_type</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'DATAOWNER\'</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>owner_urns</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>source_type</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <a class="reference internal" href="models.html#datahub.metadata.schema_classes.OwnershipSourceTypeClass" title="datahub.metadata.schema_classes.OwnershipSourceTypeClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">OwnershipSourceTypeClass</span></code></a>, <code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code>])</p></li>\n<li><p><strong>owner_type</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <a class="reference internal" href="models.html#datahub.metadata.schema_classes.OwnershipTypeClass" title="datahub.metadata.schema_classes.OwnershipTypeClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">OwnershipTypeClass</span></code></a>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><a class="reference internal" href="models.html#datahub.metadata.schema_classes.OwnershipClass" title="datahub.metadata.schema_classes.OwnershipClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">OwnershipClass</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.make_glossary_terms_aspect_from_urn_list">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">make_glossary_terms_aspect_from_urn_list</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">term_urns</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>term_urns</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><a class="reference internal" href="models.html#datahub.metadata.schema_classes.GlossaryTermsClass" title="datahub.metadata.schema_classes.GlossaryTermsClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">GlossaryTermsClass</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mce_builder.set_aspect">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mce_builder.</span></span><span class="sig-name descname"><span class="pre">set_aspect</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mce</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_type</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Sets the aspect to the provided aspect, overwriting any previous aspect value that might have existed before.\nIf passed in aspect is None, then the existing aspect value will be removed</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>mce</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>)</p></li>\n<li><p><strong>aspect</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)])</p></li>\n<li><p><strong>aspect_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<span class="target" id="module-datahub.emitter.mcp_builder"></span><dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.DatahubKey">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">DatahubKey</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">BaseModel</span></code></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p>\n</dd>\n</dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.DatahubKey.guid_dict">\n<span class="sig-name descname"><span class="pre">guid_dict</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.DatahubKey.guid">\n<span class="sig-name descname"><span class="pre">guid</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.PlatformKey">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">PlatformKey</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <a class="reference internal" href="#datahub.emitter.mcp_builder.DatahubKey" title="datahub.emitter.mcp_builder.DatahubKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">DatahubKey</span></code></a></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>platform</strong> (<em>str</em>)</p></li>\n<li><p><strong>instance</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>backcompat_instance_for_guid</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.PlatformKey.platform">\n<span class="sig-name descname"><span class="pre">platform</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.PlatformKey.instance">\n<span class="sig-name descname"><span class="pre">instance</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.PlatformKey.backcompat_instance_for_guid">\n<span class="sig-name descname"><span class="pre">backcompat_instance_for_guid</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">]</span></em></dt>\n<dd></dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.PlatformKey.guid_dict">\n<span class="sig-name descname"><span class="pre">guid_dict</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.DatabaseKey">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">DatabaseKey</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <a class="reference internal" href="#datahub.emitter.mcp_builder.PlatformKey" title="datahub.emitter.mcp_builder.PlatformKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">PlatformKey</span></code></a></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>platform</strong> (<em>str</em>)</p></li>\n<li><p><strong>instance</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>backcompat_instance_for_guid</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>database</strong> (<em>str</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.DatabaseKey.database">\n<span class="sig-name descname"><span class="pre">database</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.SchemaKey">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">SchemaKey</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <a class="reference internal" href="#datahub.emitter.mcp_builder.DatabaseKey" title="datahub.emitter.mcp_builder.DatabaseKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">DatabaseKey</span></code></a></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>platform</strong> (<em>str</em>)</p></li>\n<li><p><strong>instance</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>backcompat_instance_for_guid</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>database</strong> (<em>str</em>)</p></li>\n<li><p><strong>schema</strong> (<em>str</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.SchemaKey.db_schema">\n<span class="sig-name descname"><span class="pre">db_schema</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.ProjectIdKey">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">ProjectIdKey</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <a class="reference internal" href="#datahub.emitter.mcp_builder.PlatformKey" title="datahub.emitter.mcp_builder.PlatformKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">PlatformKey</span></code></a></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>platform</strong> (<em>str</em>)</p></li>\n<li><p><strong>instance</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>backcompat_instance_for_guid</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>project_id</strong> (<em>str</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.ProjectIdKey.project_id">\n<span class="sig-name descname"><span class="pre">project_id</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.MetastoreKey">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">MetastoreKey</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <a class="reference internal" href="#datahub.emitter.mcp_builder.PlatformKey" title="datahub.emitter.mcp_builder.PlatformKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">PlatformKey</span></code></a></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>platform</strong> (<em>str</em>)</p></li>\n<li><p><strong>instance</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>backcompat_instance_for_guid</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>metastore</strong> (<em>str</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.MetastoreKey.metastore">\n<span class="sig-name descname"><span class="pre">metastore</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.CatalogKey">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">CatalogKey</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <a class="reference internal" href="#datahub.emitter.mcp_builder.MetastoreKey" title="datahub.emitter.mcp_builder.MetastoreKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetastoreKey</span></code></a></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>platform</strong> (<em>str</em>)</p></li>\n<li><p><strong>instance</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>backcompat_instance_for_guid</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>metastore</strong> (<em>str</em>)</p></li>\n<li><p><strong>catalog</strong> (<em>str</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.CatalogKey.catalog">\n<span class="sig-name descname"><span class="pre">catalog</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.UnitySchemaKey">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">UnitySchemaKey</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <a class="reference internal" href="#datahub.emitter.mcp_builder.CatalogKey" title="datahub.emitter.mcp_builder.CatalogKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">CatalogKey</span></code></a></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>platform</strong> (<em>str</em>)</p></li>\n<li><p><strong>instance</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>backcompat_instance_for_guid</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>metastore</strong> (<em>str</em>)</p></li>\n<li><p><strong>catalog</strong> (<em>str</em>)</p></li>\n<li><p><strong>unity_schema</strong> (<em>str</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.UnitySchemaKey.unity_schema">\n<span class="sig-name descname"><span class="pre">unity_schema</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.BigQueryDatasetKey">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">BigQueryDatasetKey</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <a class="reference internal" href="#datahub.emitter.mcp_builder.ProjectIdKey" title="datahub.emitter.mcp_builder.ProjectIdKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">ProjectIdKey</span></code></a></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>platform</strong> (<em>str</em>)</p></li>\n<li><p><strong>instance</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>backcompat_instance_for_guid</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>project_id</strong> (<em>str</em>)</p></li>\n<li><p><strong>dataset_id</strong> (<em>str</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.BigQueryDatasetKey.dataset_id">\n<span class="sig-name descname"><span class="pre">dataset_id</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.FolderKey">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">FolderKey</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <a class="reference internal" href="#datahub.emitter.mcp_builder.PlatformKey" title="datahub.emitter.mcp_builder.PlatformKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">PlatformKey</span></code></a></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>platform</strong> (<em>str</em>)</p></li>\n<li><p><strong>instance</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>backcompat_instance_for_guid</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>folder_abs_path</strong> (<em>str</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.FolderKey.folder_abs_path">\n<span class="sig-name descname"><span class="pre">folder_abs_path</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.S3BucketKey">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">S3BucketKey</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <a class="reference internal" href="#datahub.emitter.mcp_builder.PlatformKey" title="datahub.emitter.mcp_builder.PlatformKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">PlatformKey</span></code></a></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>platform</strong> (<em>str</em>)</p></li>\n<li><p><strong>instance</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>backcompat_instance_for_guid</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>bucket_name</strong> (<em>str</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.S3BucketKey.bucket_name">\n<span class="sig-name descname"><span class="pre">bucket_name</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.DatahubKeyJSONEncoder">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">DatahubKeyJSONEncoder</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">*</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">skipkeys</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">ensure_ascii</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">check_circular</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">allow_nan</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">sort_keys</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">indent</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">separators</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">default</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">JSONEncoder</span></code></p>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.DatahubKeyJSONEncoder.default">\n<span class="sig-name descname"><span class="pre">default</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">obj</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Implement this method in a subclass such that it returns\na serializable object for <code class="docutils literal notranslate"><span class="pre">o</span></code>, or calls the base implementation\n(to raise a <code class="docutils literal notranslate"><span class="pre">TypeError</span></code>).</p>\n<p>For example, to support arbitrary iterators, you could\nimplement default like this:</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">default</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">o</span><span class="p">):</span>\n    <span class="k">try</span><span class="p">:</span>\n        <span class="n">iterable</span> <span class="o">=</span> <span class="nb">iter</span><span class="p">(</span><span class="n">o</span><span class="p">)</span>\n    <span class="k">except</span> <span class="ne">TypeError</span><span class="p">:</span>\n        <span class="k">pass</span>\n    <span class="k">else</span><span class="p">:</span>\n        <span class="k">return</span> <span class="nb">list</span><span class="p">(</span><span class="n">iterable</span><span class="p">)</span>\n    <span class="c1"># Let the base class default method raise the TypeError</span>\n    <span class="k">return</span> <span class="n">JSONEncoder</span><span class="o">.</span><span class="n">default</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">o</span><span class="p">)</span>\n</pre></div>\n</div>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>obj</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.add_domain_to_entity_wu">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">add_domain_to_entity_wu</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">domain_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>domain_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataWorkUnit</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.add_owner_to_entity_wu">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">add_owner_to_entity_wu</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">owner_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>owner_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataWorkUnit</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.add_tags_to_entity_wu">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">add_tags_to_entity_wu</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">tags</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>tags</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataWorkUnit</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.wrap_aspect_as_workunit">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">wrap_aspect_as_workunit</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entityName</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">entityUrn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspectName</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entityName</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>entityUrn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>aspectName</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>aspect</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataWorkUnit</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.gen_containers">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">gen_containers</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">container_key</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">sub_types</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">parent_container_key</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">extra_properties</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">domain_urn</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">description</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">owner_urn</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">external_url</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">tags</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">qualified_name</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">created</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">last_modified</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>container_key</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">KeyType</span></code>, bound= <a class="reference internal" href="#datahub.emitter.mcp_builder.PlatformKey" title="datahub.emitter.mcp_builder.PlatformKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">PlatformKey</span></code></a>))</p></li>\n<li><p><strong>name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>sub_types</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>parent_container_key</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="#datahub.emitter.mcp_builder.PlatformKey" title="datahub.emitter.mcp_builder.PlatformKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">PlatformKey</span></code></a>])</p></li>\n<li><p><strong>extra_properties</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]])</p></li>\n<li><p><strong>domain_urn</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>description</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>owner_urn</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>external_url</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>tags</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]])</p></li>\n<li><p><strong>qualified_name</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>created</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>])</p></li>\n<li><p><strong>last_modified</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataWorkUnit</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.add_dataset_to_container">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">add_dataset_to_container</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">container_key</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">dataset_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>container_key</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">KeyType</span></code>, bound= <a class="reference internal" href="#datahub.emitter.mcp_builder.PlatformKey" title="datahub.emitter.mcp_builder.PlatformKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">PlatformKey</span></code></a>))</p></li>\n<li><p><strong>dataset_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataWorkUnit</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.add_entity_to_container">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">add_entity_to_container</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">container_key</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">entity_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>container_key</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">KeyType</span></code>, bound= <a class="reference internal" href="#datahub.emitter.mcp_builder.PlatformKey" title="datahub.emitter.mcp_builder.PlatformKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">PlatformKey</span></code></a>))</p></li>\n<li><p><strong>entity_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataWorkUnit</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.mcps_from_mce">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">mcps_from_mce</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mce</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>mce</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<a class="reference internal" href="#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.emitter.mcp_builder.create_embed_mcp">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.mcp_builder.</span></span><span class="sig-name descname"><span class="pre">create_embed_mcp</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">embed_url</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>embed_url</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><a class="reference internal" href="#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n</section>\n</article>'}}))}o.isMDXComponent=!0}}]);