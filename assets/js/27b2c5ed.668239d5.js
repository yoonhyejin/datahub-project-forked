"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[6806],{3905:(t,l,e)=>{e.d(l,{Zo:()=>s,kt:()=>c});var n=e(67294);function r(t,l,e){return l in t?Object.defineProperty(t,l,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[l]=e,t}function u(t,l){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);l&&(n=n.filter((function(l){return Object.getOwnPropertyDescriptor(t,l).enumerable}))),e.push.apply(e,n)}return e}function a(t){for(var l=1;l<arguments.length;l++){var e=null!=arguments[l]?arguments[l]:{};l%2?u(Object(e),!0).forEach((function(l){r(t,l,e[l])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):u(Object(e)).forEach((function(l){Object.defineProperty(t,l,Object.getOwnPropertyDescriptor(e,l))}))}return t}function o(t,l){if(null==t)return{};var e,n,r=function(t,l){if(null==t)return{};var e,n,r={},u=Object.keys(t);for(n=0;n<u.length;n++)e=u[n],l.indexOf(e)>=0||(r[e]=t[e]);return r}(t,l);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(t);for(n=0;n<u.length;n++)e=u[n],l.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var k=n.createContext({}),d=function(t){var l=n.useContext(k),e=l;return t&&(e="function"==typeof t?t(l):a(a({},l),t)),e},s=function(t){var l=d(t.components);return n.createElement(k.Provider,{value:l},t.children)},i={inlineCode:"code",wrapper:function(t){var l=t.children;return n.createElement(n.Fragment,{},l)}},p=n.forwardRef((function(t,l){var e=t.components,r=t.mdxType,u=t.originalType,k=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),p=d(e),c=r,h=p["".concat(k,".").concat(c)]||p[c]||i[c]||u;return e?n.createElement(h,a(a({ref:l},s),{},{components:e})):n.createElement(h,a({ref:l},s))}));function c(t,l){var e=arguments,r=l&&l.mdxType;if("string"==typeof t||r){var u=e.length,a=new Array(u);a[0]=p;var o={};for(var k in l)hasOwnProperty.call(l,k)&&(o[k]=l[k]);o.originalType=t,o.mdxType="string"==typeof t?t:r,a[1]=o;for(var d=2;d<u;d++)a[d]=e[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,e)}p.displayName="MDXCreateElement"},39765:(t,l,e)=>{e.r(l),e.d(l,{assets:()=>k,contentTitle:()=>a,default:()=>i,frontMatter:()=>u,metadata:()=>o,toc:()=>d});var n=e(83117),r=(e(67294),e(3905));const u={id:"inputObjects",title:"Input objects",slug:"inputObjects",sidebar_position:7},a=void 0,o={unversionedId:"graphql/inputObjects",id:"graphql/inputObjects",title:"Input objects",description:"AcceptRoleInput",source:"@site/genDocs/graphql/inputObjects.md",sourceDirName:"graphql",slug:"/graphql/inputObjects",permalink:"/datahub-project-forked/docs/graphql/inputObjects",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/genDocs/graphql/inputObjects.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{id:"inputObjects",title:"Input objects",slug:"inputObjects",sidebar_position:7},sidebar:"overviewSidebar",previous:{title:"Objects",permalink:"/datahub-project-forked/docs/graphql/objects"},next:{title:"Interfaces",permalink:"/datahub-project-forked/docs/graphql/interfaces"}},k={},d=[{value:"AcceptRoleInput",id:"acceptroleinput",level:2},{value:"ActorFilterInput",id:"actorfilterinput",level:2},{value:"AddGroupMembersInput",id:"addgroupmembersinput",level:2},{value:"AddLinkInput",id:"addlinkinput",level:2},{value:"AddNativeGroupMembersInput",id:"addnativegroupmembersinput",level:2},{value:"AddOwnerInput",id:"addownerinput",level:2},{value:"AddOwnersInput",id:"addownersinput",level:2},{value:"AddTagsInput",id:"addtagsinput",level:2},{value:"AddTermsInput",id:"addtermsinput",level:2},{value:"AndFilterInput",id:"andfilterinput",level:2},{value:"AspectParams",id:"aspectparams",level:2},{value:"AutoCompleteInput",id:"autocompleteinput",level:2},{value:"AutoCompleteMultipleInput",id:"autocompletemultipleinput",level:2},{value:"BatchAddOwnersInput",id:"batchaddownersinput",level:2},{value:"BatchAddTagsInput",id:"batchaddtagsinput",level:2},{value:"BatchAddTermsInput",id:"batchaddtermsinput",level:2},{value:"BatchAssignRoleInput",id:"batchassignroleinput",level:2},{value:"BatchDatasetUpdateInput",id:"batchdatasetupdateinput",level:2},{value:"BatchGetStepStatesInput",id:"batchgetstepstatesinput",level:2},{value:"BatchRemoveOwnersInput",id:"batchremoveownersinput",level:2},{value:"BatchRemoveTagsInput",id:"batchremovetagsinput",level:2},{value:"BatchRemoveTermsInput",id:"batchremovetermsinput",level:2},{value:"BatchSetDomainInput",id:"batchsetdomaininput",level:2},{value:"BatchUpdateDeprecationInput",id:"batchupdatedeprecationinput",level:2},{value:"BatchUpdateSoftDeletedInput",id:"batchupdatesoftdeletedinput",level:2},{value:"BatchUpdateStepStatesInput",id:"batchupdatestepstatesinput",level:2},{value:"BrowseInput",id:"browseinput",level:2},{value:"BrowsePathsInput",id:"browsepathsinput",level:2},{value:"CancelIngestionExecutionRequestInput",id:"cancelingestionexecutionrequestinput",level:2},{value:"ChartEditablePropertiesUpdate",id:"charteditablepropertiesupdate",level:2},{value:"ChartUpdateInput",id:"chartupdateinput",level:2},{value:"ContainerEntitiesInput",id:"containerentitiesinput",level:2},{value:"CorpGroupUpdateInput",id:"corpgroupupdateinput",level:2},{value:"CorpUserUpdateInput",id:"corpuserupdateinput",level:2},{value:"CreateAccessTokenInput",id:"createaccesstokeninput",level:2},{value:"CreateDomainInput",id:"createdomaininput",level:2},{value:"CreateGlossaryEntityInput",id:"createglossaryentityinput",level:2},{value:"CreateGroupInput",id:"creategroupinput",level:2},{value:"CreateIngestionExecutionRequestInput",id:"createingestionexecutionrequestinput",level:2},{value:"CreateInviteTokenInput",id:"createinvitetokeninput",level:2},{value:"CreateNativeUserResetTokenInput",id:"createnativeuserresettokeninput",level:2},{value:"CreatePostInput",id:"createpostinput",level:2},{value:"CreateQueryInput",id:"createqueryinput",level:2},{value:"CreateQueryPropertiesInput",id:"createquerypropertiesinput",level:2},{value:"CreateQuerySubjectInput",id:"createquerysubjectinput",level:2},{value:"CreateSecretInput",id:"createsecretinput",level:2},{value:"CreateTagInput",id:"createtaginput",level:2},{value:"CreateTestConnectionRequestInput",id:"createtestconnectionrequestinput",level:2},{value:"CreateTestInput",id:"createtestinput",level:2},{value:"CreateViewInput",id:"createviewinput",level:2},{value:"DashboardEditablePropertiesUpdate",id:"dashboardeditablepropertiesupdate",level:2},{value:"DashboardUpdateInput",id:"dashboardupdateinput",level:2},{value:"DataFlowEditablePropertiesUpdate",id:"datafloweditablepropertiesupdate",level:2},{value:"DataFlowUpdateInput",id:"dataflowupdateinput",level:2},{value:"DataHubViewDefinitionInput",id:"datahubviewdefinitioninput",level:2},{value:"DataHubViewFilterInput",id:"datahubviewfilterinput",level:2},{value:"DataJobEditablePropertiesUpdate",id:"datajobeditablepropertiesupdate",level:2},{value:"DataJobUpdateInput",id:"datajobupdateinput",level:2},{value:"DatasetDeprecationUpdate",id:"datasetdeprecationupdate",level:2},{value:"DatasetEditablePropertiesUpdate",id:"dataseteditablepropertiesupdate",level:2},{value:"DatasetUpdateInput",id:"datasetupdateinput",level:2},{value:"DescriptionUpdateInput",id:"descriptionupdateinput",level:2},{value:"DomainEntitiesInput",id:"domainentitiesinput",level:2},{value:"EditableSchemaFieldInfoUpdate",id:"editableschemafieldinfoupdate",level:2},{value:"EditableSchemaMetadataUpdate",id:"editableschemametadataupdate",level:2},{value:"EntityCountInput",id:"entitycountinput",level:2},{value:"EntityRequestContext",id:"entityrequestcontext",level:2},{value:"FacetFilterInput",id:"facetfilterinput",level:2},{value:"FilterInput",id:"filterinput",level:2},{value:"GetAccessTokenInput",id:"getaccesstokeninput",level:2},{value:"GetGrantedPrivilegesInput",id:"getgrantedprivilegesinput",level:2},{value:"GetInviteTokenInput",id:"getinvitetokeninput",level:2},{value:"GetRootGlossaryEntitiesInput",id:"getrootglossaryentitiesinput",level:2},{value:"GetSchemaBlameInput",id:"getschemablameinput",level:2},{value:"GetSchemaVersionListInput",id:"getschemaversionlistinput",level:2},{value:"GetSecretValuesInput",id:"getsecretvaluesinput",level:2},{value:"GlobalTagsUpdate",id:"globaltagsupdate",level:2},{value:"InstitutionalMemoryMetadataUpdate",id:"institutionalmemorymetadataupdate",level:2},{value:"InstitutionalMemoryUpdate",id:"institutionalmemoryupdate",level:2},{value:"LineageEdge",id:"lineageedge",level:2},{value:"LineageInput",id:"lineageinput",level:2},{value:"ListAccessTokenInput",id:"listaccesstokeninput",level:2},{value:"ListDomainsInput",id:"listdomainsinput",level:2},{value:"ListGlobalViewsInput",id:"listglobalviewsinput",level:2},{value:"ListGroupsInput",id:"listgroupsinput",level:2},{value:"ListIngestionSourcesInput",id:"listingestionsourcesinput",level:2},{value:"ListMyViewsInput",id:"listmyviewsinput",level:2},{value:"ListPoliciesInput",id:"listpoliciesinput",level:2},{value:"ListPostsInput",id:"listpostsinput",level:2},{value:"ListQueriesInput",id:"listqueriesinput",level:2},{value:"ListRecommendationsInput",id:"listrecommendationsinput",level:2},{value:"ListRolesInput",id:"listrolesinput",level:2},{value:"ListSecretsInput",id:"listsecretsinput",level:2},{value:"ListTestsInput",id:"listtestsinput",level:2},{value:"ListUsersInput",id:"listusersinput",level:2},{value:"MetadataAnalyticsInput",id:"metadataanalyticsinput",level:2},{value:"NotebookEditablePropertiesUpdate",id:"notebookeditablepropertiesupdate",level:2},{value:"NotebookUpdateInput",id:"notebookupdateinput",level:2},{value:"OwnerInput",id:"ownerinput",level:2},{value:"OwnershipUpdate",id:"ownershipupdate",level:2},{value:"OwnerUpdate",id:"ownerupdate",level:2},{value:"PolicyMatchCriterionInput",id:"policymatchcriterioninput",level:2},{value:"PolicyMatchFilterInput",id:"policymatchfilterinput",level:2},{value:"PolicyUpdateInput",id:"policyupdateinput",level:2},{value:"QueryStatementInput",id:"querystatementinput",level:2},{value:"RecommendationRequestContext",id:"recommendationrequestcontext",level:2},{value:"RelatedTermsInput",id:"relatedtermsinput",level:2},{value:"RelationshipsInput",id:"relationshipsinput",level:2},{value:"RemoveGroupMembersInput",id:"removegroupmembersinput",level:2},{value:"RemoveLinkInput",id:"removelinkinput",level:2},{value:"RemoveNativeGroupMembersInput",id:"removenativegroupmembersinput",level:2},{value:"RemoveOwnerInput",id:"removeownerinput",level:2},{value:"ReportOperationInput",id:"reportoperationinput",level:2},{value:"ResourceFilterInput",id:"resourcefilterinput",level:2},{value:"ResourceRefInput",id:"resourcerefinput",level:2},{value:"ResourceSpec",id:"resourcespec",level:2},{value:"RollbackIngestionInput",id:"rollbackingestioninput",level:2},{value:"ScrollAcrossEntitiesInput",id:"scrollacrossentitiesinput",level:2},{value:"ScrollAcrossLineageInput",id:"scrollacrosslineageinput",level:2},{value:"SearchAcrossEntitiesInput",id:"searchacrossentitiesinput",level:2},{value:"SearchAcrossLineageInput",id:"searchacrosslineageinput",level:2},{value:"SearchFlags",id:"searchflags",level:2},{value:"SearchInput",id:"searchinput",level:2},{value:"SearchRequestContext",id:"searchrequestcontext",level:2},{value:"StepStateInput",id:"stepstateinput",level:2},{value:"StringMapEntryInput",id:"stringmapentryinput",level:2},{value:"TagAssociationInput",id:"tagassociationinput",level:2},{value:"TagAssociationUpdate",id:"tagassociationupdate",level:2},{value:"TagUpdateInput",id:"tagupdateinput",level:2},{value:"TermAssociationInput",id:"termassociationinput",level:2},{value:"TestDefinitionInput",id:"testdefinitioninput",level:2},{value:"UpdateCorpUserViewsSettingsInput",id:"updatecorpuserviewssettingsinput",level:2},{value:"UpdateDeprecationInput",id:"updatedeprecationinput",level:2},{value:"UpdateEmbedInput",id:"updateembedinput",level:2},{value:"UpdateGlobalViewsSettingsInput",id:"updateglobalviewssettingsinput",level:2},{value:"UpdateIngestionSourceConfigInput",id:"updateingestionsourceconfiginput",level:2},{value:"UpdateIngestionSourceInput",id:"updateingestionsourceinput",level:2},{value:"UpdateIngestionSourceScheduleInput",id:"updateingestionsourcescheduleinput",level:2},{value:"UpdateLineageInput",id:"updatelineageinput",level:2},{value:"UpdateMediaInput",id:"updatemediainput",level:2},{value:"UpdateNameInput",id:"updatenameinput",level:2},{value:"UpdateParentNodeInput",id:"updateparentnodeinput",level:2},{value:"UpdatePostContentInput",id:"updatepostcontentinput",level:2},{value:"UpdateQueryInput",id:"updatequeryinput",level:2},{value:"UpdateQueryPropertiesInput",id:"updatequerypropertiesinput",level:2},{value:"UpdateQuerySubjectInput",id:"updatequerysubjectinput",level:2},{value:"UpdateTestInput",id:"updatetestinput",level:2},{value:"UpdateUserSettingInput",id:"updateusersettinginput",level:2},{value:"UpdateViewInput",id:"updateviewinput",level:2}],s={toc:d};function i(t){let{components:l,...e}=t;return(0,r.kt)("wrapper",(0,n.Z)({},s,e,{components:l,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"acceptroleinput"},"AcceptRoleInput"),(0,r.kt)("p",null,"Input provided when accepting a DataHub role using an invite token"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"inviteToken",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The token needed to accept the role"))))),(0,r.kt)("h2",{id:"actorfilterinput"},"ActorFilterInput"),(0,r.kt)("p",null,"Input required when creating or updating an Access Policies Determines which actors the Policy applies to"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"users",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A disjunctive set of users to apply the policy to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"groups",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A disjunctive set of groups to apply the policy to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceOwners",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether the filter should return TRUE for owners of a particular resource Only applies to policies of type METADATA, which have a resource associated with them"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"allUsers",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether the filter should apply to all users"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"allGroups",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether the filter should apply to all groups"))))),(0,r.kt)("h2",{id:"addgroupmembersinput"},"AddGroupMembersInput"),(0,r.kt)("p",null,"Input required to add members to an external DataHub group"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"groupUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The group to add members to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"userUrns",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The members to add to the group"))))),(0,r.kt)("h2",{id:"addlinkinput"},"AddLinkInput"),(0,r.kt)("p",null,"Input provided when adding the association between a Metadata Entity and a Link"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"linkUrl",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The url of the link to add or remove"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"label",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A label to attach to the link"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the resource or entity to attach the link to, for example a dataset urn"))))),(0,r.kt)("h2",{id:"addnativegroupmembersinput"},"AddNativeGroupMembersInput"),(0,r.kt)("p",null,"Input required to add members to a native DataHub group"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"groupUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The group to add members to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"userUrns",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The members to add to the group"))))),(0,r.kt)("h2",{id:"addownerinput"},"AddOwnerInput"),(0,r.kt)("p",null,"Input provided when adding the association between a Metadata Entity and an user or group owner"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownerUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Owner to add or remove"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownerEntityType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#ownerentitytype"},(0,r.kt)("code",null,"OwnerEntityType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The owner type, either a user or group"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#ownershiptype"},(0,r.kt)("code",null,"OwnershipType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The ownership type for the new owner. If none is provided, then a new NONE will be added."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the resource or entity to attach or remove the owner from, for example a dataset urn"))))),(0,r.kt)("h2",{id:"addownersinput"},"AddOwnersInput"),(0,r.kt)("p",null,"Input provided when adding multiple associations between a Metadata Entity and an user or group owner"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"owners",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#ownerinput"},(0,r.kt)("code",null,"[OwnerInput!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Owner to add or remove"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the resource or entity to attach or remove the owner from, for example a dataset urn"))))),(0,r.kt)("h2",{id:"addtagsinput"},"AddTagsInput"),(0,r.kt)("p",null,"Input provided when adding tags to an asset"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"tagUrns",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target Metadata Entity to add or remove the Tag to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResourceType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#subresourcetype"},(0,r.kt)("code",null,"SubResourceType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional type of a sub resource to attach the Tag to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResource",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional sub resource identifier to attach the Tag to"))))),(0,r.kt)("h2",{id:"addtermsinput"},"AddTermsInput"),(0,r.kt)("p",null,"Input provided when adding Terms to an asset"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"termUrns",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Glossary Term to add or remove"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target Metadata Entity to add or remove the Glossary Term from"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResourceType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#subresourcetype"},(0,r.kt)("code",null,"SubResourceType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional type of a sub resource to attach the Glossary Term to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResource",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional sub resource identifier to attach the Glossary Term to"))))),(0,r.kt)("h2",{id:"andfilterinput"},"AndFilterInput"),(0,r.kt)("p",null,"A list of disjunctive criterion for the filter. (or operation to combine filters)"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"and",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A list of and criteria the filter applies to the query"))))),(0,r.kt)("h2",{id:"aspectparams"},"AspectParams"),(0,r.kt)("p",null,"Params to configure what list of aspects should be fetched by the aspects property"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"autoRenderOnly",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Only fetch auto render aspects"))))),(0,r.kt)("h2",{id:"autocompleteinput"},"AutoCompleteInput"),(0,r.kt)("p",null,"Input for performing an auto completion query against a single Metadata Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"EntityType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Entity type to be autocompleted against"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The raw query string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"field",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional entity field name to autocomplete on"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"limit",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of autocomplete results to be returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Faceted filters applied to autocomplete results"))))),(0,r.kt)("h2",{id:"autocompletemultipleinput"},"AutoCompleteMultipleInput"),(0,r.kt)("p",null,"Input for performing an auto completion query against a a set of Metadata Entities"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"types",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"[EntityType!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Entity types to be autocompleted against Optional, if none supplied, all searchable types will be autocompleted against"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The raw query string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"field",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional field to autocomplete against"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"limit",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of autocomplete results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Faceted filters applied to autocomplete results"))))),(0,r.kt)("h2",{id:"batchaddownersinput"},"BatchAddOwnersInput"),(0,r.kt)("p",null,"Input provided when adding owners to a batch of assets"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"owners",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#ownerinput"},(0,r.kt)("code",null,"[OwnerInput!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the owners"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#resourcerefinput"},(0,r.kt)("code",null,"[ResourceRefInput]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target assets to attach the owners to"))))),(0,r.kt)("h2",{id:"batchaddtagsinput"},"BatchAddTagsInput"),(0,r.kt)("p",null,"Input provided when adding tags to a batch of assets"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"tagUrns",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#resourcerefinput"},(0,r.kt)("code",null,"[ResourceRefInput!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target assets to attach the tags to"))))),(0,r.kt)("h2",{id:"batchaddtermsinput"},"BatchAddTermsInput"),(0,r.kt)("p",null,"Input provided when adding glossary terms to a batch of assets"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"termUrns",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Glossary Terms"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#resourcerefinput"},(0,r.kt)("code",null,"[ResourceRefInput]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target assets to attach the glossary terms to"))))),(0,r.kt)("h2",{id:"batchassignroleinput"},"BatchAssignRoleInput"),(0,r.kt)("p",null,"Input provided when batch assigning a role to a list of users"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"roleUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the role to assign to the actors. If undefined, will remove the role."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"actors",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urns of the actors to assign the role to"))))),(0,r.kt)("h2",{id:"batchdatasetupdateinput"},"BatchDatasetUpdateInput"),(0,r.kt)("p",null,"Arguments provided to batch update Dataset entities"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"urn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Primary key of the Dataset to which the update will be applied"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"update",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#datasetupdateinput"},(0,r.kt)("code",null,"DatasetUpdateInput!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Arguments provided to update the Dataset"))))),(0,r.kt)("h2",{id:"batchgetstepstatesinput"},"BatchGetStepStatesInput"),(0,r.kt)("p",null,"Input arguments required for fetching step states"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ids",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The unique ids for the steps to retrieve"))))),(0,r.kt)("h2",{id:"batchremoveownersinput"},"BatchRemoveOwnersInput"),(0,r.kt)("p",null,"Input provided when removing owners from a batch of assets"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownerUrns",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the owners"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#resourcerefinput"},(0,r.kt)("code",null,"[ResourceRefInput]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target assets to remove the owners from"))))),(0,r.kt)("h2",{id:"batchremovetagsinput"},"BatchRemoveTagsInput"),(0,r.kt)("p",null,"Input provided when removing tags from a batch of assets"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"tagUrns",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#resourcerefinput"},(0,r.kt)("code",null,"[ResourceRefInput]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target assets to remove the tags from"))))),(0,r.kt)("h2",{id:"batchremovetermsinput"},"BatchRemoveTermsInput"),(0,r.kt)("p",null,"Input provided when removing glossary terms from a batch of assets"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"termUrns",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Glossary Terms"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#resourcerefinput"},(0,r.kt)("code",null,"[ResourceRefInput]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target assets to remove the glossary terms from"))))),(0,r.kt)("h2",{id:"batchsetdomaininput"},"BatchSetDomainInput"),(0,r.kt)("p",null,"Input provided when adding tags to a batch of assets"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"domainUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Domain, or null if the domain will be unset"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#resourcerefinput"},(0,r.kt)("code",null,"[ResourceRefInput!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target assets to attach the Domain"))))),(0,r.kt)("h2",{id:"batchupdatedeprecationinput"},"BatchUpdateDeprecationInput"),(0,r.kt)("p",null,"Input provided when updating the deprecation status for a batch of assets."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"deprecated",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether the Entity is marked as deprecated."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"decommissionTime",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional - The time user plan to decommission this entity"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"note",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional - Additional information about the entity deprecation plan"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#resourcerefinput"},(0,r.kt)("code",null,"[ResourceRefInput]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target assets to attach the tags to"))))),(0,r.kt)("h2",{id:"batchupdatesoftdeletedinput"},"BatchUpdateSoftDeletedInput"),(0,r.kt)("p",null,"Input provided when updating the soft-deleted status for a batch of assets"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"urns",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urns of the assets to soft delete"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"deleted",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether to mark the asset as soft-deleted (hidden)"))))),(0,r.kt)("h2",{id:"batchupdatestepstatesinput"},"BatchUpdateStepStatesInput"),(0,r.kt)("p",null,"Input arguments required for updating step states"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"states",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#stepstateinput"},(0,r.kt)("code",null,"[StepStateInput!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Set of step states. If the id does not exist, it will be created."))))),(0,r.kt)("h2",{id:"browseinput"},"BrowseInput"),(0,r.kt)("p",null,"Input required for browse queries"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"EntityType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The browse entity type"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"path",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The browse path"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting point of paginated results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of elements included in the results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("blockquote",null,"Deprecated: Use `orFilters`- they are more expressive"),(0,r.kt)("p",null,"Deprecated in favor of the more expressive orFilters field Facet filters to apply to search results. These will be 'AND'-ed together."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"orFilters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#andfilterinput"},(0,r.kt)("code",null,"[AndFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A list of disjunctive criterion for the filter. (or operation to combine filters)"))))),(0,r.kt)("h2",{id:"browsepathsinput"},"BrowsePathsInput"),(0,r.kt)("p",null,"Inputs for fetching the browse paths for a Metadata Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"EntityType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The browse entity type"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"urn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The entity urn"))))),(0,r.kt)("h2",{id:"cancelingestionexecutionrequestinput"},"CancelIngestionExecutionRequestInput"),(0,r.kt)("p",null,"Input for cancelling an execution request input"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ingestionSourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Urn of the ingestion source"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"executionRequestUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Urn of the specific execution request to cancel"))))),(0,r.kt)("h2",{id:"charteditablepropertiesupdate"},"ChartEditablePropertiesUpdate"),(0,r.kt)("p",null,"Update to writable Chart fields"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Writable description aka documentation for a Chart"))))),(0,r.kt)("h2",{id:"chartupdateinput"},"ChartUpdateInput"),(0,r.kt)("p",null,"Arguments provided to update a Chart Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownership",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#ownershipupdate"},(0,r.kt)("code",null,"OwnershipUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to ownership"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"globalTags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableProperties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#charteditablepropertiesupdate"},(0,r.kt)("code",null,"ChartEditablePropertiesUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to editable properties"))))),(0,r.kt)("h2",{id:"containerentitiesinput"},"ContainerEntitiesInput"),(0,r.kt)("p",null,"Input required to fetch the entities inside of a container."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional query filter for particular entities inside the container"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The offset of the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of entities to include in result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional Facet filters to apply to the result set"))))),(0,r.kt)("h2",{id:"corpgroupupdateinput"},"CorpGroupUpdateInput"),(0,r.kt)("p",null,"Arguments provided to update a CorpGroup Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"DataHub description of the group"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"slack",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Slack handle for the group"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"email",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Email address for the group"))))),(0,r.kt)("h2",{id:"corpuserupdateinput"},"CorpUserUpdateInput"),(0,r.kt)("p",null,"Arguments provided to update a CorpUser Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"displayName",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Display name to show on DataHub"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"title",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Title to show on DataHub"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"aboutMe",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"About me section of the user"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"teams",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Teams that the user belongs to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"skills",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Skills that the user possesses"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"pictureLink",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A URL which points to a picture which user wants to set as a profile photo"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"slack",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The slack handle of the user"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"phone",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Phone number for the user"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"email",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Email address for the user"))))),(0,r.kt)("h2",{id:"createaccesstokeninput"},"CreateAccessTokenInput"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#accesstokentype"},(0,r.kt)("code",null,"AccessTokenType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The type of the Access Token."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"actorUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The actor associated with the Access Token."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"duration",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#accesstokenduration"},(0,r.kt)("code",null,"AccessTokenDuration!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The duration for which the Access Token is valid."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The name of the token to be generated."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Description of the token if defined."))))),(0,r.kt)("h2",{id:"createdomaininput"},"CreateDomainInput"),(0,r.kt)("p",null,"Input required to create a new Domain."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"id",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional! A custom id to use as the primary key identifier for the domain. If not provided, a random UUID will be generated as the id."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Display name for the Domain"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional description for the Domain"))))),(0,r.kt)("h2",{id:"createglossaryentityinput"},"CreateGlossaryEntityInput"),(0,r.kt)("p",null,"Input required to create a new Glossary Entity - a Node or a Term."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"id",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional! A custom id to use as the primary key identifier for the domain. If not provided, a random UUID will be generated as the id."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Display name for the Node or Term"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Description for the Node or Term"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"parentNode",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional parent node urn for the Glossary Node or Term"))))),(0,r.kt)("h2",{id:"creategroupinput"},"CreateGroupInput"),(0,r.kt)("p",null,"Input for creating a new group"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"id",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional! A custom id to use as the primary key identifier for the group. If not provided, a random UUID will be generated as the id."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The display name of the group"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The description of the group"))))),(0,r.kt)("h2",{id:"createingestionexecutionrequestinput"},"CreateIngestionExecutionRequestInput"),(0,r.kt)("p",null,"Input for creating an execution request input"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ingestionSourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Urn of the ingestion source to execute"))))),(0,r.kt)("h2",{id:"createinvitetokeninput"},"CreateInviteTokenInput"),(0,r.kt)("p",null,"Input provided when creating an invite token"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"roleUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the role to create the invite token for"))))),(0,r.kt)("h2",{id:"createnativeuserresettokeninput"},"CreateNativeUserResetTokenInput"),(0,r.kt)("p",null,"Input required to generate a password reset token for a native user."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"userUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the user to reset the password of"))))),(0,r.kt)("h2",{id:"createpostinput"},"CreatePostInput"),(0,r.kt)("p",null,"Input provided when creating a Post"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"postType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#posttype"},(0,r.kt)("code",null,"PostType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The type of post"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"content",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#updatepostcontentinput"},(0,r.kt)("code",null,"UpdatePostContentInput!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The content of the post"))))),(0,r.kt)("h2",{id:"createqueryinput"},"CreateQueryInput"),(0,r.kt)("p",null,"Input required for creating a Query. Requires the 'Edit Queries' privilege for all query subjects."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"properties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#createquerypropertiesinput"},(0,r.kt)("code",null,"CreateQueryPropertiesInput!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Properties about the Query"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subjects",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#createquerysubjectinput"},(0,r.kt)("code",null,"[CreateQuerySubjectInput!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Subjects for the query"))))),(0,r.kt)("h2",{id:"createquerypropertiesinput"},"CreateQueryPropertiesInput"),(0,r.kt)("p",null,"Input properties required for creating a Query"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional display name for the Query"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional description for the Query"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"statement",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#querystatementinput"},(0,r.kt)("code",null,"QueryStatementInput!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The Query contents"))))),(0,r.kt)("h2",{id:"createquerysubjectinput"},"CreateQuerySubjectInput"),(0,r.kt)("p",null,"Input required for creating a Query. For now, only datasets are supported."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"datasetUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the dataset that is the subject of the query"))))),(0,r.kt)("h2",{id:"createsecretinput"},"CreateSecretInput"),(0,r.kt)("p",null,"Input arguments for creating a new Secret"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The name of the secret for reference in ingestion recipes"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"value",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The value of the secret, to be encrypted and stored"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional description for the secret"))))),(0,r.kt)("h2",{id:"createtaginput"},"CreateTagInput"),(0,r.kt)("p",null,"Input required to create a new Tag"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"id",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional! A custom id to use as the primary key identifier for the Tag. If not provided, a random UUID will be generated as the id."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Display name for the Tag"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional description for the Tag"))))),(0,r.kt)("h2",{id:"createtestconnectionrequestinput"},"CreateTestConnectionRequestInput"),(0,r.kt)("p",null,"Input for creating a test connection request"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"recipe",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A JSON-encoded recipe"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"version",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Advanced: The version of the ingestion framework to use"))))),(0,r.kt)("h2",{id:"createtestinput"},"CreateTestInput"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"id",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Advanced: a custom id for the test."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The name of the Test"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"category",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The category of the Test (user defined)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Description of the test"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"definition",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#testdefinitioninput"},(0,r.kt)("code",null,"TestDefinitionInput!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The test definition"))))),(0,r.kt)("h2",{id:"createviewinput"},"CreateViewInput"),(0,r.kt)("p",null,"Input provided when creating a DataHub View"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"viewType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#datahubviewtype"},(0,r.kt)("code",null,"DataHubViewType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The type of View"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The name of the View"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional description of the View"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"definition",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#datahubviewdefinitioninput"},(0,r.kt)("code",null,"DataHubViewDefinitionInput!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The view definition itself"))))),(0,r.kt)("h2",{id:"dashboardeditablepropertiesupdate"},"DashboardEditablePropertiesUpdate"),(0,r.kt)("p",null,"Update to writable Dashboard fields"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Writable description aka documentation for a Dashboard"))))),(0,r.kt)("h2",{id:"dashboardupdateinput"},"DashboardUpdateInput"),(0,r.kt)("p",null,"Arguments provided to update a Dashboard Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownership",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#ownershipupdate"},(0,r.kt)("code",null,"OwnershipUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to ownership"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"globalTags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableProperties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#dashboardeditablepropertiesupdate"},(0,r.kt)("code",null,"DashboardEditablePropertiesUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to editable properties"))))),(0,r.kt)("h2",{id:"datafloweditablepropertiesupdate"},"DataFlowEditablePropertiesUpdate"),(0,r.kt)("p",null,"Update to writable Data Flow fields"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Writable description aka documentation for a Data Flow"))))),(0,r.kt)("h2",{id:"dataflowupdateinput"},"DataFlowUpdateInput"),(0,r.kt)("p",null,"Arguments provided to update a Data Flow aka Pipeline Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownership",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#ownershipupdate"},(0,r.kt)("code",null,"OwnershipUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to ownership"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"globalTags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableProperties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#datafloweditablepropertiesupdate"},(0,r.kt)("code",null,"DataFlowEditablePropertiesUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to editable properties"))))),(0,r.kt)("h2",{id:"datahubviewdefinitioninput"},"DataHubViewDefinitionInput"),(0,r.kt)("p",null,"Input required for creating a DataHub View Definition"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"entityTypes",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"[EntityType!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A set of entity types that the view applies for. If left empty, then ALL entities will be in scope."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filter",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#datahubviewfilterinput"},(0,r.kt)("code",null,"DataHubViewFilterInput!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A set of filters to apply."))))),(0,r.kt)("h2",{id:"datahubviewfilterinput"},"DataHubViewFilterInput"),(0,r.kt)("p",null,"Input required for creating a DataHub View Definition"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"operator",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#logicaloperator"},(0,r.kt)("code",null,"LogicalOperator!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The operator used to combine the filters."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A set of filters combined via an operator. If left empty, then no filters will be applied."))))),(0,r.kt)("h2",{id:"datajobeditablepropertiesupdate"},"DataJobEditablePropertiesUpdate"),(0,r.kt)("p",null,"Update to writable Data Job fields"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Writable description aka documentation for a Data Job"))))),(0,r.kt)("h2",{id:"datajobupdateinput"},"DataJobUpdateInput"),(0,r.kt)("p",null,"Arguments provided to update a Data Job aka Task Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownership",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#ownershipupdate"},(0,r.kt)("code",null,"OwnershipUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to ownership"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"globalTags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableProperties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#datajobeditablepropertiesupdate"},(0,r.kt)("code",null,"DataJobEditablePropertiesUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to editable properties"))))),(0,r.kt)("h2",{id:"datasetdeprecationupdate"},"DatasetDeprecationUpdate"),(0,r.kt)("p",null,"An update for the deprecation information for a Metadata Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"deprecated",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether the dataset is deprecated"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"decommissionTime",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The time user plan to decommission this dataset"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"note",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Additional information about the dataset deprecation plan"))))),(0,r.kt)("h2",{id:"dataseteditablepropertiesupdate"},"DatasetEditablePropertiesUpdate"),(0,r.kt)("p",null,"Update to writable Dataset fields"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Writable description aka documentation for a Dataset"))))),(0,r.kt)("h2",{id:"datasetupdateinput"},"DatasetUpdateInput"),(0,r.kt)("p",null,"Arguments provided to update a Dataset Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownership",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#ownershipupdate"},(0,r.kt)("code",null,"OwnershipUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to ownership"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"deprecation",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#datasetdeprecationupdate"},(0,r.kt)("code",null,"DatasetDeprecationUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to deprecation status"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"institutionalMemory",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#institutionalmemoryupdate"},(0,r.kt)("code",null,"InstitutionalMemoryUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to institutional memory, ie documentation"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"globalTags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Deprecated, use tags field instead Update to global tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableSchemaMetadata",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#editableschemametadataupdate"},(0,r.kt)("code",null,"EditableSchemaMetadataUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to editable schema metadata of the dataset"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableProperties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#dataseteditablepropertiesupdate"},(0,r.kt)("code",null,"DatasetEditablePropertiesUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to editable properties"))))),(0,r.kt)("h2",{id:"descriptionupdateinput"},"DescriptionUpdateInput"),(0,r.kt)("p",null,"Incubating. Updates the description of a resource. Currently supports DatasetField descriptions only"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The new description"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the resource to attach the description to, eg dataset urn"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResourceType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#subresourcetype"},(0,r.kt)("code",null,"SubResourceType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional sub resource type"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResource",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A sub resource identifier, eg dataset field path"))))),(0,r.kt)("h2",{id:"domainentitiesinput"},"DomainEntitiesInput"),(0,r.kt)("p",null,"Input required to fetch the entities inside of a Domain."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional query filter for particular entities inside the domain"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The offset of the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of entities to include in result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional Facet filters to apply to the result set"))))),(0,r.kt)("h2",{id:"editableschemafieldinfoupdate"},"EditableSchemaFieldInfoUpdate"),(0,r.kt)("p",null,"Update to writable schema field metadata"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"fieldPath",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Flattened name of a field identifying the field the editable info is applied to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Edited description of the field"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"globalTags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Tags associated with the field"))))),(0,r.kt)("h2",{id:"editableschemametadataupdate"},"EditableSchemaMetadataUpdate"),(0,r.kt)("p",null,"Update to editable schema metadata of the dataset"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableSchemaFieldInfo",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#editableschemafieldinfoupdate"},(0,r.kt)("code",null,"[EditableSchemaFieldInfoUpdate!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to writable schema field metadata"))))),(0,r.kt)("h2",{id:"entitycountinput"},"EntityCountInput"),(0,r.kt)("p",null,"Input for the get entity counts endpoint"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"types",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"[EntityType!]"))),(0,r.kt)("td",null)))),(0,r.kt)("h2",{id:"entityrequestcontext"},"EntityRequestContext"),(0,r.kt)("p",null,"Context that defines an entity page requesting recommendations"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"EntityType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Type of the enity being displayed"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"urn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Urn of the entity being displayed"))))),(0,r.kt)("h2",{id:"facetfilterinput"},"FacetFilterInput"),(0,r.kt)("p",null,"Facet filters to apply to search results"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"field",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Name of field to filter by"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"value",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("blockquote",null,"Deprecated: Prefer `values` for single elements"),(0,r.kt)("p",null,"Value of the field to filter by. Deprecated in favor of ",(0,r.kt)("code",null,"values"),", which should accept a single element array for a value"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"values",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Values, one of which the intended field should match."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"negated",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"If the filter should or should not be matched"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"condition",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#filteroperator"},(0,r.kt)("code",null,"FilterOperator"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Condition for the values. How to If unset, assumed to be equality"))))),(0,r.kt)("h2",{id:"filterinput"},"FilterInput"),(0,r.kt)("p",null,"A set of filter criteria"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"and",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A list of conjunctive filters"))))),(0,r.kt)("h2",{id:"getaccesstokeninput"},"GetAccessTokenInput"),(0,r.kt)("p",null,"Input required to fetch a new Access Token."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#accesstokentype"},(0,r.kt)("code",null,"AccessTokenType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The type of the Access Token."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"actorUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The actor associated with the Access Token."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"duration",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#accesstokenduration"},(0,r.kt)("code",null,"AccessTokenDuration!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The duration for which the Access Token is valid."))))),(0,r.kt)("h2",{id:"getgrantedprivilegesinput"},"GetGrantedPrivilegesInput"),(0,r.kt)("p",null,"Input for getting granted privileges"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"actorUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Urn of the actor"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceSpec",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#resourcespec"},(0,r.kt)("code",null,"ResourceSpec"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Spec to identify resource. If empty, gets privileges granted to the actor"))))),(0,r.kt)("h2",{id:"getinvitetokeninput"},"GetInviteTokenInput"),(0,r.kt)("p",null,"Input provided when getting an invite token"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"roleUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the role to get the invite token for"))))),(0,r.kt)("h2",{id:"getrootglossaryentitiesinput"},"GetRootGlossaryEntitiesInput"),(0,r.kt)("p",null,"Input required when getting Business Glossary entities"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of Glossary Entities in the returned result set"))))),(0,r.kt)("h2",{id:"getschemablameinput"},"GetSchemaBlameInput"),(0,r.kt)("p",null,"Input for getting schema changes computed at a specific version."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"datasetUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The dataset urn"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"version",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Changes after this version are not shown. If not provided, this is the latestVersion."))))),(0,r.kt)("h2",{id:"getschemaversionlistinput"},"GetSchemaVersionListInput"),(0,r.kt)("p",null,"Input for getting list of schema versions."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"datasetUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The dataset urn"))))),(0,r.kt)("h2",{id:"getsecretvaluesinput"},"GetSecretValuesInput"),(0,r.kt)("p",null,"Input arguments for retrieving the plaintext values of a set of secrets"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"secrets",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A list of secret names"))))),(0,r.kt)("h2",{id:"globaltagsupdate"},"GlobalTagsUpdate"),(0,r.kt)("p",null,"Deprecated, use addTag or removeTag mutation instead\nUpdate to the Tags associated with a Metadata Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"tags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#tagassociationupdate"},(0,r.kt)("code",null,"[TagAssociationUpdate!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The new set of tags"))))),(0,r.kt)("h2",{id:"institutionalmemorymetadataupdate"},"InstitutionalMemoryMetadataUpdate"),(0,r.kt)("p",null,"An institutional memory to add to a Metadata Entity\nTODO Add a USER or GROUP actor enum"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"url",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Link to a document or wiki page or another internal resource"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Description of the resource"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"author",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The corp user urn of the author of the metadata"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"createdAt",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The time at which this metadata was created"))))),(0,r.kt)("h2",{id:"institutionalmemoryupdate"},"InstitutionalMemoryUpdate"),(0,r.kt)("p",null,"An update for the institutional memory information for a Metadata Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"elements",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#institutionalmemorymetadataupdate"},(0,r.kt)("code",null,"[InstitutionalMemoryMetadataUpdate!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The individual references in the institutional memory"))))),(0,r.kt)("h2",{id:"lineageedge"},"LineageEdge"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"downstreamUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Urn of the source entity. This urn is downstream of the destinationUrn."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"upstreamUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Urn of the destination entity. This urn is upstream of the destinationUrn"))))),(0,r.kt)("h2",{id:"lineageinput"},"LineageInput"),(0,r.kt)("p",null,"Input for the list lineage property of an Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"direction",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#lineagedirection"},(0,r.kt)("code",null,"LineageDirection!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The direction of the relationship, either incoming or outgoing from the source entity"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of results to be returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"separateSiblings",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional flag to not merge siblings in the response. They are merged by default."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"startTimeMillis",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional starting time to filter on"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"endTimeMillis",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional ending time to filter on"))))),(0,r.kt)("h2",{id:"listaccesstokeninput"},"ListAccessTokenInput"),(0,r.kt)("p",null,"Input arguments for listing access tokens"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of results to be returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Facet filters to apply to search results"))))),(0,r.kt)("h2",{id:"listdomainsinput"},"ListDomainsInput"),(0,r.kt)("p",null,"Input required when listing DataHub Domains"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of Domains to be returned in the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional search query"))))),(0,r.kt)("h2",{id:"listglobalviewsinput"},"ListGlobalViewsInput"),(0,r.kt)("p",null,"Input provided when listing DataHub Global Views"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of Views to be returned in the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional search query"))))),(0,r.kt)("h2",{id:"listgroupsinput"},"ListGroupsInput"),(0,r.kt)("p",null,"Input required when listing DataHub Groups"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of Policies to be returned in the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional search query"))))),(0,r.kt)("h2",{id:"listingestionsourcesinput"},"ListIngestionSourcesInput"),(0,r.kt)("p",null,"Input arguments for listing Ingestion Sources"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of results to be returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional search query"))))),(0,r.kt)("h2",{id:"listmyviewsinput"},"ListMyViewsInput"),(0,r.kt)("p",null,"Input provided when listing DataHub Views"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of Views to be returned in the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional search query"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"viewType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#datahubviewtype"},(0,r.kt)("code",null,"DataHubViewType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional - List the type of View to filter for."))))),(0,r.kt)("h2",{id:"listpoliciesinput"},"ListPoliciesInput"),(0,r.kt)("p",null,"Input required when listing DataHub Access Policies"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of Policies to be returned in the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional search query"))))),(0,r.kt)("h2",{id:"listpostsinput"},"ListPostsInput"),(0,r.kt)("p",null,"Input provided when listing existing posts"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of Roles to be returned in the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional search query"))))),(0,r.kt)("h2",{id:"listqueriesinput"},"ListQueriesInput"),(0,r.kt)("p",null,"Input required for listing query entities"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of Queries to be returned in the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A raw search query"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"source",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#querysource"},(0,r.kt)("code",null,"QuerySource"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional source for the query"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"datasetUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional Urn for the parent dataset that the query is associated with."))))),(0,r.kt)("h2",{id:"listrecommendationsinput"},"ListRecommendationsInput"),(0,r.kt)("p",null,"Input arguments for fetching UI recommendations"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"userUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Urn of the actor requesting recommendations"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"requestContext",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#recommendationrequestcontext"},(0,r.kt)("code",null,"RecommendationRequestContext"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Context provider by the caller requesting recommendations"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"limit",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Max number of modules to return"))))),(0,r.kt)("h2",{id:"listrolesinput"},"ListRolesInput"),(0,r.kt)("p",null,"Input provided when listing existing roles"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of Roles to be returned in the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional search query"))))),(0,r.kt)("h2",{id:"listsecretsinput"},"ListSecretsInput"),(0,r.kt)("p",null,"Input for listing DataHub Secrets"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of results to be returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional search query"))))),(0,r.kt)("h2",{id:"listtestsinput"},"ListTestsInput"),(0,r.kt)("p",null,"Input required when listing DataHub Tests"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of Domains to be returned in the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional query string to match on"))))),(0,r.kt)("h2",{id:"listusersinput"},"ListUsersInput"),(0,r.kt)("p",null,"Input required when listing DataHub Users"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set returned"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of Policies to be returned in the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional search query"))))),(0,r.kt)("h2",{id:"metadataanalyticsinput"},"MetadataAnalyticsInput"),(0,r.kt)("p",null,"Input to fetch metadata analytics charts"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"entityType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"EntityType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Entity type to fetch analytics for (If empty, queries across all entities)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"domain",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Urn of the domain to fetch analytics for (If empty or GLOBAL, queries across all domains)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Search query to filter down result (If empty, does not apply any search query)"))))),(0,r.kt)("h2",{id:"notebookeditablepropertiesupdate"},"NotebookEditablePropertiesUpdate"),(0,r.kt)("p",null,"Update to writable Notebook fields"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Writable description aka documentation for a Notebook"))))),(0,r.kt)("h2",{id:"notebookupdateinput"},"NotebookUpdateInput"),(0,r.kt)("p",null,"Arguments provided to update a Notebook Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownership",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#ownershipupdate"},(0,r.kt)("code",null,"OwnershipUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to ownership"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#globaltagsupdate"},(0,r.kt)("code",null,"GlobalTagsUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to tags"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"editableProperties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#notebookeditablepropertiesupdate"},(0,r.kt)("code",null,"NotebookEditablePropertiesUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Update to editable properties"))))),(0,r.kt)("h2",{id:"ownerinput"},"OwnerInput"),(0,r.kt)("p",null,"Input provided when adding an owner to an asset"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownerUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Owner to add or remove"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownerEntityType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#ownerentitytype"},(0,r.kt)("code",null,"OwnerEntityType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The owner type, either a user or group"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#ownershiptype"},(0,r.kt)("code",null,"OwnershipType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The ownership type for the new owner. If none is provided, then a new NONE will be added."))))),(0,r.kt)("h2",{id:"ownershipupdate"},"OwnershipUpdate"),(0,r.kt)("p",null,"An update for the ownership information for a Metadata Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"owners",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#ownerupdate"},(0,r.kt)("code",null,"[OwnerUpdate!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The updated list of owners"))))),(0,r.kt)("h2",{id:"ownerupdate"},"OwnerUpdate"),(0,r.kt)("p",null,"An owner to add to a Metadata Entity\nTODO Add a USER or GROUP actor enum"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"owner",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The owner URN, either a corpGroup or corpuser"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#ownershiptype"},(0,r.kt)("code",null,"OwnershipType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The owner type"))))),(0,r.kt)("h2",{id:"policymatchcriterioninput"},"PolicyMatchCriterionInput"),(0,r.kt)("p",null,"Criterion to define relationship between field and values"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"field",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The name of the field that the criterion refers to e.g. entity_type, entity_urn, domain"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"values",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Values. Matches criterion if any one of the values matches condition (OR-relationship)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"condition",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#policymatchcondition"},(0,r.kt)("code",null,"PolicyMatchCondition!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The name of the field that the criterion refers to"))))),(0,r.kt)("h2",{id:"policymatchfilterinput"},"PolicyMatchFilterInput"),(0,r.kt)("p",null,"Filter object that encodes a complex filter logic with OR + AND"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"criteria",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#policymatchcriterioninput"},(0,r.kt)("code",null,"[PolicyMatchCriterionInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"List of criteria to apply"))))),(0,r.kt)("h2",{id:"policyupdateinput"},"PolicyUpdateInput"),(0,r.kt)("p",null,"Input provided when creating or updating an Access Policy"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#policytype"},(0,r.kt)("code",null,"PolicyType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The Policy Type"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The Policy name"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"state",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#policystate"},(0,r.kt)("code",null,"PolicyState!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The Policy state"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A Policy description"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#resourcefilterinput"},(0,r.kt)("code",null,"ResourceFilterInput"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The set of resources that the Policy privileges apply to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"privileges",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The set of privileges that the Policy grants"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"actors",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#actorfilterinput"},(0,r.kt)("code",null,"ActorFilterInput!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The set of actors that the Policy privileges are granted to"))))),(0,r.kt)("h2",{id:"querystatementinput"},"QueryStatementInput"),(0,r.kt)("p",null,"Input required for creating a Query Statement"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"value",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The query text"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"language",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#querylanguage"},(0,r.kt)("code",null,"QueryLanguage!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The query language"))))),(0,r.kt)("h2",{id:"recommendationrequestcontext"},"RecommendationRequestContext"),(0,r.kt)("p",null,"Context that defines the page requesting recommendations\ni.e. for search pages, the query/filters. for entity pages, the entity urn and tab"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"scenario",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#scenariotype"},(0,r.kt)("code",null,"ScenarioType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Scenario in which the recommendations will be displayed"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"searchRequestContext",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#searchrequestcontext"},(0,r.kt)("code",null,"SearchRequestContext"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Additional context for defining the search page requesting recommendations"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"entityRequestContext",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#entityrequestcontext"},(0,r.kt)("code",null,"EntityRequestContext"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Additional context for defining the entity page requesting recommendations"))))),(0,r.kt)("h2",{id:"relatedtermsinput"},"RelatedTermsInput"),(0,r.kt)("p",null,"Input provided when adding Terms to an asset"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"urn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The Glossary Term urn to add or remove this relationship to/from"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"termUrns",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Glossary Term to add or remove"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"relationshipType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#termrelationshiptype"},(0,r.kt)("code",null,"TermRelationshipType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The type of relationship we're adding or removing to/from for a Glossary Term"))))),(0,r.kt)("h2",{id:"relationshipsinput"},"RelationshipsInput"),(0,r.kt)("p",null,"Input for the list relationships field of an Entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"types",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The types of relationships to query, representing an OR"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"direction",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#relationshipdirection"},(0,r.kt)("code",null,"RelationshipDirection!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The direction of the relationship, either incoming or outgoing from the source entity"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting offset of the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of results to be returned"))))),(0,r.kt)("h2",{id:"removegroupmembersinput"},"RemoveGroupMembersInput"),(0,r.kt)("p",null,"Input required to remove members from an external DataHub group"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"groupUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The group to remove members from"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"userUrns",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The members to remove from the group"))))),(0,r.kt)("h2",{id:"removelinkinput"},"RemoveLinkInput"),(0,r.kt)("p",null,"Input provided when removing the association between a Metadata Entity and a Link"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"linkUrl",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The url of the link to add or remove, which uniquely identifies the Link"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the resource or entity to attach the link to, for example a dataset urn"))))),(0,r.kt)("h2",{id:"removenativegroupmembersinput"},"RemoveNativeGroupMembersInput"),(0,r.kt)("p",null,"Input required to remove members from a native DataHub group"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"groupUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The group to remove members from"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"userUrns",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The members to remove from the group"))))),(0,r.kt)("h2",{id:"removeownerinput"},"RemoveOwnerInput"),(0,r.kt)("p",null,"Input provided when removing the association between a Metadata Entity and an user or group owner"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownerUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Owner to add or remove"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the resource or entity to attach or remove the owner from, for example a dataset urn"))))),(0,r.kt)("h2",{id:"reportoperationinput"},"ReportOperationInput"),(0,r.kt)("p",null,"Input provided to report an asset operation"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"urn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the asset (e.g. dataset) to report the operation for"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"operationType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#operationtype"},(0,r.kt)("code",null,"OperationType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The type of operation that was performed. Required"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"customOperationType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A custom type of operation. Required if operation type is CUSTOM."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"sourceType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#operationsourcetype"},(0,r.kt)("code",null,"OperationSourceType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The source or reporter of the operation"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"customProperties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#stringmapentryinput"},(0,r.kt)("code",null,"[StringMapEntryInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A list of key-value parameters to include"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"partition",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional partition identifier"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"numAffectedRows",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional: The number of affected rows"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"timestampMillis",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional: Provide a timestamp associated with the operation. If not provided, one will be generated for you based on the current time."))))),(0,r.kt)("h2",{id:"resourcefilterinput"},"ResourceFilterInput"),(0,r.kt)("p",null,"Input required when creating or updating an Access Policies Determines which resources the Policy applies to"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The type of the resource the policy should apply to Not required because in the future we want to support filtering by type OR by domain"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"[String!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A list of specific resource urns to apply the filter to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"allResources",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether of not to apply the filter to all resources of the type"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filter",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#policymatchfilterinput"},(0,r.kt)("code",null,"PolicyMatchFilterInput"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether of not to apply the filter to all resources of the type"))))),(0,r.kt)("h2",{id:"resourcerefinput"},"ResourceRefInput"),(0,r.kt)("p",null,"Reference to a resource to apply an action to"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the resource being referenced"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResourceType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#subresourcetype"},(0,r.kt)("code",null,"SubResourceType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional type of a sub resource to attach the Tag to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResource",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional sub resource identifier to attach the Tag to"))))),(0,r.kt)("h2",{id:"resourcespec"},"ResourceSpec"),(0,r.kt)("p",null,"Spec to identify resource"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"EntityType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Resource type"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Resource urn"))))),(0,r.kt)("h2",{id:"rollbackingestioninput"},"RollbackIngestionInput"),(0,r.kt)("p",null,"Input for rolling back an ingestion execution"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"runId",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An ingestion run ID"))))),(0,r.kt)("h2",{id:"scrollacrossentitiesinput"},"ScrollAcrossEntitiesInput"),(0,r.kt)("p",null,"Input arguments for a full text search query across entities, specifying a starting pointer. Allows paging beyond 10k results"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"types",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"[EntityType!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Entity types to be searched. If this is not provided, all entities will be searched."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The query string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"scrollId",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting point of paginated results, an opaque ID the backend understands as a pointer"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"keepAlive",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The amount of time to keep the point in time snapshot alive, takes a time unit based string ex: 5m or 30s"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of elements included in the results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"orFilters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#andfilterinput"},(0,r.kt)("code",null,"[AndFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A list of disjunctive criterion for the filter. (or operation to combine filters)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"viewUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional - A View to apply when generating results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"searchFlags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#searchflags"},(0,r.kt)("code",null,"SearchFlags"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Flags controlling search options"))))),(0,r.kt)("h2",{id:"scrollacrosslineageinput"},"ScrollAcrossLineageInput"),(0,r.kt)("p",null,"Input arguments for a search query over the results of a multi-hop graph query, uses scroll API"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"urn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Urn of the source node"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"direction",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#lineagedirection"},(0,r.kt)("code",null,"LineageDirection!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The direction of the relationship, either incoming or outgoing from the source entity"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"types",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"[EntityType!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Entity types to be searched. If this is not provided, all entities will be searched."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The query string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"scrollId",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting point of paginated results, an opaque ID the backend understands as a pointer"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"keepAlive",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The amount of time to keep the point in time snapshot alive, takes a time unit based string ex: 5m or 30s"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of elements included in the results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"orFilters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#andfilterinput"},(0,r.kt)("code",null,"[AndFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A list of disjunctive criterion for the filter. (or operation to combine filters)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"startTimeMillis",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional starting time to filter on"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"endTimeMillis",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional ending time to filter on"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"searchFlags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#searchflags"},(0,r.kt)("code",null,"SearchFlags"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Flags controlling search options"))))),(0,r.kt)("h2",{id:"searchacrossentitiesinput"},"SearchAcrossEntitiesInput"),(0,r.kt)("p",null,"Input arguments for a full text search query across entities"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"types",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"[EntityType!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Entity types to be searched. If this is not provided, all entities will be searched."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The query string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting point of paginated results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of elements included in the results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("blockquote",null,"Deprecated: Use `orFilters`- they are more expressive"),(0,r.kt)("p",null,"Deprecated in favor of the more expressive orFilters field Facet filters to apply to search results. These will be 'AND'-ed together."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"orFilters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#andfilterinput"},(0,r.kt)("code",null,"[AndFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A list of disjunctive criterion for the filter. (or operation to combine filters)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"viewUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional - A View to apply when generating results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"searchFlags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#searchflags"},(0,r.kt)("code",null,"SearchFlags"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Flags controlling search options"))))),(0,r.kt)("h2",{id:"searchacrosslineageinput"},"SearchAcrossLineageInput"),(0,r.kt)("p",null,"Input arguments for a search query over the results of a multi-hop graph query"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"urn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Urn of the source node"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"direction",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#lineagedirection"},(0,r.kt)("code",null,"LineageDirection!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The direction of the relationship, either incoming or outgoing from the source entity"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"types",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"[EntityType!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Entity types to be searched. If this is not provided, all entities will be searched."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The query string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The starting point of paginated results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of elements included in the results"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("blockquote",null,"Deprecated: Use `orFilters`- they are more expressive"),(0,r.kt)("p",null,"Deprecated in favor of the more expressive orFilters field Facet filters to apply to search results. These will be 'AND'-ed together."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"orFilters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#andfilterinput"},(0,r.kt)("code",null,"[AndFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A list of disjunctive criterion for the filter. (or operation to combine filters)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"startTimeMillis",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional starting time to filter on"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"endTimeMillis",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional ending time to filter on"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"searchFlags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#searchflags"},(0,r.kt)("code",null,"SearchFlags"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Flags controlling search options"))))),(0,r.kt)("h2",{id:"searchflags"},"SearchFlags"),(0,r.kt)("p",null,"Set of flags to control search behavior"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"skipCache",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether to skip cache"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"maxAggValues",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The maximum number of values in an facet aggregation"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"fulltext",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Structured or unstructured fulltext query"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"skipHighlighting",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether to skip highlighting"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"skipAggregates",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether to skip aggregates/facets"))))),(0,r.kt)("h2",{id:"searchinput"},"SearchInput"),(0,r.kt)("p",null,"Input arguments for a full text search query"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#entitytype"},(0,r.kt)("code",null,"EntityType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The Metadata Entity type to be searched against"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The raw query string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"start",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The offset of the result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"count",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#int"},(0,r.kt)("code",null,"Int"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The number of entities to include in result set"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("blockquote",null,"Deprecated: Use `orFilters`- they are more expressive"),(0,r.kt)("p",null,"Deprecated in favor of the more expressive orFilters field Facet filters to apply to search results. These will be 'AND'-ed together."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"orFilters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#andfilterinput"},(0,r.kt)("code",null,"[AndFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A list of disjunctive criterion for the filter. (or operation to combine filters)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"searchFlags",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#searchflags"},(0,r.kt)("code",null,"SearchFlags"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Flags controlling search options"))))),(0,r.kt)("h2",{id:"searchrequestcontext"},"SearchRequestContext"),(0,r.kt)("p",null,"Context that defines a search page requesting recommendatinos"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"query",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Search query"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"filters",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#facetfilterinput"},(0,r.kt)("code",null,"[FacetFilterInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Faceted filters applied to search results"))))),(0,r.kt)("h2",{id:"stepstateinput"},"StepStateInput"),(0,r.kt)("p",null,"The input required to update the state of a step"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"id",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The globally unique id for the step"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"properties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#stringmapentryinput"},(0,r.kt)("code",null,"[StringMapEntryInput]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The new properties for the step"))))),(0,r.kt)("h2",{id:"stringmapentryinput"},"StringMapEntryInput"),(0,r.kt)("p",null,"String map entry input"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"key",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The key of the map entry"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"value",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The value fo the map entry"))))),(0,r.kt)("h2",{id:"tagassociationinput"},"TagAssociationInput"),(0,r.kt)("p",null,"Input provided when updating the association between a Metadata Entity and a Tag"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"tagUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Tag to add or remove"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target Metadata Entity to add or remove the Tag to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResourceType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#subresourcetype"},(0,r.kt)("code",null,"SubResourceType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional type of a sub resource to attach the Tag to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResource",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional sub resource identifier to attach the Tag to"))))),(0,r.kt)("h2",{id:"tagassociationupdate"},"TagAssociationUpdate"),(0,r.kt)("p",null,"Deprecated, use addTag or removeTag mutation instead\nA tag update to be applied"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"tag",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#tagupdateinput"},(0,r.kt)("code",null,"TagUpdateInput!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The tag being applied"))))),(0,r.kt)("h2",{id:"tagupdateinput"},"TagUpdateInput"),(0,r.kt)("p",null,"Deprecated, use addTag or removeTag mutations instead\nAn update for a particular Tag entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"urn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Tag"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The display name of a Tag"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Description of the tag"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"ownership",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#ownershipupdate"},(0,r.kt)("code",null,"OwnershipUpdate"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Ownership metadata of the tag"))))),(0,r.kt)("h2",{id:"termassociationinput"},"TermAssociationInput"),(0,r.kt)("p",null,"Input provided when updating the association between a Metadata Entity and a Glossary Term"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"termUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the Glossary Term to add or remove"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The target Metadata Entity to add or remove the Glossary Term from"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResourceType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#subresourcetype"},(0,r.kt)("code",null,"SubResourceType"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional type of a sub resource to attach the Glossary Term to"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subResource",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional sub resource identifier to attach the Glossary Term to"))))),(0,r.kt)("h2",{id:"testdefinitioninput"},"TestDefinitionInput"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"json",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The string representation of the Test"))))),(0,r.kt)("h2",{id:"updatecorpuserviewssettingsinput"},"UpdateCorpUserViewsSettingsInput"),(0,r.kt)("p",null,"Input required to update a users settings."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"defaultView",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The URN of the View that serves as this user's personal default. If not provided, any existing default view will be removed."))))),(0,r.kt)("h2",{id:"updatedeprecationinput"},"UpdateDeprecationInput"),(0,r.kt)("p",null,"Input provided when setting the Deprecation status for an Entity."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"urn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the Entity to set deprecation for."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"deprecated",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether the Entity is marked as deprecated."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"decommissionTime",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#long"},(0,r.kt)("code",null,"Long"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional - The time user plan to decommission this entity"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"note",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional - Additional information about the entity deprecation plan"))))),(0,r.kt)("h2",{id:"updateembedinput"},"UpdateEmbedInput"),(0,r.kt)("p",null,"Input required to set or clear information related to rendering a Data Asset inside of DataHub."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"urn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The URN associated with the Data Asset to update. Only dataset, dashboard, and chart urns are currently supported."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"renderUrl",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Set or clear a URL used to render an embedded asset."))))),(0,r.kt)("h2",{id:"updateglobalviewssettingsinput"},"UpdateGlobalViewsSettingsInput"),(0,r.kt)("p",null,"Input required to update Global View Settings."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"defaultView",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The URN of the View that serves as the Global, or organization-wide, default. If this field is not provided, the existing Global Default will be cleared."))))),(0,r.kt)("h2",{id:"updateingestionsourceconfiginput"},"UpdateIngestionSourceConfigInput"),(0,r.kt)("p",null,"Input parameters for creating / updating an Ingestion Source"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"recipe",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A JSON-encoded recipe"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"version",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The version of DataHub Ingestion Framework to use when executing the recipe."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"executorId",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The id of the executor to use for executing the recipe"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"debugMode",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Whether or not to run ingestion in debug mode"))))),(0,r.kt)("h2",{id:"updateingestionsourceinput"},"UpdateIngestionSourceInput"),(0,r.kt)("p",null,"Input arguments for creating / updating an Ingestion Source"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A name associated with the ingestion source"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The type of the source itself, e.g. mysql, bigquery, bigquery-usage. Should match the recipe."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional description associated with the ingestion source"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"schedule",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#updateingestionsourcescheduleinput"},(0,r.kt)("code",null,"UpdateIngestionSourceScheduleInput"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional schedule for the ingestion source. If not provided, the source is only available for run on-demand."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"config",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#updateingestionsourceconfiginput"},(0,r.kt)("code",null,"UpdateIngestionSourceConfigInput!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A set of type-specific ingestion source configurations"))))),(0,r.kt)("h2",{id:"updateingestionsourcescheduleinput"},"UpdateIngestionSourceScheduleInput"),(0,r.kt)("p",null,"Input arguments for creating / updating the schedule of an Ingestion Source"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"interval",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The cron-formatted interval describing when the job should be executed"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"timezone",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The name of the timezone in which the cron interval should be scheduled (e.g. America/Los Angeles)"))))),(0,r.kt)("h2",{id:"updatelineageinput"},"UpdateLineageInput"),(0,r.kt)("p",null,"Input required in order to upsert lineage edges"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"edgesToAdd",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#lineageedge"},(0,r.kt)("code",null,"[LineageEdge]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"New lineage edges to upsert"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"edgesToRemove",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#lineageedge"},(0,r.kt)("code",null,"[LineageEdge]!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Lineage edges to remove. Takes precedence over edgesToAdd - so edges existing both edgesToAdd and edgesToRemove will be removed."))))),(0,r.kt)("h2",{id:"updatemediainput"},"UpdateMediaInput"),(0,r.kt)("p",null,"Input provided for filling in a post content"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"type",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#mediatype"},(0,r.kt)("code",null,"MediaType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The type of media"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"location",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The location of the media (a URL)"))))),(0,r.kt)("h2",{id:"updatenameinput"},"UpdateNameInput"),(0,r.kt)("p",null,"Input for updating the name of an entity"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The new name"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"urn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the resource to update the name for"))))),(0,r.kt)("h2",{id:"updateparentnodeinput"},"UpdateParentNodeInput"),(0,r.kt)("p",null,"Input for updating the parent node of a resource. Currently only GlossaryNodes and GlossaryTerms have parentNodes."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"parentNode",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The new parent node urn. If parentNode is null, this will remove the parent from this entity"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"resourceUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The primary key of the resource to update the parent node for"))))),(0,r.kt)("h2",{id:"updatepostcontentinput"},"UpdatePostContentInput"),(0,r.kt)("p",null,"Input provided for filling in a post content"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"contentType",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#postcontenttype"},(0,r.kt)("code",null,"PostContentType!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The type of post content"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"title",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The title of the post"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional content of the post"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"link",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional link that the post is associated with"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"media",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#updatemediainput"},(0,r.kt)("code",null,"UpdateMediaInput"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Optional media contained in the post"))))),(0,r.kt)("h2",{id:"updatequeryinput"},"UpdateQueryInput"),(0,r.kt)("p",null,"Input required for updating an existing Query. Requires the 'Edit Queries' privilege for all query subjects."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"properties",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#updatequerypropertiesinput"},(0,r.kt)("code",null,"UpdateQueryPropertiesInput"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Properties about the Query"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subjects",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#updatequerysubjectinput"},(0,r.kt)("code",null,"[UpdateQuerySubjectInput!]"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Subjects for the query"))))),(0,r.kt)("h2",{id:"updatequerypropertiesinput"},"UpdateQueryPropertiesInput"),(0,r.kt)("p",null,"Input properties required for creating a Query. Any non-null fields will be updated if provided."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional display name for the Query"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional description for the Query"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"statement",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#querystatementinput"},(0,r.kt)("code",null,"QueryStatementInput"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The Query contents"))))),(0,r.kt)("h2",{id:"updatequerysubjectinput"},"UpdateQuerySubjectInput"),(0,r.kt)("p",null,"Input required for creating a Query. For now, only datasets are supported."),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"datasetUrn",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The urn of the dataset that is the subject of the query"))))),(0,r.kt)("h2",{id:"updatetestinput"},"UpdateTestInput"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The name of the Test"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"category",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The category of the Test (user defined)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Description of the test"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"definition",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#testdefinitioninput"},(0,r.kt)("code",null,"TestDefinitionInput!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The test definition"))))),(0,r.kt)("h2",{id:"updateusersettinginput"},"UpdateUserSettingInput"),(0,r.kt)("p",null,"Input for updating a user setting"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/enums#usersetting"},(0,r.kt)("code",null,"UserSetting!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The name of the setting"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"value",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#boolean"},(0,r.kt)("code",null,"Boolean!"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The new value of the setting"))))),(0,r.kt)("h2",{id:"updateviewinput"},"UpdateViewInput"),(0,r.kt)("p",null,"Input provided when updating a DataHub View"),(0,r.kt)("p",{style:{marginBottom:"0.4em"}},(0,r.kt)("strong",null,"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"name",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The name of the View"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"description",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/scalars#string"},(0,r.kt)("code",null,"String"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"An optional description of the View"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"definition",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/datahub-project-forked/docs/graphql/inputObjects#datahubviewdefinitioninput"},(0,r.kt)("code",null,"DataHubViewDefinitionInput"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"The view definition itself"))))))}i.isMDXComponent=!0}}]);