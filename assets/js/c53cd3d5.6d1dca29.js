"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[1612],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=a.createContext({}),l=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=l(n),m=o,h=c["".concat(d,".").concat(m)]||c[m]||u[m]||r;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=c;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9612:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=n(83117),o=(n(67294),n(3905));const r={title:"Adding Description on Columns",slug:"/tools/tutorials/adding-column-description",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/tools/tutorials/adding-column-description.md"},i="Adding Description on Columns",s={unversionedId:"docs/tools/tutorials/adding-column-description",id:"docs/tools/tutorials/adding-column-description",title:"Adding Description on Columns",description:"Why Would You Add Description on Columns?",source:"@site/genDocs/docs/tools/tutorials/adding-column-description.md",sourceDirName:"docs/tools/tutorials",slug:"/tools/tutorials/adding-column-description",permalink:"/datahub-project-forked/docs/tools/tutorials/adding-column-description",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/tools/tutorials/adding-column-description.md",tags:[],version:"current",frontMatter:{title:"Adding Description on Columns",slug:"/tools/tutorials/adding-column-description",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/tools/tutorials/adding-column-description.md"},sidebar:"overviewSidebar",previous:{title:"Adding Description on Datasets",permalink:"/datahub-project-forked/docs/tools/tutorials/adding-dataset-description"},next:{title:"Adding Lineage",permalink:"/datahub-project-forked/docs/tools/tutorials/adding-lineage"}},d={},l=[{value:"Why Would You Add Description on Columns?",id:"why-would-you-add-description-on-columns",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Add Description With GraphQL",id:"add-description-with-graphql",level:2},{value:"GraphQL Explorer",id:"graphql-explorer",level:3},{value:"CURL",id:"curl",level:3},{value:"Add Description With Python SDK",id:"add-description-with-python-sdk",level:2},{value:"Expected Outcomes",id:"expected-outcomes",level:2}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"adding-description-on-columns"},"Adding Description on Columns"),(0,o.kt)("h2",{id:"why-would-you-add-description-on-columns"},"Why Would You Add Description on Columns?"),(0,o.kt)("p",null,"Adding column descriptions to a dataset can provide crucial context for understanding the data and its variables. This can aid in data exploration, cleaning, and analysis, as well as ensure that others can understand the data if it is shared or used in collaboration. Additionally, column descriptions can help prevent errors and misunderstandings by clearly defining the meaning and units of measurement for each variable."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"For this tutorial, you need to deploy DataHub Quickstart and ingest sample data.\nFor detailed steps, please refer to ",(0,o.kt)("a",{parentName:"p",href:"/datahub-project-forked/docs/tools/tutorials/references/prepare-datahub"},"Prepare Local DataHub Environment"),"."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Before adding a description, you need to ensure the targeted dataset is already present in your datahub.\nIf you attempt to manipulate entities that do not exist, your operation will fail.\nIn this guide, we will be using data from sample ingestion.")),(0,o.kt)("p",null,"In this example, we will add a description to ",(0,o.kt)("inlineCode",{parentName:"p"},"user_name "),"column of a dataset ",(0,o.kt)("inlineCode",{parentName:"p"},"fct_users_deleted"),"."),(0,o.kt)("h2",{id:"add-description-with-graphql"},"Add Description With GraphQL"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Please note that there are two available endpoints (",(0,o.kt)("inlineCode",{parentName:"p"},":8000"),", ",(0,o.kt)("inlineCode",{parentName:"p"},":9002"),") to access GraphQL.\nFor more information about the differences between these endpoints, please refer to ",(0,o.kt)("a",{parentName:"p",href:"/datahub-project-forked/docs/metadata-service#graphql-api"},"DataHub Metadata Service"))),(0,o.kt)("h3",{id:"graphql-explorer"},"GraphQL Explorer"),(0,o.kt)("p",null,"GraphQL Explorer is the fastest way to experiment with GraphQL without any dependencies.\nNavigate to GraphQL Explorer (",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:9002/api/graphiql"),") and run the following query."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'mutation updateDescription {\n  updateDescription(\n    input: {\n      description: "Name of the user who was deleted. This description is updated via GrpahQL.",\n      resourceUrn:"urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)",\n      subResource: "user_name",\n      subResourceType:DATASET_FIELD\n    }\n  )\n}\n')),(0,o.kt)("p",null,"Note that you can use general markdown in ",(0,o.kt)("inlineCode",{parentName:"p"},"description"),". For example, you can do the following. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'mutation updateDescription {\n  updateDescription(\n    input: {\n      description: """\n      ### User Name\n      The `user_name` column is a primary key column that contains the name of the user who was deleted. \n      """,\n      resourceUrn:"urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)",\n      subResource: "user_name",\n      subResourceType:DATASET_FIELD\n    }\n  )\n}\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"updateDescription")," currently only supports Dataset Schema Fields, Containers.\nFor more information about the ",(0,o.kt)("inlineCode",{parentName:"p"},"updateDescription")," mutation, please refer to ",(0,o.kt)("a",{parentName:"p",href:"/docs/graphql/mutations/#updateDescription"},"updateLineage"),". "),(0,o.kt)("p",null,"If you see the following response, the operation was successful:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'{\n  "data": {\n    "updateDescription": true\n  },\n  "extensions": {}\n}\n')),(0,o.kt)("h3",{id:"curl"},"CURL"),(0,o.kt)("p",null,"With CURL, you need to provide tokens. To generate a token, please refer to ",(0,o.kt)("a",{parentName:"p",href:"/datahub-project-forked/docs/tools/tutorials/references/generate-access-token"},"Generate Access Token"),".\nWith ",(0,o.kt)("inlineCode",{parentName:"p"},"accessToken"),", you can run the following command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8080/api/graphql\' \\\n--header \'Authorization: Bearer <my-access-token>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{ "query": "mutation updateDescription { updateDescription ( input: { description: \\"Name of the user who was deleted. This description is updated via GrpahQL.\\", resourceUrn: \\"urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)\\", subResource: \\"user_name\\", subResourceType:DATASET_FIELD }) }", "variables":{}}\'\n')),(0,o.kt)("p",null,"Expected Response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{"data":{"updateDescription":true},"extensions":{}}\n')),(0,o.kt)("h2",{id:"add-description-with-python-sdk"},"Add Description With Python SDK"),(0,o.kt)("p",null,"Following code add a description to ",(0,o.kt)("inlineCode",{parentName:"p"},"user_name "),"column of a dataset ",(0,o.kt)("inlineCode",{parentName:"p"},"fct_users_deleted"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import logging\nimport time\n\nfrom datahub.emitter.mce_builder import make_dataset_urn\nfrom datahub.emitter.mcp import MetadataChangeProposalWrapper\n\n# read-modify-write requires access to the DataHubGraph (RestEmitter is not enough)\nfrom datahub.ingestion.graph.client import DatahubClientConfig, DataHubGraph\n\n# Imports for metadata model classes\nfrom datahub.metadata.schema_classes import (\n    AuditStampClass,\n    InstitutionalMemoryClass,\n    EditableSchemaMetadataClass, \n    EditableSchemaFieldInfoClass,\n)\n\nlog = logging.getLogger(__name__)\nlogging.basicConfig(level=logging.INFO)\n\ndef get_simple_field_path_from_v2_field_path(field_path: str) -> str:\n    """A helper function to extract simple . path notation from the v2 field path"""\n    if not field_path.startswith("[version=2.0]"):\n        # not a v2, we assume this is a simple path\n        return field_path\n        # this is a v2 field path\n    tokens = [\n        t for t in field_path.split(".") if not (t.startswith("[") or t.endswith("]"))\n    ]\n\n    return ".".join(tokens)\n\n# Inputs -> owner, ownership_type, dataset\ndocumentation_to_add = "Name of the user who was deleted. This description is updated via PythonSDK."\ndataset_urn = make_dataset_urn(platform="hive", name="fct_users_deleted", env="PROD")\ncolumn = "user_name"\nfield_info_to_set = EditableSchemaFieldInfoClass(\n    fieldPath=column, description=documentation_to_add\n)\n\n\n# Some helpful variables to fill out objects later\nnow = int(time.time() * 1000)  # milliseconds since epoch\ncurrent_timestamp = AuditStampClass(time=now, actor="urn:li:corpuser:ingestion")\n\n\n# First we get the current owners\ngms_endpoint = "http://localhost:8080"\ngraph = DataHubGraph(config=DatahubClientConfig(server=gms_endpoint))\n\ncurrent_editable_schema_metadata = graph.get_aspect(\n    entity_urn=dataset_urn,\n    aspect_type=EditableSchemaMetadataClass,\n)\n\n\nneed_write = False\n\nif current_editable_schema_metadata:\n    for fieldInfo in current_editable_schema_metadata.editableSchemaFieldInfo:\n        if get_simple_field_path_from_v2_field_path(fieldInfo.fieldPath) == column:\n            # we have some editable schema metadata for this field\n            field_match = True\n            if documentation_to_add != fieldInfo.description:\n                fieldInfo.description = documentation_to_add\n                need_write = True\nelse:\n    # create a brand new editable dataset properties aspect\n    current_editable_schema_metadata = EditableSchemaMetadataClass(\n        editableSchemaFieldInfo=[field_info_to_set],\n        created=current_timestamp,\n    )\n    need_write = True\n\nif need_write:\n    event: MetadataChangeProposalWrapper = MetadataChangeProposalWrapper(\n        entityUrn=dataset_urn,\n        aspect=current_editable_schema_metadata,\n    )\n    graph.emit(event)\n    log.info(f"Documentation added to dataset {dataset_urn}")\n\nelse:\n    log.info("Documentation already exists and is identical, omitting write")\n\n\ncurrent_institutional_memory = graph.get_aspect(\n    entity_urn=dataset_urn, aspect_type=InstitutionalMemoryClass\n)\n\nneed_write = False\n')),(0,o.kt)("p",null,"We're using the ",(0,o.kt)("inlineCode",{parentName:"p"},"MetdataChangeProposalWrapper")," to change entities in this example.\nFor more information about the ",(0,o.kt)("inlineCode",{parentName:"p"},"MetadataChangeProposal"),", please refer to ",(0,o.kt)("a",{parentName:"p",href:"/datahub-project-forked/docs/advanced/mcp-mcl"},"MetadataChangeProposal & MetadataChangeLog Events")),(0,o.kt)("h2",{id:"expected-outcomes"},"Expected Outcomes"),(0,o.kt)("p",null,"You can now see column description is added to ",(0,o.kt)("inlineCode",{parentName:"p"},"user_name")," column of ",(0,o.kt)("inlineCode",{parentName:"p"},"fct_users_deleted"),". "),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"column-description-added",src:n(97824).Z,width:"990",height:"395"})))}u.isMDXComponent=!0},97824:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/column-description-added-c7b185c6a81e48ab21ad75dcb9edbd5a.png"}}]);