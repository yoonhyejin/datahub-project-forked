"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[3121],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>m});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var u=n.createContext({}),c=function(e){var t=n.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},d=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(o),m=r,h=p["".concat(u,".").concat(m)]||p[m]||l[m]||a;return o?n.createElement(h,s(s({ref:t},d),{},{components:o})):n.createElement(h,s({ref:t},d))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,s=new Array(a);s[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<a;c++)s[c]=o[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,o)}p.displayName="MDXCreateElement"},3987:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=o(83117),r=(o(67294),o(3905));const a={title:"Using a Custom Ingestion Source",sidebar_label:"Using a Custom Ingestion Source",slug:"/how/add-custom-ingestion-source",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/how/add-custom-ingestion-source.md"},s="How to use a custom ingestion source without forking Datahub?",i={unversionedId:"docs/how/add-custom-ingestion-source",id:"docs/how/add-custom-ingestion-source",title:"Using a Custom Ingestion Source",description:"Adding a custom ingestion source is the easiest way to extend Datahubs ingestion framework to support source systems",source:"@site/genDocs/docs/how/add-custom-ingestion-source.md",sourceDirName:"docs/how",slug:"/how/add-custom-ingestion-source",permalink:"/datahub-project-forked/docs/how/add-custom-ingestion-source",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/how/add-custom-ingestion-source.md",tags:[],version:"current",frontMatter:{title:"Using a Custom Ingestion Source",sidebar_label:"Using a Custom Ingestion Source",slug:"/how/add-custom-ingestion-source",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/how/add-custom-ingestion-source.md"},sidebar:"overviewSidebar",previous:{title:"Adding a Metadata Ingestion Source",permalink:"/datahub-project-forked/docs/metadata-ingestion/adding-source"},next:{title:"Adding a custom Dataset Data Platform",permalink:"/datahub-project-forked/docs/how/add-custom-data-platform"}},u={},c=[{value:"What you need to do",id:"what-you-need-to-do",level:2},{value:"How to use this source?",id:"how-to-use-this-source",level:3},{value:"Example code?",id:"example-code",level:3}],d={toc:c};function l(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"how-to-use-a-custom-ingestion-source-without-forking-datahub"},"How to use a custom ingestion source without forking Datahub?"),(0,r.kt)("p",null,"Adding a custom ingestion source is the easiest way to extend Datahubs ingestion framework to support source systems\nwhich are not yet officially supported by Datahub."),(0,r.kt)("h2",{id:"what-you-need-to-do"},"What you need to do"),(0,r.kt)("p",null,"First thing to do is building a custom source like it is described in\nthe ",(0,r.kt)("a",{parentName:"p",href:"/datahub-project-forked/docs/metadata-ingestion/adding-source"},"metadata-ingestion source guide")," in your own project."),(0,r.kt)("h3",{id:"how-to-use-this-source"},"How to use this source?"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"/datahub-project-forked/docs/ui-ingestion"},"UI Based Ingestion")," currently does not support custom ingestion sources.")),(0,r.kt)("p",null,"To be able to use this source you just need to do a few things."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Build a python package out of your project including the custom source class."),(0,r.kt)("li",{parentName:"ol"},"Install this package in your working environment where you are using the Datahub CLI to ingest metadata.")),(0,r.kt)("p",null,"Now you are able to just reference your ingestion source class as a type in the YAML recipe by using the fully qualified\npackage name. For example if your project structure looks like this ",(0,r.kt)("inlineCode",{parentName:"p"},"<project>/src/my-source/custom_ingestion_source.py"),"\nwith the custom source class named ",(0,r.kt)("inlineCode",{parentName:"p"},"MySourceClass")," your YAML recipe would look like the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"source:\n  type: my-source.custom_ingestion_source.MySourceClass\n  config:\n  # place for your custom config defined in the configModel\n")),(0,r.kt)("p",null,"If you now execute the ingestion the datahub client will pick up your code and call the ",(0,r.kt)("inlineCode",{parentName:"p"},"get_workunits")," method and do\nthe rest for you. That's it."),(0,r.kt)("h3",{id:"example-code"},"Example code?"),(0,r.kt)("p",null,"For examples how this setup could look like and a good starting point for building your first custom source visit\nour ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/acryldata/meta-world"},"meta-world")," example repository."))}l.isMDXComponent=!0}}]);