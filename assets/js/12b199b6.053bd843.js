"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[4871],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),d=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},l=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=d(a),m=n,h=u["".concat(c,".").concat(m)]||u[m]||p[m]||o;return a?r.createElement(h,s(s({ref:t},l),{},{components:a})):r.createElement(h,s({ref:t},l))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var d=2;d<o;d++)s[d]=a[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},58202:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=a(83117),n=(a(67294),a(3905));const o={title:"What is Generalized Metadata Service (GMS)?",slug:"/what/gms",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/what/gms.md"},s="What is Generalized Metadata Service (GMS)?",i={unversionedId:"docs/what/gms",id:"docs/what/gms",title:"What is Generalized Metadata Service (GMS)?",description:"Metadata for entities onboarded to GMA is served through microservices known as Generalized Metadata Service (GMS). GMS typically provides a Rest.li API and must access the metadata using GMA DAOs.",source:"@site/genDocs/docs/what/gms.md",sourceDirName:"docs/what",slug:"/what/gms",permalink:"/datahub-project-forked/docs/what/gms",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/what/gms.md",tags:[],version:"current",frontMatter:{title:"What is Generalized Metadata Service (GMS)?",slug:"/what/gms",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/what/gms.md"}},c={},d=[],l={toc:d};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"what-is-generalized-metadata-service-gms"},"What is Generalized Metadata Service (GMS)?"),(0,n.kt)("p",null,"Metadata for ",(0,n.kt)("a",{parentName:"p",href:"/datahub-project-forked/docs/what/entity"},"entities")," ",(0,n.kt)("a",{parentName:"p",href:"/datahub-project-forked/docs/metadata-modeling/metadata-model"},"onboarded")," to ",(0,n.kt)("a",{parentName:"p",href:"/datahub-project-forked/docs/what/gma"},"GMA")," is served through microservices known as Generalized Metadata Service (GMS). GMS typically provides a ",(0,n.kt)("a",{parentName:"p",href:"http://rest.li"},"Rest.li")," API and must access the metadata using ",(0,n.kt)("a",{parentName:"p",href:"/datahub-project-forked/docs/architecture/metadata-serving"},"GMA DAOs"),". "),(0,n.kt)("p",null,"While a GMS is completely free to define its public APIs, we do provide a list of ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/datahub-project/datahub-gma/tree/master/restli-resources/src/main/java/com/linkedin/metadata/restli"},"resource base classes")," to leverage for common patterns."),(0,n.kt)("p",null,"GMA is designed to support a distributed fleet of GMS, each serving a subset of the ",(0,n.kt)("a",{parentName:"p",href:"/datahub-project-forked/docs/what/graph"},"GMA graph"),". However, for simplicity we include a single centralized GMS (",(0,n.kt)("a",{parentName:"p",href:"https://github.com/datahub-project/datahub/blob/master/gms"},"datahub-gms"),") that serves all entities."))}p.isMDXComponent=!0}}]);