"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[6519],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),l=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=l(a),d=n,m=h["".concat(p,".").concat(d)]||h[d]||c[d]||o;return a?r.createElement(m,i(i({ref:t},u),{},{components:a})):r.createElement(m,i({ref:t},u))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=h;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},55183:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=a(83117),n=(a(67294),a(3905));const o={slug:"/api/graphql/overview",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/api/graphql/overview.md"},i="DataHub GraphQL API",s={unversionedId:"docs/api/graphql/overview",id:"docs/api/graphql/overview",title:"DataHub GraphQL API",description:"DataHub provides a rich GraphQL API for programmatically interacting with the Entities & Relationships comprising your organization's Metadata Graph.",source:"@site/genDocs/docs/api/graphql/overview.md",sourceDirName:"docs/api/graphql",slug:"/api/graphql/overview",permalink:"/datahub-project-forked/docs/api/graphql/overview",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/api/graphql/overview.md",tags:[],version:"current",frontMatter:{slug:"/api/graphql/overview",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/api/graphql/overview.md"},sidebar:"overviewSidebar",previous:{title:"Which DataHub API is for me?",permalink:"/datahub-project-forked/docs/api/datahub-apis"},next:{title:"Queries",permalink:"/datahub-project-forked/docs/graphql/queries"}},p={},l=[{value:"Getting Started",id:"getting-started",level:2},{value:"About GraphQL",id:"about-graphql",level:2},{value:"GraphQL Schema Reference",id:"graphql-schema-reference",level:2},{value:"On the Horizon",id:"on-the-horizon",level:2},{value:"Supporting Additional Use Cases",id:"supporting-additional-use-cases",level:3},{value:"Client SDKs",id:"client-sdks",level:3},{value:"Feedback, Feature Requests, &amp; Support",id:"feedback-feature-requests--support",level:2}],u={toc:l};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"datahub-graphql-api"},"DataHub GraphQL API"),(0,n.kt)("p",null,"DataHub provides a rich ",(0,n.kt)("a",{parentName:"p",href:"https://graphql.org/"},"GraphQL")," API for programmatically interacting with the Entities & Relationships comprising your organization's Metadata Graph."),(0,n.kt)("h2",{id:"getting-started"},"Getting Started"),(0,n.kt)("p",null,"Check out ",(0,n.kt)("a",{parentName:"p",href:"/datahub-project-forked/docs/api/graphql/getting-started"},"Getting Started")," to start using the DataHub GraphQL API right away. "),(0,n.kt)("h2",{id:"about-graphql"},"About GraphQL"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://graphql.org/"},"GraphQL")," provides a data query language and API with the following characteristics:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A ",(0,n.kt)("strong",{parentName:"li"},"validated specification"),": The GraphQL spec verifies a ",(0,n.kt)("em",{parentName:"li"},"schema")," on the API server. The server in turn is responsible\nfor validating incoming queries from the clients against that schema."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Strongly typed"),": A GraphQL schema declares the universe of types and relationships composing the interface. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Document-oriented & hierarchical"),": GraphQL makes it eay to ask for related entities using a familiar JSON document\nstructure. This minimizes the number of round-trip API requests a client must make to answer a particular question."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Flexible & efficient"),": GraphQL provides a way to ask for only the data you want, and that's it. Ignore all\nthe rest. It allows you to replace multiple REST calls with one GraphQL call."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Large Open Source Ecosystem"),": Open source GraphQL projects have been developed for ",(0,n.kt)("a",{parentName:"li",href:"https://graphql.org/code/"},"virtually every programming language"),". With a thriving\ncommunity, it offers a sturdy foundation to build upon.\n")),(0,n.kt)("p",null,"For these reasons among others DataHub provides a GraphQL API on top of the Metadata Graph,\npermitting easy exploration of the Entities & Relationships composing it. "),(0,n.kt)("p",null,"For more information about the GraphQL specification, check out ",(0,n.kt)("a",{parentName:"p",href:"https://graphql.org/learn/"},"Introduction to GraphQL"),". "),(0,n.kt)("h2",{id:"graphql-schema-reference"},"GraphQL Schema Reference"),(0,n.kt)("p",null,"The Reference docs in the sidebar are generated from the DataHub GraphQL schema. Each call to the ",(0,n.kt)("inlineCode",{parentName:"p"},"/api/graphql")," endpoint is\nvalidated against this schema. You can use these docs to understand data that is available for retrieval and operations\nthat may be performed using the API."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Available Operations: ",(0,n.kt)("a",{parentName:"li",href:"/datahub-project-forked/docs/graphql/queries"},"Queries")," (Reads) & ",(0,n.kt)("a",{parentName:"li",href:"/datahub-project-forked/docs/graphql/mutations"},"Mutations")," (Writes)"),(0,n.kt)("li",{parentName:"ul"},"Schema Types: ",(0,n.kt)("a",{parentName:"li",href:"/datahub-project-forked/docs/graphql/objects"},"Objects"),", ",(0,n.kt)("a",{parentName:"li",href:"/datahub-project-forked/docs/graphql/inputObjects"},"Input Objects"),", ",(0,n.kt)("a",{parentName:"li",href:"/datahub-project-forked/docs/graphql/interfaces"},"Interfaces"),", ",(0,n.kt)("a",{parentName:"li",href:"/datahub-project-forked/docs/graphql/unions"},"Unions"),", ",(0,n.kt)("a",{parentName:"li",href:"/datahub-project-forked/docs/graphql/enums"},"Enums"),", ",(0,n.kt)("a",{parentName:"li",href:"/datahub-project-forked/docs/graphql/scalars"},"Scalars"))),(0,n.kt)("h2",{id:"on-the-horizon"},"On the Horizon"),(0,n.kt)("p",null,"The GraphQL API undergoing continuous development. A few of the things we're most excited about can be found below."),(0,n.kt)("h3",{id:"supporting-additional-use-cases"},"Supporting Additional Use Cases"),(0,n.kt)("p",null,"DataHub plans to support the following use cases via the GraphQL API:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Creating entities"),": Programmatically creating Datasets, Dashboards, Charts, Data Flows (Pipelines), Data Jobs (Tasks) and more.")),(0,n.kt)("h3",{id:"client-sdks"},"Client SDKs"),(0,n.kt)("p",null,"DataHub plans to develop Open Source Client SDKs for Python, Java, Javascript among others on top of this API. If you're interested\nin contributing, ",(0,n.kt)("a",{parentName:"p",href:"https://datahubspace.slack.com/join/shared_invite/zt-nx7i0dj7-I3IJYC551vpnvvjIaNRRGw#/shared-invite/email"},"join us on Slack"),"!"),(0,n.kt)("h2",{id:"feedback-feature-requests--support"},"Feedback, Feature Requests, & Support"),(0,n.kt)("p",null,"Visit our ",(0,n.kt)("a",{parentName:"p",href:"https://slack.datahubproject.io"},"Slack channel")," to ask questions, tell us what we can do better, & make requests for what you'd like to see in the future. Or just\nstop by to say 'Hi'."))}c.isMDXComponent=!0}}]);