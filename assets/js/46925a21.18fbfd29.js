"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[3817],{3905:(s,a,e)=>{e.d(a,{Zo:()=>i,kt:()=>u});var n=e(67294);function l(s,a,e){return a in s?Object.defineProperty(s,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):s[a]=e,s}function t(s,a){var e=Object.keys(s);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(s);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(s,a).enumerable}))),e.push.apply(e,n)}return e}function p(s){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?t(Object(e),!0).forEach((function(a){l(s,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(e)):t(Object(e)).forEach((function(a){Object.defineProperty(s,a,Object.getOwnPropertyDescriptor(e,a))}))}return s}function c(s,a){if(null==s)return{};var e,n,l=function(s,a){if(null==s)return{};var e,n,l={},t=Object.keys(s);for(n=0;n<t.length;n++)e=t[n],a.indexOf(e)>=0||(l[e]=s[e]);return l}(s,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(s);for(n=0;n<t.length;n++)e=t[n],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(s,e)&&(l[e]=s[e])}return l}var r=n.createContext({}),d=function(s){var a=n.useContext(r),e=a;return s&&(e="function"==typeof s?s(a):p(p({},a),s)),e},i=function(s){var a=d(s.components);return n.createElement(r.Provider,{value:a},s.children)},o={inlineCode:"code",wrapper:function(s){var a=s.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(s,a){var e=s.components,l=s.mdxType,t=s.originalType,r=s.parentName,i=c(s,["components","mdxType","originalType","parentName"]),m=d(e),u=l,y=m["".concat(r,".").concat(u)]||m[u]||o[u]||t;return e?n.createElement(y,p(p({ref:a},i),{},{components:e})):n.createElement(y,p({ref:a},i))}));function u(s,a){var e=arguments,l=a&&a.mdxType;if("string"==typeof s||l){var t=e.length,p=new Array(t);p[0]=m;var c={};for(var r in a)hasOwnProperty.call(a,r)&&(c[r]=a[r]);c.originalType=s,c.mdxType="string"==typeof s?s:l,p[1]=c;for(var d=2;d<t;d++)p[d]=e[d];return n.createElement.apply(null,p)}return n.createElement.apply(null,e)}m.displayName="MDXCreateElement"},99051:(s,a,e)=>{e.r(a),e.d(a,{assets:()=>r,contentTitle:()=>p,default:()=>o,frontMatter:()=>t,metadata:()=>c,toc:()=>d});var n=e(83117),l=(e(67294),e(3905));const t={title:"Client"},p=void 0,c={unversionedId:"python-sdk/clients",id:"python-sdk/clients",title:"Client",description:"\\n\\n\\nThe Kafka emitter or Rest emitter can be used to push metadata to DataHub.\\nThe DataHub graph client extends the Rest emitter with additional functionality.\\n\\n\\nclass datahub.emitter.restemitter.DataHubRestEmitter(gmsserver, token=None, connecttimeoutsec=None, readtimeoutsec=None, retrystatuscodes=None, retrymethods=None, retrymaxtimes=None, extraheaders=None, cacertificatepath=None, servertelemetryid=None, disablesslverification=False)\\nBases\\n\\ngmsserver (str)\\ntoken (Optional[str])\\nconnecttimeoutsec (Optional[float])\\nreadtimeoutsec (Optional[float])\\nretrystatuscodes (Optional[List[int]])\\nretrymethods (Optional[List[str]])\\nretrymaxtimes (Optional[int])\\nextraheaders (Optional[Dict[str, str]])\\ncacertificatepath (Optional[str])\\nservertelemetryid (Optional[str])\\ndisablesslverification (bool)\\n\\n\\n\\n\\n\\ntestconnection()\\n\\nReturn type\\n\\nitem (Union[MetadataChangeEventClass, MetadataChangeProposalClass, MetadataChangeProposalWrapper, UsageAggregationClass])\\ncallback (Optional[Callable[[Exception, str], None]])\\n\\n\\nReturn type\\nmce (MetadataChangeEventClass)\\n\\nReturn type\\nmcp (Union[MetadataChangeProposalClass, MetadataChangeProposalWrapper])\\n\\nReturn type\\nusageStats (UsageAggregationClass)\\n\\nReturn type\\nNone\\n\\n\\n\\n\\n\\n\\ndatahub.emitter.restemitter.DatahubRestEmitter\\nalias of DataHubRestEmitter\\n\\n\\n\\nclass datahub.emitter.kafkaemitter.KafkaEmitterConfig(**data)\\nBases\\n\\ndata (Any)\\nconnection (KafkaProducerConnectionConfig)\\ntopicroutes (Dict[str, str])\\n\\n\\n\\n\\n\\nconnection Dict[str, str]\\n\\n\\n\\nclassmethod validatetopicroutes(v)\\n\\nParameters\\nDict[str, str]\\n\\n\\n\\n\\n\\n\\nclass datahub.emitter.kafkaemitter.DatahubKafkaEmitter(config)\\nBases\\nconfig (KafkaEmitterConfig)\\n\\n\\n\\n\\nemit(item, callback=None)\\n\\nParameters\\nNone\\n\\n\\n\\n\\n\\nemitmceasync(mce, callback)\\n\\nParameters\\nNone\\n\\n\\n\\n\\n\\nemitmcpasync(mcp, callback)\\n\\nParameters\\nNone\\n\\n\\n\\n\\n\\nflush()\\n\\nReturn type ConfigModel\\nConfiguration class for holding connectivity to datahub gms\\n\\nParameters str\\n\\n\\n\\ntoken Optional[int]\\n\\n\\n\\nretrystatuscodes Optional[int]\\n\\n\\n\\nextraheaders Optional[str]\\n\\n\\n\\nmaxthreads bool\\n\\n\\n\\n\\ndatahub.ingestion.graph.client.DataHubGraphConfig\\nalias of DatahubClientConfig\\n\\n\\n\\nclass datahub.ingestion.graph.client.DataHubGraph(config)\\nBases\\nconfig (DatahubClientConfig)\\n\\n\\n\\n\\ngetaspect(entityurn, aspecttype, version=0)\\nGet an aspect for an entity.\\n\\nParameters\\nOptional[TypeVar(Aspect, bound= Aspect)]\\n\\nReturns\\n\\nTypeError \\u2013 if the aspect type is a timeseries aspect\\nHttpError \\u2013 if the HTTP response is not a 200 or a 404\\n\\n\\n\\n\\n\\n\\ngetaspectv2(entityurn, aspecttype, aspect, aspecttypename=None, version=0)\\n\\nParameters\\nOptional[TypeVar(Aspect, bound= Aspect)]\\n\\n\\n\\n\\n\\ngetconfig()\\n\\nReturn type\\nentityurn (str)\\n\\nReturn type\\nentityurn (str)\\n\\nReturn type\\nentityurn (str)\\n\\nReturn type\\nentityurn (str)\\n\\nReturn type\\nentityurn (str)\\n\\nReturn type\\nentityurn (str)\\n\\nReturn type\\nentityurn (str)\\n\\nReturn type\\nentityurn (str)\\n\\nReturn type\\n\\nentityurn (str)\\nstarttimestamp (int)\\nendtimestamp (int)\\n\\n\\nReturn type\\n\\nentitytype (str)\\nstart (int)\\ncount (int)\\n\\n\\nReturn type\\n\\nentityurn (str)\\naspecttype (Type[TypeVar(Aspect, bound= Aspect)])\\nfiltercriteriamap (Dict[str, str])\\n\\n\\nReturn type Do not use this method to determine if an entity exists!\\nThis method will always return an entity, even if it doesn\\u2019t exist. This is an issue with how DataHub server\\nresponds to these calls, and will be fixed automatically when the server-side issue is fixed.\\n\\nParameters\\nOptional[Dict[str, Optional[TypeVar(Aspect, bound= Aspect)]]]\\n\\nReturns\\nHttpError \\u2013 if the HTTP response is not a 200 or a 404\\n\\n\\n\\n\\n\\ngetdomainurnbyname(domainname)\\nRetrieve a domain urn based on its name. Returns None if there is no match found\\n\\nParameters\\nOptional[str]\\n\\n\\n\\n\\n\\ngetcontainerurnsbyfilter(env=None, searchquery='*')\\nReturn container urns that match based on query\\n\\nParameters\\nIterable[str]\\n\\n\\n\\n\\n\\ngetsearchresults(start=0, count=1, entity='dataset')\\n\\nParameters\\nDict\\n\\n\\n\\n\\n\\ngetaspectcounts(aspect, urnlike=None)\\n\\nParameters\\nint\\n\\n\\n\\n\\n\\nclass RelationshipDirection(value)\\nBases object\\n\\nParameters str\\n\\n\\n\\nrelationshiptype\\n\\nentityurn (str)\\nrelationshiptypes (List[str])\\ndirection (RelationshipDirection)\\n\\n\\nReturn type\\nDataHubGraph\\n\\n\\n\\n\\n\"}}>",source:"@site/genDocs/python-sdk/clients.md",sourceDirName:"python-sdk",slug:"/python-sdk/clients",permalink:"/datahub-project-forked/docs/python-sdk/clients",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/genDocs/python-sdk/clients.md",tags:[],version:"current",frontMatter:{title:"Client"},sidebar:"overviewSidebar",previous:{title:"Builder",permalink:"/datahub-project-forked/docs/python-sdk/builder"},next:{title:"Models",permalink:"/datahub-project-forked/docs/python-sdk/models"}},r={},d=[],i={toc:d};function o(s){let{components:a,...e}=s;return(0,l.kt)("wrapper",(0,n.Z)({},i,e,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("div",{dangerouslySetInnerHTML:{__html:'<article class="bd-article" role="main">\n<section id="client">\n\n<p>The Kafka emitter or Rest emitter can be used to push metadata to DataHub.\nThe DataHub graph client extends the Rest emitter with additional functionality.</p>\n<span class="target" id="module-datahub.emitter.rest_emitter"></span><dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.rest_emitter.</span></span><span class="sig-name descname"><span class="pre">DataHubRestEmitter</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">gms_server</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">token</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">connect_timeout_sec</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">read_timeout_sec</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">retry_status_codes</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">retry_methods</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">retry_max_times</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">extra_headers</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">ca_certificate_path</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">server_telemetry_id</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">disable_ssl_verification</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">Closeable</span></code></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>gms_server</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>token</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>connect_timeout_sec</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">float</span></code>])</p></li>\n<li><p><strong>read_timeout_sec</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">float</span></code>])</p></li>\n<li><p><strong>retry_status_codes</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>]])</p></li>\n<li><p><strong>retry_methods</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]])</p></li>\n<li><p><strong>retry_max_times</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>])</p></li>\n<li><p><strong>extra_headers</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]])</p></li>\n<li><p><strong>ca_certificate_path</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>server_telemetry_id</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>disable_ssl_verification</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.test_connection">\n<span class="sig-name descname"><span class="pre">test_connection</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.emit">\n<span class="sig-name descname"><span class="pre">emit</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">item</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">callback</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>item</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>, <a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeProposalClass" title="datahub.metadata.schema_classes.MetadataChangeProposalClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalClass</span></code></a>, <a class="reference internal" href="builder.html#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>, <a class="reference internal" href="models.html#datahub.metadata.schema_classes.UsageAggregationClass" title="datahub.metadata.schema_classes.UsageAggregationClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">UsageAggregationClass</span></code></a>])</p></li>\n<li><p><strong>callback</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-data docutils literal notranslate"><span class="pre">Callable</span></code>[[<code class="xref py py-class docutils literal notranslate"><span class="pre">Exception</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>], <code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code>]])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Tuple</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">datetime</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">datetime</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.emit_mce">\n<span class="sig-name descname"><span class="pre">emit_mce</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mce</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>mce</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.emit_mcp">\n<span class="sig-name descname"><span class="pre">emit_mcp</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mcp</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>mcp</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeProposalClass" title="datahub.metadata.schema_classes.MetadataChangeProposalClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalClass</span></code></a>, <a class="reference internal" href="builder.html#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>])</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.emit_usage">\n<span class="sig-name descname"><span class="pre">emit_usage</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">usageStats</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>usageStats</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.UsageAggregationClass" title="datahub.metadata.schema_classes.UsageAggregationClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">UsageAggregationClass</span></code></a>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.close">\n<span class="sig-name descname"><span class="pre">close</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n</dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DatahubRestEmitter">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.rest_emitter.</span></span><span class="sig-name descname"><span class="pre">DatahubRestEmitter</span></span></dt>\n<dd><p>alias of <a class="reference internal" href="#datahub.emitter.rest_emitter.DataHubRestEmitter" title="datahub.emitter.rest_emitter.DataHubRestEmitter"><code class="xref py py-class docutils literal notranslate"><span class="pre">DataHubRestEmitter</span></code></a></p>\n</dd></dl>\n<span class="target" id="module-datahub.emitter.kafka_emitter"></span><dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.KafkaEmitterConfig">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.kafka_emitter.</span></span><span class="sig-name descname"><span class="pre">KafkaEmitterConfig</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">ConfigModel</span></code></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>connection</strong> (<em>KafkaProducerConnectionConfig</em>)</p></li>\n<li><p><strong>topic_routes</strong> (<em>Dict</em><em>[</em><em>str</em><em>, </em><em>str</em><em>]</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.KafkaEmitterConfig.connection">\n<span class="sig-name descname"><span class="pre">connection</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">KafkaProducerConnectionConfig</span></code></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.KafkaEmitterConfig.topic_routes">\n<span class="sig-name descname"><span class="pre">topic_routes</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">,</span> <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">]</span></em></dt>\n<dd></dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.KafkaEmitterConfig.validate_topic_routes">\n<em class="property"><span class="pre">classmethod</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">validate_topic_routes</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">v</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>v</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.DatahubKafkaEmitter">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.kafka_emitter.</span></span><span class="sig-name descname"><span class="pre">DatahubKafkaEmitter</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">config</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">object</span></code></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>config</strong> (<a class="reference internal" href="#datahub.emitter.kafka_emitter.KafkaEmitterConfig" title="datahub.emitter.kafka_emitter.KafkaEmitterConfig"><code class="xref py py-class docutils literal notranslate"><span class="pre">KafkaEmitterConfig</span></code></a>)</p>\n</dd>\n</dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.DatahubKafkaEmitter.emit">\n<span class="sig-name descname"><span class="pre">emit</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">item</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">callback</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>item</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>, <a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeProposalClass" title="datahub.metadata.schema_classes.MetadataChangeProposalClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalClass</span></code></a>, <a class="reference internal" href="builder.html#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>])</p></li>\n<li><p><strong>callback</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-data docutils literal notranslate"><span class="pre">Callable</span></code>[[<code class="xref py py-class docutils literal notranslate"><span class="pre">Exception</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>], <code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code>]])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.DatahubKafkaEmitter.emit_mce_async">\n<span class="sig-name descname"><span class="pre">emit_mce_async</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mce</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">callback</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>mce</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>)</p></li>\n<li><p><strong>callback</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Callable</span></code>[[<code class="xref py py-class docutils literal notranslate"><span class="pre">Exception</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>], <code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.DatahubKafkaEmitter.emit_mcp_async">\n<span class="sig-name descname"><span class="pre">emit_mcp_async</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mcp</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">callback</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>mcp</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeProposalClass" title="datahub.metadata.schema_classes.MetadataChangeProposalClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalClass</span></code></a>, <a class="reference internal" href="builder.html#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>])</p></li>\n<li><p><strong>callback</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Callable</span></code>[[<code class="xref py py-class docutils literal notranslate"><span class="pre">Exception</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>], <code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.DatahubKafkaEmitter.flush">\n<span class="sig-name descname"><span class="pre">flush</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n</dd></dl>\n<span class="target" id="module-datahub.ingestion.graph.client"></span><dl class="py class">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DatahubClientConfig">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.ingestion.graph.client.</span></span><span class="sig-name descname"><span class="pre">DatahubClientConfig</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">ConfigModel</span></code></p>\n<p>Configuration class for holding connectivity to datahub gms</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>server</strong> (<em>str</em>)</p></li>\n<li><p><strong>token</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>timeout_sec</strong> (<em>int</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>retry_status_codes</strong> (<em>List</em><em>[</em><em>int</em><em>] </em><em>| </em><em>None</em>)</p></li>\n<li><p><strong>retry_max_times</strong> (<em>int</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>extra_headers</strong> (<em>Dict</em><em>[</em><em>str</em><em>, </em><em>str</em><em>] </em><em>| </em><em>None</em>)</p></li>\n<li><p><strong>ca_certificate_path</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>max_threads</strong> (<em>int</em>)</p></li>\n<li><p><strong>disable_ssl_verification</strong> (<em>bool</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DatahubClientConfig.server">\n<span class="sig-name descname"><span class="pre">server</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DatahubClientConfig.token">\n<span class="sig-name descname"><span class="pre">token</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DatahubClientConfig.timeout_sec">\n<span class="sig-name descname"><span class="pre">timeout_sec</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code><span class="pre">]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DatahubClientConfig.retry_status_codes">\n<span class="sig-name descname"><span class="pre">retry_status_codes</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code><span class="pre">]]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DatahubClientConfig.retry_max_times">\n<span class="sig-name descname"><span class="pre">retry_max_times</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code><span class="pre">]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DatahubClientConfig.extra_headers">\n<span class="sig-name descname"><span class="pre">extra_headers</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">,</span> <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">]]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DatahubClientConfig.ca_certificate_path">\n<span class="sig-name descname"><span class="pre">ca_certificate_path</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DatahubClientConfig.max_threads">\n<span class="sig-name descname"><span class="pre">max_threads</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DatahubClientConfig.disable_ssl_verification">\n<span class="sig-name descname"><span class="pre">disable_ssl_verification</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraphConfig">\n<span class="sig-prename descclassname"><span class="pre">datahub.ingestion.graph.client.</span></span><span class="sig-name descname"><span class="pre">DataHubGraphConfig</span></span></dt>\n<dd><p>alias of <a class="reference internal" href="#datahub.ingestion.graph.client.DatahubClientConfig" title="datahub.ingestion.graph.client.DatahubClientConfig"><code class="xref py py-class docutils literal notranslate"><span class="pre">DatahubClientConfig</span></code></a></p>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.ingestion.graph.client.</span></span><span class="sig-name descname"><span class="pre">DataHubGraph</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">config</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <a class="reference internal" href="#datahub.emitter.rest_emitter.DataHubRestEmitter" title="datahub.emitter.rest_emitter.DataHubRestEmitter"><code class="xref py py-class docutils literal notranslate"><span class="pre">DataHubRestEmitter</span></code></a></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>config</strong> (<a class="reference internal" href="#datahub.ingestion.graph.client.DatahubClientConfig" title="datahub.ingestion.graph.client.DatahubClientConfig"><code class="xref py py-class docutils literal notranslate"><span class="pre">DatahubClientConfig</span></code></a>)</p>\n</dd>\n</dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_aspect">\n<span class="sig-name descname"><span class="pre">get_aspect</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">version</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Get an aspect for an entity.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the entity</p></li>\n<li><p><strong>aspect_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]) \u2013 The type class of the aspect being requested (e.g. datahub.metadata.schema_classes.DatasetProperties)</p></li>\n<li><p><strong>version</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>) \u2013 The version of the aspect to retrieve. The default of 0 means latest. Versions &gt; 0 go from oldest to newest, so 1 is the oldest.</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]</p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>the Aspect as a dictionary if present, None if no aspect was found (HTTP status 404)</p>\n</dd>\n<dt class="field-even">Raises<span class="colon">:</span></dt>\n<dd class="field-even"><ul class="simple">\n<li><p><strong>TypeError</strong> \u2013 if the aspect type is a timeseries aspect</p></li>\n<li><p><strong>HttpError</strong> \u2013 if the HTTP response is not a 200 or a 404</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_aspect_v2">\n<span class="sig-name descname"><span class="pre">get_aspect_v2</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_type_name</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">version</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>aspect_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)])</p></li>\n<li><p><strong>aspect</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>aspect_type_name</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>version</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_config">\n<span class="sig-name descname"><span class="pre">get_config</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_ownership">\n<span class="sig-name descname"><span class="pre">get_ownership</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.OwnershipClass" title="datahub.metadata.schema_classes.OwnershipClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">OwnershipClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_schema_metadata">\n<span class="sig-name descname"><span class="pre">get_schema_metadata</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.SchemaMetadataClass" title="datahub.metadata.schema_classes.SchemaMetadataClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">SchemaMetadataClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_domain_properties">\n<span class="sig-name descname"><span class="pre">get_domain_properties</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.DomainPropertiesClass" title="datahub.metadata.schema_classes.DomainPropertiesClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">DomainPropertiesClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_dataset_properties">\n<span class="sig-name descname"><span class="pre">get_dataset_properties</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.DatasetPropertiesClass" title="datahub.metadata.schema_classes.DatasetPropertiesClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">DatasetPropertiesClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_tags">\n<span class="sig-name descname"><span class="pre">get_tags</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.GlobalTagsClass" title="datahub.metadata.schema_classes.GlobalTagsClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">GlobalTagsClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_glossary_terms">\n<span class="sig-name descname"><span class="pre">get_glossary_terms</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.GlossaryTermsClass" title="datahub.metadata.schema_classes.GlossaryTermsClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">GlossaryTermsClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_domain">\n<span class="sig-name descname"><span class="pre">get_domain</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.DomainsClass" title="datahub.metadata.schema_classes.DomainsClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">DomainsClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_browse_path">\n<span class="sig-name descname"><span class="pre">get_browse_path</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.BrowsePathsClass" title="datahub.metadata.schema_classes.BrowsePathsClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">BrowsePathsClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_usage_aspects_from_urn">\n<span class="sig-name descname"><span class="pre">get_usage_aspects_from_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">start_timestamp</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">end_timestamp</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>start_timestamp</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n<li><p><strong>end_timestamp</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.DatasetUsageStatisticsClass" title="datahub.metadata.schema_classes.DatasetUsageStatisticsClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">DatasetUsageStatisticsClass</span></code></a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.list_all_entity_urns">\n<span class="sig-name descname"><span class="pre">list_all_entity_urns</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">start</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">count</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>start</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n<li><p><strong>count</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_latest_timeseries_value">\n<span class="sig-name descname"><span class="pre">get_latest_timeseries_value</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">filter_criteria_map</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>aspect_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)])</p></li>\n<li><p><strong>filter_criteria_map</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_aspects_for_entity">\n<span class="sig-name descname"><span class="pre">get_aspects_for_entity</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspects</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_types</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Get multiple aspects for an entity. To get a single aspect for an entity, use the <cite>get_aspect_v2</cite> method.\nWarning: Do not use this method to determine if an entity exists!\nThis method will always return an entity, even if it doesn\u2019t exist. This is an issue with how DataHub server\nresponds to these calls, and will be fixed automatically when the server-side issue is fixed.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the entity</p></li>\n<li><p><strong>aspect_type_list</strong> (<em>List</em><em>[</em><em>Type</em><em>[</em><em>Aspect</em><em>]</em><em>]</em>) \u2013 List of aspect type classes being requested (e.g. [datahub.metadata.schema_classes.DatasetProperties])</p></li>\n<li><p><strong>aspects_list</strong> (<em>List</em><em>[</em><em>str</em><em>]</em>) \u2013 List of aspect names being requested (e.g. [schemaMetadata, datasetProperties])</p></li>\n<li><p><strong>entity_urn</strong></p></li>\n<li><p><strong>aspects</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>aspect_types</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]]]</p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>Optionally, a map of aspect_name to aspect_value as a dictionary if present, aspect_value will be set to None if that aspect was not found. Returns None on HTTP status 404.</p>\n</dd>\n<dt class="field-even">Raises<span class="colon">:</span></dt>\n<dd class="field-even"><p><strong>HttpError</strong> \u2013 if the HTTP response is not a 200 or a 404</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_domain_urn_by_name">\n<span class="sig-name descname"><span class="pre">get_domain_urn_by_name</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">domain_name</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Retrieve a domain urn based on its name. Returns None if there is no match found</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>domain_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_container_urns_by_filter">\n<span class="sig-name descname"><span class="pre">get_container_urns_by_filter</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">env</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">search_query</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'*\'</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Return container urns that match based on query</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>env</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>search_query</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_search_results">\n<span class="sig-name descname"><span class="pre">get_search_results</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">start</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">count</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">1</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">entity</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'dataset\'</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>start</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n<li><p><strong>count</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n<li><p><strong>entity</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_aspect_counts">\n<span class="sig-name descname"><span class="pre">get_aspect_counts</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">aspect</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">urn_like</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>aspect</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>urn_like</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.RelationshipDirection">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">RelationshipDirection</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">value</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">Enum</span></code></p>\n<p>An enumeration.</p>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.RelationshipDirection.INCOMING">\n<span class="sig-name descname"><span class="pre">INCOMING</span></span><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'INCOMING\'</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.RelationshipDirection.OUTGOING">\n<span class="sig-name descname"><span class="pre">OUTGOING</span></span><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'OUTGOING\'</span></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.RelatedEntity">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">RelatedEntity</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">relationship_type</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">object</span></code></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>relationship_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.RelatedEntity.urn">\n<span class="sig-name descname"><span class="pre">urn</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.RelatedEntity.relationship_type">\n<span class="sig-name descname"><span class="pre">relationship_type</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_related_entities">\n<span class="sig-name descname"><span class="pre">get_related_entities</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">relationship_types</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">direction</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>relationship_types</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>direction</strong> (<a class="reference internal" href="#datahub.ingestion.graph.client.DataHubGraph.RelationshipDirection" title="datahub.ingestion.graph.client.DataHubGraph.RelationshipDirection"><code class="xref py py-class docutils literal notranslate"><span class="pre">RelationshipDirection</span></code></a>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<a class="reference internal" href="#datahub.ingestion.graph.client.DataHubGraph.RelatedEntity" title="datahub.ingestion.graph.client.DataHubGraph.RelatedEntity"><code class="xref py py-class docutils literal notranslate"><span class="pre">RelatedEntity</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.get_default_graph">\n<span class="sig-prename descclassname"><span class="pre">datahub.ingestion.graph.client.</span></span><span class="sig-name descname"><span class="pre">get_default_graph</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><a class="reference internal" href="#datahub.ingestion.graph.client.DataHubGraph" title="datahub.ingestion.graph.client.DataHubGraph"><code class="xref py py-class docutils literal notranslate"><span class="pre">DataHubGraph</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n</section>\n</article>'}}))}o.isMDXComponent=!0}}]);