"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[5897],{3905:(n,e,t)=>{t.d(e,{Zo:()=>m,kt:()=>p});var a=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function r(n,e){if(null==n)return{};var t,a,i=function(n,e){if(null==n)return{};var t,a,i={},o=Object.keys(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var l=a.createContext({}),d=function(n){var e=a.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},m=function(n){var e=d(n.components);return a.createElement(l.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(n,e){var t=n.components,i=n.mdxType,o=n.originalType,l=n.parentName,m=r(n,["components","mdxType","originalType","parentName"]),u=d(t),p=i,h=u["".concat(l,".").concat(p)]||u[p]||c[p]||o;return t?a.createElement(h,s(s({ref:e},m),{},{components:t})):a.createElement(h,s({ref:e},m))}));function p(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=t.length,s=new Array(o);s[0]=u;var r={};for(var l in e)hasOwnProperty.call(e,l)&&(r[l]=e[l]);r.originalType=n,r.mdxType="string"==typeof n?n:i,s[1]=r;for(var d=2;d<o;d++)s[d]=t[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},81502:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var a=t(83117),i=(t(67294),t(3905));const o={sidebar_position:2,title:"DataJob",slug:"/generated/metamodel/entities/datajob",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/dataJob.md"},s="DataJob",r={unversionedId:"docs/generated/metamodel/entities/dataJob",id:"docs/generated/metamodel/entities/dataJob",title:"DataJob",description:"Aspects",source:"@site/genDocs/docs/generated/metamodel/entities/dataJob.md",sourceDirName:"docs/generated/metamodel/entities",slug:"/generated/metamodel/entities/datajob",permalink:"/datahub-project-forked/docs/generated/metamodel/entities/datajob",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/dataJob.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"DataJob",slug:"/generated/metamodel/entities/datajob",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/dataJob.md"},sidebar:"overviewSidebar",previous:{title:"Dataset",permalink:"/datahub-project-forked/docs/generated/metamodel/entities/dataset"},next:{title:"DataFlow",permalink:"/datahub-project-forked/docs/generated/metamodel/entities/dataflow"}},l={},d=[{value:"Aspects",id:"aspects",level:2},{value:"dataJobKey",id:"datajobkey",level:3},{value:"dataJobInfo",id:"datajobinfo",level:3},{value:"dataJobInputOutput",id:"datajobinputoutput",level:3},{value:"editableDataJobProperties",id:"editabledatajobproperties",level:3},{value:"ownership",id:"ownership",level:3},{value:"status",id:"status",level:3},{value:"globalTags",id:"globaltags",level:3},{value:"browsePaths",id:"browsepaths",level:3},{value:"glossaryTerms",id:"glossaryterms",level:3},{value:"institutionalMemory",id:"institutionalmemory",level:3},{value:"dataPlatformInstance",id:"dataplatforminstance",level:3},{value:"domains",id:"domains",level:3},{value:"deprecation",id:"deprecation",level:3},{value:"versionInfo",id:"versioninfo",level:3},{value:"datahubIngestionRunSummary (Timeseries)",id:"datahubingestionrunsummary-timeseries",level:3},{value:"datahubIngestionCheckpoint (Timeseries)",id:"datahubingestioncheckpoint-timeseries",level:3},{value:"Relationships",id:"relationships",level:2},{value:"Self",id:"self",level:3},{value:"Outgoing",id:"outgoing",level:3},{value:"Incoming",id:"incoming",level:3},{value:"Global Metadata Model",id:"global-metadata-model",level:2}],m={toc:d};function c(n){let{components:e,...t}=n;return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"datajob"},"DataJob"),(0,i.kt)("h2",{id:"aspects"},"Aspects"),(0,i.kt)("h3",{id:"datajobkey"},"dataJobKey"),(0,i.kt)("p",null,"Key for a Data Job"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dataJobKey"\n  },\n  "name": "DataJobKey",\n  "namespace": "com.linkedin.metadata.key",\n  "fields": [\n    {\n      "Relationship": {\n        "entityTypes": [\n          "dataFlow"\n        ],\n        "name": "IsPartOf"\n      },\n      "Searchable": {\n        "fieldName": "dataFlow",\n        "fieldType": "URN_PARTIAL",\n        "queryByDefault": false\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "flow",\n      "doc": "Standardized data processing flow urn representing the flow for the job"\n    },\n    {\n      "Searchable": {\n        "enableAutocomplete": true,\n        "fieldType": "TEXT_PARTIAL"\n      },\n      "type": "string",\n      "name": "jobId",\n      "doc": "Unique Identifier of the data job"\n    }\n  ],\n  "doc": "Key for a Data Job"\n}\n'))),(0,i.kt)("h3",{id:"datajobinfo"},"dataJobInfo"),(0,i.kt)("p",null,"Information about a Data processing job"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dataJobInfo"\n  },\n  "name": "DataJobInfo",\n  "namespace": "com.linkedin.datajob",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "queryByDefault": true\n        }\n      },\n      "type": {\n        "type": "map",\n        "values": "string"\n      },\n      "name": "customProperties",\n      "default": {},\n      "doc": "Custom property bag."\n    },\n    {\n      "java": {\n        "class": "com.linkedin.common.url.Url",\n        "coercerClass": "com.linkedin.common.url.UrlCoercer"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "externalUrl",\n      "default": null,\n      "doc": "URL where the reference exist"\n    },\n    {\n      "Searchable": {\n        "boostScore": 10.0,\n        "enableAutocomplete": true,\n        "fieldType": "TEXT_PARTIAL"\n      },\n      "type": "string",\n      "name": "name",\n      "doc": "Job name"\n    },\n    {\n      "Searchable": {\n        "fieldType": "TEXT",\n        "hasValuesFieldName": "hasDescription"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "description",\n      "default": null,\n      "doc": "Job description"\n    },\n    {\n      "type": [\n        {\n          "type": "enum",\n          "symbolDocs": {\n            "COMMAND": "The command job type is one of the basic built-in types. It runs multiple UNIX commands using java processbuilder.\\nUpon execution, Azkaban spawns off a process to run the command.",\n            "GLUE": "Glue type is for running AWS Glue job transforms.",\n            "HADOOP_JAVA": "Runs a java program with ability to access Hadoop cluster.\\nhttps://azkaban.readthedocs.io/en/latest/jobTypes.html#java-job-type",\n            "HADOOP_SHELL": "In large part, this is the same Command type. The difference is its ability to talk to a Hadoop cluster\\nsecurely, via Hadoop tokens.",\n            "HIVE": "Hive type is for running Hive jobs.",\n            "PIG": "Pig type is for running Pig jobs.",\n            "SQL": "SQL is for running Presto, mysql queries etc"\n          },\n          "name": "AzkabanJobType",\n          "namespace": "com.linkedin.datajob.azkaban",\n          "symbols": [\n            "COMMAND",\n            "HADOOP_JAVA",\n            "HADOOP_SHELL",\n            "HIVE",\n            "PIG",\n            "SQL",\n            "GLUE"\n          ],\n          "doc": "The various types of support azkaban jobs"\n        },\n        "string"\n      ],\n      "name": "type",\n      "doc": "Datajob type\\n*NOTE**: AzkabanJobType is deprecated. Please use strings instead."\n    },\n    {\n      "java": {\n        "class": "com.linkedin.common.urn.DataFlowUrn"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "flowUrn",\n      "default": null,\n      "doc": "DataFlow urn that this job is part of"\n    },\n    {\n      "Searchable": {\n        "/time": {\n          "fieldName": "createdAt",\n          "fieldType": "DATETIME"\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "TimeStamp",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "type": "long",\n              "name": "time",\n              "doc": "When did the event occur"\n            },\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "actor",\n              "default": null,\n              "doc": "Optional: The actor urn involved in the event."\n            }\n          ],\n          "doc": "A standard event timestamp"\n        }\n      ],\n      "name": "created",\n      "default": null,\n      "doc": "A timestamp documenting when the asset was created in the source Data Platform (not on DataHub)"\n    },\n    {\n      "Searchable": {\n        "/time": {\n          "fieldName": "lastModifiedAt",\n          "fieldType": "DATETIME"\n        }\n      },\n      "type": [\n        "null",\n        "com.linkedin.common.TimeStamp"\n      ],\n      "name": "lastModified",\n      "default": null,\n      "doc": "A timestamp documenting when the asset was last modified in the source Data Platform (not on DataHub)"\n    },\n    {\n      "deprecated": "Use Data Process Instance model, instead",\n      "type": [\n        "null",\n        {\n          "type": "enum",\n          "symbolDocs": {\n            "COMPLETED": "Jobs with successful completion.",\n            "FAILED": "Jobs that have failed.",\n            "IN_PROGRESS": "Jobs currently running.",\n            "SKIPPED": "Jobs that have been skipped.",\n            "STARTING": "Jobs being initialized.",\n            "STOPPED": "Jobs that have stopped.",\n            "STOPPING": "Jobs being stopped.",\n            "UNKNOWN": "Jobs with unknown status (either unmappable or unavailable)"\n          },\n          "name": "JobStatus",\n          "namespace": "com.linkedin.datajob",\n          "symbols": [\n            "STARTING",\n            "IN_PROGRESS",\n            "STOPPING",\n            "STOPPED",\n            "COMPLETED",\n            "FAILED",\n            "UNKNOWN",\n            "SKIPPED"\n          ],\n          "doc": "Job statuses"\n        }\n      ],\n      "name": "status",\n      "default": null,\n      "doc": "Status of the job - Deprecated for Data Process Instance model."\n    }\n  ],\n  "doc": "Information about a Data processing job"\n}\n'))),(0,i.kt)("h3",{id:"datajobinputoutput"},"dataJobInputOutput"),(0,i.kt)("p",null,"Information about the inputs and outputs of a Data processing job"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dataJobInputOutput"\n  },\n  "name": "DataJobInputOutput",\n  "namespace": "com.linkedin.datajob",\n  "fields": [\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "dataset"\n          ],\n          "isLineage": true,\n          "name": "Consumes"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "fieldName": "inputs",\n          "fieldType": "URN",\n          "numValuesFieldName": "numInputDatasets",\n          "queryByDefault": false\n        }\n      },\n      "deprecated": true,\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "inputDatasets",\n      "doc": "Input datasets consumed by the data job during processing\\nDeprecated! Use inputDatasetEdges instead."\n    },\n    {\n      "Relationship": {\n        "/*/destinationUrn": {\n          "createdActor": "inputDatasetEdges/*/created/actor",\n          "createdOn": "inputDatasetEdges/*/created/time",\n          "entityTypes": [\n            "dataset"\n          ],\n          "isLineage": true,\n          "name": "Consumes",\n          "properties": "inputDatasetEdges/*/properties",\n          "updatedActor": "inputDatasetEdges/*/lastModified/actor",\n          "updatedOn": "inputDatasetEdges/*/lastModified/time"\n        }\n      },\n      "Searchable": {\n        "/*/destinationUrn": {\n          "fieldName": "inputDatasetEdges",\n          "fieldType": "URN",\n          "numValuesFieldName": "numInputDatasets",\n          "queryByDefault": false\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": {\n            "type": "record",\n            "name": "Edge",\n            "namespace": "com.linkedin.common",\n            "fields": [\n              {\n                "java": {\n                  "class": "com.linkedin.common.urn.Urn"\n                },\n                "type": "string",\n                "name": "sourceUrn",\n                "doc": "Urn of the source of this relationship edge."\n              },\n              {\n                "java": {\n                  "class": "com.linkedin.common.urn.Urn"\n                },\n                "type": "string",\n                "name": "destinationUrn",\n                "doc": "Urn of the destination of this relationship edge."\n              },\n              {\n                "type": {\n                  "type": "record",\n                  "name": "AuditStamp",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "impersonator",\n                      "default": null,\n                      "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "message",\n                      "default": null,\n                      "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                    }\n                  ],\n                  "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                },\n                "name": "created",\n                "doc": "Audit stamp containing who created this relationship edge and when"\n              },\n              {\n                "type": "com.linkedin.common.AuditStamp",\n                "name": "lastModified",\n                "doc": "Audit stamp containing who last modified this relationship edge and when"\n              },\n              {\n                "type": [\n                  "null",\n                  {\n                    "type": "map",\n                    "values": "string"\n                  }\n                ],\n                "name": "properties",\n                "default": null,\n                "doc": "A generic properties bag that allows us to store specific information on this graph edge."\n              }\n            ],\n            "doc": "Information about a relatonship edge."\n          }\n        }\n      ],\n      "name": "inputDatasetEdges",\n      "default": null,\n      "doc": "Input datasets consumed by the data job during processing"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "dataset"\n          ],\n          "isLineage": true,\n          "isUpstream": false,\n          "name": "Produces"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "fieldName": "outputs",\n          "fieldType": "URN",\n          "numValuesFieldName": "numOutputDatasets",\n          "queryByDefault": false\n        }\n      },\n      "deprecated": true,\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "outputDatasets",\n      "doc": "Output datasets produced by the data job during processing\\nDeprecated! Use outputDatasetEdges instead."\n    },\n    {\n      "Relationship": {\n        "/*/destinationUrn": {\n          "createdActor": "outputDatasetEdges/*/created/actor",\n          "createdOn": "outputDatasetEdges/*/created/time",\n          "entityTypes": [\n            "dataset"\n          ],\n          "isLineage": true,\n          "isUpstream": false,\n          "name": "Produces",\n          "properties": "outputDatasetEdges/*/properties",\n          "updatedActor": "outputDatasetEdges/*/lastModified/actor",\n          "updatedOn": "outputDatasetEdges/*/lastModified/time"\n        }\n      },\n      "Searchable": {\n        "/*/destinationUrn": {\n          "fieldName": "outputDatasetEdges",\n          "fieldType": "URN",\n          "numValuesFieldName": "numOutputDatasets",\n          "queryByDefault": false\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "com.linkedin.common.Edge"\n        }\n      ],\n      "name": "outputDatasetEdges",\n      "default": null,\n      "doc": "Output datasets produced by the data job during processing"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "dataJob"\n          ],\n          "isLineage": true,\n          "name": "DownstreamOf"\n        }\n      },\n      "deprecated": true,\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "inputDatajobs",\n      "default": null,\n      "doc": "Input datajobs that this data job depends on\\nDeprecated! Use inputDatajobEdges instead."\n    },\n    {\n      "Relationship": {\n        "/*/destinationUrn": {\n          "createdActor": "inputDatajobEdges/*/created/actor",\n          "createdOn": "inputDatajobEdges/*/created/time",\n          "entityTypes": [\n            "dataJob"\n          ],\n          "isLineage": true,\n          "name": "DownstreamOf",\n          "properties": "inputDatajobEdges/*/properties",\n          "updatedActor": "inputDatajobEdges/*/lastModified/actor",\n          "updatedOn": "inputDatajobEdges/*/lastModified/time"\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "com.linkedin.common.Edge"\n        }\n      ],\n      "name": "inputDatajobEdges",\n      "default": null,\n      "doc": "Input datajobs that this data job depends on"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "schemaField"\n          ],\n          "name": "Consumes"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "fieldName": "inputFields",\n          "fieldType": "URN",\n          "numValuesFieldName": "numInputFields",\n          "queryByDefault": false\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "inputDatasetFields",\n      "default": null,\n      "doc": "Fields of the input datasets used by this job"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "schemaField"\n          ],\n          "name": "Produces"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "fieldName": "outputFields",\n          "fieldType": "URN",\n          "numValuesFieldName": "numOutputFields",\n          "queryByDefault": false\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "outputDatasetFields",\n      "default": null,\n      "doc": "Fields of the output datasets this job writes to"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": {\n            "type": "record",\n            "name": "FineGrainedLineage",\n            "namespace": "com.linkedin.dataset",\n            "fields": [\n              {\n                "type": {\n                  "type": "enum",\n                  "symbolDocs": {\n                    "DATASET": " Indicates that this lineage is originating from upstream dataset(s)",\n                    "FIELD_SET": " Indicates that this lineage is originating from upstream field(s)",\n                    "NONE": " Indicates that there is no upstream lineage i.e. the downstream field is not a derived field"\n                  },\n                  "name": "FineGrainedLineageUpstreamType",\n                  "namespace": "com.linkedin.dataset",\n                  "symbols": [\n                    "FIELD_SET",\n                    "DATASET",\n                    "NONE"\n                  ],\n                  "doc": "The type of upstream entity in a fine-grained lineage"\n                },\n                "name": "upstreamType",\n                "doc": "The type of upstream entity"\n              },\n              {\n                "type": [\n                  "null",\n                  {\n                    "type": "array",\n                    "items": "string"\n                  }\n                ],\n                "name": "upstreams",\n                "default": null,\n                "doc": "Upstream entities in the lineage"\n              },\n              {\n                "type": {\n                  "type": "enum",\n                  "symbolDocs": {\n                    "FIELD": " Indicates that the lineage is for a single, specific, downstream field",\n                    "FIELD_SET": " Indicates that the lineage is for a set of downstream fields"\n                  },\n                  "name": "FineGrainedLineageDownstreamType",\n                  "namespace": "com.linkedin.dataset",\n                  "symbols": [\n                    "FIELD",\n                    "FIELD_SET"\n                  ],\n                  "doc": "The type of downstream field(s) in a fine-grained lineage"\n                },\n                "name": "downstreamType",\n                "doc": "The type of downstream field(s)"\n              },\n              {\n                "type": [\n                  "null",\n                  {\n                    "type": "array",\n                    "items": "string"\n                  }\n                ],\n                "name": "downstreams",\n                "default": null,\n                "doc": "Downstream fields in the lineage"\n              },\n              {\n                "type": [\n                  "null",\n                  "string"\n                ],\n                "name": "transformOperation",\n                "default": null,\n                "doc": "The transform operation applied to the upstream entities to produce the downstream field(s)"\n              },\n              {\n                "type": "float",\n                "name": "confidenceScore",\n                "default": 1.0,\n                "doc": "The confidence in this lineage between 0 (low confidence) and 1 (high confidence)"\n              }\n            ],\n            "doc": "A fine-grained lineage from upstream fields/datasets to downstream field(s)"\n          }\n        }\n      ],\n      "name": "fineGrainedLineages",\n      "default": null,\n      "doc": "Fine-grained column-level lineages"\n    }\n  ],\n  "doc": "Information about the inputs and outputs of a Data processing job"\n}\n'))),(0,i.kt)("h3",{id:"editabledatajobproperties"},"editableDataJobProperties"),(0,i.kt)("p",null,"Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "editableDataJobProperties"\n  },\n  "name": "EditableDataJobProperties",\n  "namespace": "com.linkedin.datajob",\n  "fields": [\n    {\n      "type": {\n        "type": "record",\n        "name": "AuditStamp",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": "long",\n            "name": "time",\n            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": "string",\n            "name": "actor",\n            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "impersonator",\n            "default": null,\n            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n          },\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "message",\n            "default": null,\n            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n          }\n        ],\n        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n      },\n      "name": "created",\n      "default": {\n        "actor": "urn:li:corpuser:unknown",\n        "impersonator": null,\n        "time": 0,\n        "message": null\n      },\n      "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data."\n    },\n    {\n      "type": "com.linkedin.common.AuditStamp",\n      "name": "lastModified",\n      "default": {\n        "actor": "urn:li:corpuser:unknown",\n        "impersonator": null,\n        "time": 0,\n        "message": null\n      },\n      "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data."\n    },\n    {\n      "type": [\n        "null",\n        "com.linkedin.common.AuditStamp"\n      ],\n      "name": "deleted",\n      "default": null,\n      "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."\n    },\n    {\n      "Searchable": {\n        "fieldName": "editedDescription",\n        "fieldType": "TEXT"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "description",\n      "default": null,\n      "doc": "Edited documentation of the data job "\n    }\n  ],\n  "doc": "Stores editable changes made to properties. This separates changes made from\\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines"\n}\n'))),(0,i.kt)("h3",{id:"ownership"},"ownership"),(0,i.kt)("p",null,"Ownership information of an entity."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "ownership"\n  },\n  "name": "Ownership",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "Owner",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "corpuser",\n                  "corpGroup"\n                ],\n                "name": "OwnedBy"\n              },\n              "Searchable": {\n                "addToFilters": true,\n                "fieldName": "owners",\n                "fieldType": "URN",\n                "filterNameOverride": "Owned By",\n                "hasValuesFieldName": "hasOwners",\n                "queryByDefault": false\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "owner",\n              "doc": "Owner URN, e.g. urn:li:corpuser:ldap, urn:li:corpGroup:group_name, and urn:li:multiProduct:mp_name\\n(Caveat: only corpuser is currently supported in the frontend.)"\n            },\n            {\n              "type": {\n                "type": "enum",\n                "symbolDocs": {\n                  "BUSINESS_OWNER": "A person or group who is responsible for logical, or business related, aspects of the asset.",\n                  "CONSUMER": "A person, group, or service that consumes the data\\nDeprecated! Use TECHNICAL_OWNER or BUSINESS_OWNER instead.",\n                  "DATAOWNER": "A person or group that is owning the data\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "DATA_STEWARD": "A steward, expert, or delegate responsible for the asset.",\n                  "DELEGATE": "A person or a group that overseas the operation, e.g. a DBA or SRE.\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "DEVELOPER": "A person or group that is in charge of developing the code\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "NONE": "No specific type associated to the owner.",\n                  "PRODUCER": "A person, group, or service that produces/generates the data\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "STAKEHOLDER": "A person or a group that has direct business interest\\nDeprecated! Use TECHNICAL_OWNER, BUSINESS_OWNER, or STEWARD instead.",\n                  "TECHNICAL_OWNER": "person or group who is responsible for technical aspects of the asset."\n                },\n                "deprecatedSymbols": {\n                  "CONSUMER": true,\n                  "DATAOWNER": true,\n                  "DELEGATE": true,\n                  "DEVELOPER": true,\n                  "PRODUCER": true,\n                  "STAKEHOLDER": true\n                },\n                "name": "OwnershipType",\n                "namespace": "com.linkedin.common",\n                "symbols": [\n                  "TECHNICAL_OWNER",\n                  "BUSINESS_OWNER",\n                  "DATA_STEWARD",\n                  "NONE",\n                  "DEVELOPER",\n                  "DATAOWNER",\n                  "DELEGATE",\n                  "PRODUCER",\n                  "CONSUMER",\n                  "STAKEHOLDER"\n                ],\n                "doc": "Asset owner types"\n              },\n              "name": "type",\n              "doc": "The type of the ownership"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "OwnershipSource",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": {\n                        "type": "enum",\n                        "symbolDocs": {\n                          "AUDIT": "Auditing system or audit logs",\n                          "DATABASE": "Database, e.g. GRANTS table",\n                          "FILE_SYSTEM": "File system, e.g. file/directory owner",\n                          "ISSUE_TRACKING_SYSTEM": "Issue tracking system, e.g. Jira",\n                          "MANUAL": "Manually provided by a user",\n                          "OTHER": "Other sources",\n                          "SERVICE": "Other ownership-like service, e.g. Nuage, ACL service etc",\n                          "SOURCE_CONTROL": "SCM system, e.g. GIT, SVN"\n                        },\n                        "name": "OwnershipSourceType",\n                        "namespace": "com.linkedin.common",\n                        "symbols": [\n                          "AUDIT",\n                          "DATABASE",\n                          "FILE_SYSTEM",\n                          "ISSUE_TRACKING_SYSTEM",\n                          "MANUAL",\n                          "SERVICE",\n                          "SOURCE_CONTROL",\n                          "OTHER"\n                        ]\n                      },\n                      "name": "type",\n                      "doc": "The type of the source"\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "url",\n                      "default": null,\n                      "doc": "A reference URL for the source"\n                    }\n                  ],\n                  "doc": "Source/provider of the ownership information"\n                }\n              ],\n              "name": "source",\n              "default": null,\n              "doc": "Source information for the ownership"\n            }\n          ],\n          "doc": "Ownership information"\n        }\n      },\n      "name": "owners",\n      "doc": "List of owners of the entity."\n    },\n    {\n      "type": {\n        "type": "record",\n        "name": "AuditStamp",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": "long",\n            "name": "time",\n            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": "string",\n            "name": "actor",\n            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "impersonator",\n            "default": null,\n            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n          },\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "message",\n            "default": null,\n            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n          }\n        ],\n        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n      },\n      "name": "lastModified",\n      "default": {\n        "actor": "urn:li:corpuser:unknown",\n        "impersonator": null,\n        "time": 0,\n        "message": null\n      },\n      "doc": "Audit stamp containing who last modified the record and when. A value of 0 in the time field indicates missing data."\n    }\n  ],\n  "doc": "Ownership information of an entity."\n}\n'))),(0,i.kt)("h3",{id:"status"},"status"),(0,i.kt)("p",null,"The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.\nThis aspect is used to represent soft deletes conventionally."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "status"\n  },\n  "name": "Status",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "fieldType": "BOOLEAN"\n      },\n      "type": "boolean",\n      "name": "removed",\n      "default": false,\n      "doc": "Whether the entity has been removed (soft-deleted)."\n    }\n  ],\n  "doc": "The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.\\nThis aspect is used to represent soft deletes conventionally."\n}\n'))),(0,i.kt)("h3",{id:"globaltags"},"globalTags"),(0,i.kt)("p",null,"Tag aspect used for applying tags to an entity"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "globalTags"\n  },\n  "name": "GlobalTags",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*/tag": {\n          "addToFilters": true,\n          "boostScore": 0.5,\n          "fieldName": "tags",\n          "fieldType": "URN",\n          "queryByDefault": true\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "TagAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "tag"\n                ],\n                "name": "TaggedWith"\n              },\n              "Searchable": {\n                "addToFilters": true,\n                "fieldName": "tags",\n                "fieldType": "URN",\n                "filterNameOverride": "Tag",\n                "hasValuesFieldName": "hasTags"\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.TagUrn"\n              },\n              "type": "string",\n              "name": "tag",\n              "doc": "Urn of the applied tag"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "context",\n              "default": null,\n              "doc": "Additional context about the association"\n            }\n          ],\n          "doc": "Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\\npropagation parameters."\n        }\n      },\n      "name": "tags",\n      "doc": "Tags associated with a given entity"\n    }\n  ],\n  "doc": "Tag aspect used for applying tags to an entity"\n}\n'))),(0,i.kt)("h3",{id:"browsepaths"},"browsePaths"),(0,i.kt)("p",null,"Shared aspect containing Browse Paths to be indexed for an entity."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "browsePaths"\n  },\n  "name": "BrowsePaths",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "fieldName": "browsePaths",\n          "fieldType": "BROWSE_PATH"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "paths",\n      "doc": "A list of valid browse paths for the entity.\\n\\nBrowse paths are expected to be forward slash-separated strings. For example: \'prod/snowflake/datasetName\'"\n    }\n  ],\n  "doc": "Shared aspect containing Browse Paths to be indexed for an entity."\n}\n'))),(0,i.kt)("h3",{id:"glossaryterms"},"glossaryTerms"),(0,i.kt)("p",null,"Related business terms information"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "glossaryTerms"\n  },\n  "name": "GlossaryTerms",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "GlossaryTermAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "glossaryTerm"\n                ],\n                "name": "TermedWith"\n              },\n              "Searchable": {\n                "addToFilters": true,\n                "fieldName": "glossaryTerms",\n                "fieldType": "URN",\n                "filterNameOverride": "Glossary Term",\n                "hasValuesFieldName": "hasGlossaryTerms"\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.GlossaryTermUrn"\n              },\n              "type": "string",\n              "name": "urn",\n              "doc": "Urn of the applied glossary term"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "context",\n              "default": null,\n              "doc": "Additional context about the association"\n            }\n          ],\n          "doc": "Properties of an applied glossary term."\n        }\n      },\n      "name": "terms",\n      "doc": "The related business terms"\n    },\n    {\n      "type": {\n        "type": "record",\n        "name": "AuditStamp",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": "long",\n            "name": "time",\n            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": "string",\n            "name": "actor",\n            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "impersonator",\n            "default": null,\n            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n          },\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "message",\n            "default": null,\n            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n          }\n        ],\n        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n      },\n      "name": "auditStamp",\n      "doc": "Audit stamp containing who reported the related business term"\n    }\n  ],\n  "doc": "Related business terms information"\n}\n'))),(0,i.kt)("h3",{id:"institutionalmemory"},"institutionalMemory"),(0,i.kt)("p",null,"Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "institutionalMemory"\n  },\n  "name": "InstitutionalMemory",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "InstitutionalMemoryMetadata",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.url.Url",\n                "coercerClass": "com.linkedin.common.url.UrlCoercer"\n              },\n              "type": "string",\n              "name": "url",\n              "doc": "Link to an engineering design document or a wiki page."\n            },\n            {\n              "type": "string",\n              "name": "description",\n              "doc": "Description of the link."\n            },\n            {\n              "type": {\n                "type": "record",\n                "name": "AuditStamp",\n                "namespace": "com.linkedin.common",\n                "fields": [\n                  {\n                    "type": "long",\n                    "name": "time",\n                    "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                  },\n                  {\n                    "java": {\n                      "class": "com.linkedin.common.urn.Urn"\n                    },\n                    "type": "string",\n                    "name": "actor",\n                    "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                  },\n                  {\n                    "java": {\n                      "class": "com.linkedin.common.urn.Urn"\n                    },\n                    "type": [\n                      "null",\n                      "string"\n                    ],\n                    "name": "impersonator",\n                    "default": null,\n                    "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                  },\n                  {\n                    "type": [\n                      "null",\n                      "string"\n                    ],\n                    "name": "message",\n                    "default": null,\n                    "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                  }\n                ],\n                "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n              },\n              "name": "createStamp",\n              "doc": "Audit stamp associated with creation of this record"\n            }\n          ],\n          "doc": "Metadata corresponding to a record of institutional memory."\n        }\n      },\n      "name": "elements",\n      "doc": "List of records that represent institutional memory of an entity. Each record consists of a link, description, creator and timestamps associated with that record."\n    }\n  ],\n  "doc": "Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity."\n}\n'))),(0,i.kt)("h3",{id:"dataplatforminstance"},"dataPlatformInstance"),(0,i.kt)("p",null,"The specific instance of the data platform that this entity belongs to"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dataPlatformInstance"\n  },\n  "name": "DataPlatformInstance",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldType": "URN",\n        "filterNameOverride": "Platform"\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "platform",\n      "doc": "Data Platform"\n    },\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldName": "platformInstance",\n        "fieldType": "URN",\n        "filterNameOverride": "Platform Instance"\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "instance",\n      "default": null,\n      "doc": "Instance of the data platform (e.g. db instance)"\n    }\n  ],\n  "doc": "The specific instance of the data platform that this entity belongs to"\n}\n'))),(0,i.kt)("h3",{id:"domains"},"domains"),(0,i.kt)("p",null,"Links from an Asset to its Domains"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "domains"\n  },\n  "name": "Domains",\n  "namespace": "com.linkedin.domain",\n  "fields": [\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "domain"\n          ],\n          "name": "AssociatedWith"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "addToFilters": true,\n          "fieldName": "domains",\n          "fieldType": "URN",\n          "filterNameOverride": "Domain",\n          "hasValuesFieldName": "hasDomain"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "domains",\n      "doc": "The Domains attached to an Asset"\n    }\n  ],\n  "doc": "Links from an Asset to its Domains"\n}\n'))),(0,i.kt)("h3",{id:"deprecation"},"deprecation"),(0,i.kt)("p",null,"Deprecation status of an entity"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "deprecation"\n  },\n  "name": "Deprecation",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "fieldType": "BOOLEAN",\n        "weightsPerFieldValue": {\n          "true": 0.5\n        }\n      },\n      "type": "boolean",\n      "name": "deprecated",\n      "doc": "Whether the entity is deprecated."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "decommissionTime",\n      "default": null,\n      "doc": "The time user plan to decommission this entity."\n    },\n    {\n      "type": "string",\n      "name": "note",\n      "doc": "Additional information about the entity deprecation plan, such as the wiki, doc, RB."\n    },\n    {\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "actor",\n      "doc": "The user URN which will be credited for modifying this deprecation content."\n    }\n  ],\n  "doc": "Deprecation status of an entity"\n}\n'))),(0,i.kt)("h3",{id:"versioninfo"},"versionInfo"),(0,i.kt)("p",null,"Information about a Data processing job"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "versionInfo"\n  },\n  "name": "VersionInfo",\n  "namespace": "com.linkedin.datajob",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "queryByDefault": true\n        }\n      },\n      "type": {\n        "type": "map",\n        "values": "string"\n      },\n      "name": "customProperties",\n      "default": {},\n      "doc": "Custom property bag."\n    },\n    {\n      "java": {\n        "class": "com.linkedin.common.url.Url",\n        "coercerClass": "com.linkedin.common.url.UrlCoercer"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "externalUrl",\n      "default": null,\n      "doc": "URL where the reference exist"\n    },\n    {\n      "type": "string",\n      "name": "version",\n      "doc": "The version which can indentify a job version like a commit hash or md5 hash"\n    },\n    {\n      "type": "string",\n      "name": "versionType",\n      "doc": "The type of the version like git hash or md5 hash"\n    }\n  ],\n  "doc": "Information about a Data processing job"\n}\n'))),(0,i.kt)("h3",{id:"datahubingestionrunsummary-timeseries"},"datahubIngestionRunSummary (Timeseries)"),(0,i.kt)("p",null,"Summary of a datahub ingestion run for a given platform."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "datahubIngestionRunSummary",\n    "type": "timeseries"\n  },\n  "name": "DatahubIngestionRunSummary",\n  "namespace": "com.linkedin.datajob.datahub",\n  "fields": [\n    {\n      "type": "long",\n      "name": "timestampMillis",\n      "doc": "The event timestamp field as epoch at UTC in milli seconds."\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "TimeWindowSize",\n          "namespace": "com.linkedin.timeseries",\n          "fields": [\n            {\n              "type": {\n                "type": "enum",\n                "name": "CalendarInterval",\n                "namespace": "com.linkedin.timeseries",\n                "symbols": [\n                  "SECOND",\n                  "MINUTE",\n                  "HOUR",\n                  "DAY",\n                  "WEEK",\n                  "MONTH",\n                  "QUARTER",\n                  "YEAR"\n                ]\n              },\n              "name": "unit",\n              "doc": "Interval unit such as minute/hour/day etc."\n            },\n            {\n              "type": "int",\n              "name": "multiple",\n              "default": 1,\n              "doc": "How many units. Defaults to 1."\n            }\n          ],\n          "doc": "Defines the size of a time window."\n        }\n      ],\n      "name": "eventGranularity",\n      "default": null,\n      "doc": "Granularity of the event if applicable"\n    },\n    {\n      "type": [\n        {\n          "type": "record",\n          "name": "PartitionSpec",\n          "namespace": "com.linkedin.timeseries",\n          "fields": [\n            {\n              "type": {\n                "type": "enum",\n                "name": "PartitionType",\n                "namespace": "com.linkedin.timeseries",\n                "symbols": [\n                  "FULL_TABLE",\n                  "QUERY",\n                  "PARTITION"\n                ]\n              },\n              "name": "type",\n              "default": "PARTITION"\n            },\n            {\n              "TimeseriesField": {},\n              "type": "string",\n              "name": "partition",\n              "doc": "String representation of the partition"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "TimeWindow",\n                  "namespace": "com.linkedin.timeseries",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "startTimeMillis",\n                      "doc": "Start time as epoch at UTC."\n                    },\n                    {\n                      "type": "com.linkedin.timeseries.TimeWindowSize",\n                      "name": "length",\n                      "doc": "The length of the window."\n                    }\n                  ]\n                }\n              ],\n              "name": "timePartition",\n              "default": null,\n              "doc": "Time window of the partition if applicable"\n            }\n          ],\n          "doc": "Defines how the data is partitioned"\n        },\n        "null"\n      ],\n      "name": "partitionSpec",\n      "default": {\n        "partition": "FULL_TABLE_SNAPSHOT",\n        "type": "FULL_TABLE",\n        "timePartition": null\n      },\n      "doc": "The optional partition specification."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "messageId",\n      "default": null,\n      "doc": "The optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value."\n    },\n    {\n      "TimeseriesField": {},\n      "type": "string",\n      "name": "pipelineName",\n      "doc": "The name of the pipeline that ran ingestion, a stable unique user provided identifier.\\n e.g. my_snowflake1-to-datahub."\n    },\n    {\n      "TimeseriesField": {},\n      "type": "string",\n      "name": "platformInstanceId",\n      "doc": "The id of the instance against which the ingestion pipeline ran.\\ne.g.: Bigquery project ids, MySQL hostnames etc."\n    },\n    {\n      "TimeseriesField": {},\n      "type": "string",\n      "name": "runId",\n      "doc": "The runId for this pipeline instance."\n    },\n    {\n      "TimeseriesField": {},\n      "type": {\n        "type": "enum",\n        "symbolDocs": {\n          "COMPLETED": "Jobs with successful completion.",\n          "FAILED": "Jobs that have failed.",\n          "IN_PROGRESS": "Jobs currently running.",\n          "SKIPPED": "Jobs that have been skipped.",\n          "STARTING": "Jobs being initialized.",\n          "STOPPED": "Jobs that have stopped.",\n          "STOPPING": "Jobs being stopped.",\n          "UNKNOWN": "Jobs with unknown status (either unmappable or unavailable)"\n        },\n        "name": "JobStatus",\n        "namespace": "com.linkedin.datajob",\n        "symbols": [\n          "STARTING",\n          "IN_PROGRESS",\n          "STOPPING",\n          "STOPPED",\n          "COMPLETED",\n          "FAILED",\n          "UNKNOWN",\n          "SKIPPED"\n        ],\n        "doc": "Job statuses"\n      },\n      "name": "runStatus",\n      "doc": "Run Status - Succeeded/Skipped/Failed etc."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numWorkUnitsCommitted",\n      "default": null,\n      "doc": "The number of workunits written to sink."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numWorkUnitsCreated",\n      "default": null,\n      "doc": "The number of workunits that are produced."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numEvents",\n      "default": null,\n      "doc": "The number of events produced (MCE + MCP)."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numEntities",\n      "default": null,\n      "doc": "The total number of entities produced (unique entity urns)."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numAspects",\n      "default": null,\n      "doc": "The total number of aspects produced across all entities."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numSourceAPICalls",\n      "default": null,\n      "doc": "Total number of source API calls."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "totalLatencySourceAPICalls",\n      "default": null,\n      "doc": "Total latency across all source API calls."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numSinkAPICalls",\n      "default": null,\n      "doc": "Total number of sink API calls."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "totalLatencySinkAPICalls",\n      "default": null,\n      "doc": "Total latency across all sink API calls."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numWarnings",\n      "default": null,\n      "doc": "Number of warnings generated."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numErrors",\n      "default": null,\n      "doc": "Number of errors generated."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numEntitiesSkipped",\n      "default": null,\n      "doc": "Number of entities skipped."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "config",\n      "default": null,\n      "doc": "The non-sensitive key-value pairs of the yaml config used as json string."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "custom_summary",\n      "default": null,\n      "doc": "Custom value."\n    },\n    {\n      "TimeseriesField": {},\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "softwareVersion",\n      "default": null,\n      "doc": "The software version of this ingestion."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "systemHostName",\n      "default": null,\n      "doc": "The hostname the ingestion pipeline ran on."\n    },\n    {\n      "TimeseriesField": {},\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "operatingSystemName",\n      "default": null,\n      "doc": "The os the ingestion pipeline ran on."\n    },\n    {\n      "type": [\n        "null",\n        "int"\n      ],\n      "name": "numProcessors",\n      "default": null,\n      "doc": "The number of processors on the host the ingestion pipeline ran on."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "totalMemory",\n      "default": null,\n      "doc": "The total amount of memory on the host the ingestion pipeline ran on."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "availableMemory",\n      "default": null,\n      "doc": "The available memory on the host the ingestion pipeline ran on."\n    }\n  ],\n  "doc": "Summary of a datahub ingestion run for a given platform."\n}\n'))),(0,i.kt)("h3",{id:"datahubingestioncheckpoint-timeseries"},"datahubIngestionCheckpoint (Timeseries)"),(0,i.kt)("p",null,"Checkpoint of a datahub ingestion run for a given job."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "datahubIngestionCheckpoint",\n    "type": "timeseries"\n  },\n  "name": "DatahubIngestionCheckpoint",\n  "namespace": "com.linkedin.datajob.datahub",\n  "fields": [\n    {\n      "type": "long",\n      "name": "timestampMillis",\n      "doc": "The event timestamp field as epoch at UTC in milli seconds."\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "TimeWindowSize",\n          "namespace": "com.linkedin.timeseries",\n          "fields": [\n            {\n              "type": {\n                "type": "enum",\n                "name": "CalendarInterval",\n                "namespace": "com.linkedin.timeseries",\n                "symbols": [\n                  "SECOND",\n                  "MINUTE",\n                  "HOUR",\n                  "DAY",\n                  "WEEK",\n                  "MONTH",\n                  "QUARTER",\n                  "YEAR"\n                ]\n              },\n              "name": "unit",\n              "doc": "Interval unit such as minute/hour/day etc."\n            },\n            {\n              "type": "int",\n              "name": "multiple",\n              "default": 1,\n              "doc": "How many units. Defaults to 1."\n            }\n          ],\n          "doc": "Defines the size of a time window."\n        }\n      ],\n      "name": "eventGranularity",\n      "default": null,\n      "doc": "Granularity of the event if applicable"\n    },\n    {\n      "type": [\n        {\n          "type": "record",\n          "name": "PartitionSpec",\n          "namespace": "com.linkedin.timeseries",\n          "fields": [\n            {\n              "type": {\n                "type": "enum",\n                "name": "PartitionType",\n                "namespace": "com.linkedin.timeseries",\n                "symbols": [\n                  "FULL_TABLE",\n                  "QUERY",\n                  "PARTITION"\n                ]\n              },\n              "name": "type",\n              "default": "PARTITION"\n            },\n            {\n              "TimeseriesField": {},\n              "type": "string",\n              "name": "partition",\n              "doc": "String representation of the partition"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "TimeWindow",\n                  "namespace": "com.linkedin.timeseries",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "startTimeMillis",\n                      "doc": "Start time as epoch at UTC."\n                    },\n                    {\n                      "type": "com.linkedin.timeseries.TimeWindowSize",\n                      "name": "length",\n                      "doc": "The length of the window."\n                    }\n                  ]\n                }\n              ],\n              "name": "timePartition",\n              "default": null,\n              "doc": "Time window of the partition if applicable"\n            }\n          ],\n          "doc": "Defines how the data is partitioned"\n        },\n        "null"\n      ],\n      "name": "partitionSpec",\n      "default": {\n        "partition": "FULL_TABLE_SNAPSHOT",\n        "type": "FULL_TABLE",\n        "timePartition": null\n      },\n      "doc": "The optional partition specification."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "messageId",\n      "default": null,\n      "doc": "The optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value."\n    },\n    {\n      "TimeseriesField": {},\n      "type": "string",\n      "name": "pipelineName",\n      "doc": "The name of the pipeline that ran ingestion, a stable unique user provided identifier.\\n e.g. my_snowflake1-to-datahub."\n    },\n    {\n      "TimeseriesField": {},\n      "type": "string",\n      "name": "platformInstanceId",\n      "doc": "The id of the instance against which the ingestion pipeline ran.\\ne.g.: Bigquery project ids, MySQL hostnames etc."\n    },\n    {\n      "type": "string",\n      "name": "config",\n      "doc": "Json-encoded string representation of the non-secret members of the config ."\n    },\n    {\n      "type": {\n        "type": "record",\n        "name": "IngestionCheckpointState",\n        "namespace": "com.linkedin.datajob.datahub",\n        "fields": [\n          {\n            "type": "string",\n            "name": "formatVersion",\n            "doc": "The version of the state format."\n          },\n          {\n            "type": "string",\n            "name": "serde",\n            "doc": "The serialization/deserialization protocol."\n          },\n          {\n            "type": [\n              "null",\n              "bytes"\n            ],\n            "name": "payload",\n            "default": null,\n            "doc": "Opaque blob of the state representation."\n          }\n        ],\n        "doc": "The checkpoint state object of a datahub ingestion run for a given job."\n      },\n      "name": "state",\n      "doc": "Opaque blob of the state representation."\n    },\n    {\n      "TimeseriesField": {},\n      "type": "string",\n      "name": "runId",\n      "doc": "The run identifier of this job."\n    }\n  ],\n  "doc": "Checkpoint of a datahub ingestion run for a given job."\n}\n'))),(0,i.kt)("h2",{id:"relationships"},"Relationships"),(0,i.kt)("h3",{id:"self"},"Self"),(0,i.kt)("p",null,"These are the relationships to itself, stored in this entity's aspects"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"DownstreamOf (via ",(0,i.kt)("inlineCode",{parentName:"li"},"dataJobInputOutput.inputDatajobs"),")"),(0,i.kt)("li",{parentName:"ul"},"DownstreamOf (via ",(0,i.kt)("inlineCode",{parentName:"li"},"dataJobInputOutput.inputDatajobEdges"),")")),(0,i.kt)("h3",{id:"outgoing"},"Outgoing"),(0,i.kt)("p",null,"These are the relationships stored in this entity's aspects"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"IsPartOf"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"DataFlow via ",(0,i.kt)("inlineCode",{parentName:"li"},"dataJobKey.flow")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Consumes"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Dataset via ",(0,i.kt)("inlineCode",{parentName:"li"},"dataJobInputOutput.inputDatasets")),(0,i.kt)("li",{parentName:"ul"},"Dataset via ",(0,i.kt)("inlineCode",{parentName:"li"},"dataJobInputOutput.inputDatasetEdges")),(0,i.kt)("li",{parentName:"ul"},"SchemaField via ",(0,i.kt)("inlineCode",{parentName:"li"},"dataJobInputOutput.inputDatasetFields")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Produces"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Dataset via ",(0,i.kt)("inlineCode",{parentName:"li"},"dataJobInputOutput.outputDatasets")),(0,i.kt)("li",{parentName:"ul"},"Dataset via ",(0,i.kt)("inlineCode",{parentName:"li"},"dataJobInputOutput.outputDatasetEdges")),(0,i.kt)("li",{parentName:"ul"},"SchemaField via ",(0,i.kt)("inlineCode",{parentName:"li"},"dataJobInputOutput.outputDatasetFields")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"OwnedBy"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Corpuser via ",(0,i.kt)("inlineCode",{parentName:"li"},"ownership.owners.owner")),(0,i.kt)("li",{parentName:"ul"},"CorpGroup via ",(0,i.kt)("inlineCode",{parentName:"li"},"ownership.owners.owner")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"TaggedWith"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Tag via ",(0,i.kt)("inlineCode",{parentName:"li"},"globalTags.tags.tag")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"TermedWith"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"GlossaryTerm via ",(0,i.kt)("inlineCode",{parentName:"li"},"glossaryTerms.terms.urn")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"AssociatedWith"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Domain via ",(0,i.kt)("inlineCode",{parentName:"li"},"domains.domains"))))),(0,i.kt)("h3",{id:"incoming"},"Incoming"),(0,i.kt)("p",null,"These are the relationships stored in other entity's aspects"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"InstanceOf"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"DataProcessInstance via ",(0,i.kt)("inlineCode",{parentName:"li"},"dataProcessInstanceRelationships.parentTemplate")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"TrainedBy"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"MlModel via ",(0,i.kt)("inlineCode",{parentName:"li"},"mlModelProperties.trainingJobs")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"UsedBy"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"MlModel via ",(0,i.kt)("inlineCode",{parentName:"li"},"mlModelProperties.downstreamJobs"))))),(0,i.kt)("h2",{id:"global-metadata-model"},(0,i.kt)("a",{parentName:"h2",href:"https://github.com/datahub-project/datahub/raw/master/docs/imgs/datahub-metadata-model.png"},"Global Metadata Model")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/datahub-project/datahub/raw/master/docs/imgs/datahub-metadata-model.png",alt:"Global Graph"})))}c.isMDXComponent=!0}}]);